{"version":3,"file":"webworkerAll-D_oFjWwT.js","sources":["../../node_modules/pixi.js/lib/rendering/renderers/shared/utils/createIdFromString.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/getTestContext.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/getMaxFragmentPrecision.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/preprocessors/addProgramDefines.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/preprocessors/ensurePrecision.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/preprocessors/insertVersion.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/preprocessors/setProgramName.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/preprocessors/stripVersion.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/GlProgram.mjs","../../node_modules/pixi.js/lib/rendering/renderers/shared/geometry/utils/getAttributeInfoFromFormat.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gpu/shader/utils/extractAttributesFromGpuProgram.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gpu/shader/utils/extractStructAndGroups.mjs","../../node_modules/pixi.js/lib/rendering/renderers/shared/shader/const.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gpu/shader/utils/generateGpuLayoutGroups.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gpu/shader/utils/generateLayoutHash.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gpu/shader/utils/removeStructAndGroupDuplicates.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gpu/shader/GpuProgram.mjs","../../node_modules/pixi.js/lib/rendering/renderers/shared/shader/types.mjs","../../node_modules/pixi.js/lib/rendering/renderers/shared/shader/utils/getDefaultUniformValue.mjs","../../node_modules/pixi.js/lib/rendering/renderers/shared/shader/UniformGroup.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gpu/shader/BindGroup.mjs","../../node_modules/pixi.js/lib/rendering/renderers/types.mjs","../../node_modules/pixi.js/lib/rendering/renderers/shared/shader/Shader.mjs","../../node_modules/pixi.js/lib/rendering/renderers/shared/state/State.mjs","../../node_modules/pixi.js/lib/filters/Filter.mjs","../../node_modules/earcut/src/earcut.js","../../node_modules/pixi.js/lib/utils/utils.mjs","../../node_modules/pixi.js/lib/app/ResizePlugin.mjs","../../node_modules/pixi.js/lib/app/TickerPlugin.mjs","../../node_modules/pixi.js/lib/scene/text-bitmap/AbstractBitmapFont.mjs","../../node_modules/tiny-lru/dist/tiny-lru.js","../../node_modules/pixi.js/lib/scene/text/canvas/utils/fontStringFromTextStyle.mjs","../../node_modules/pixi.js/lib/scene/text/canvas/CanvasTextMetrics.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/fill/FillGradient.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/fill/FillPattern.mjs","../../node_modules/parse-svg-path/index.js","../../node_modules/pixi.js/lib/scene/graphics/shared/svg/parseSVGPath.mjs","../../node_modules/pixi.js/lib/maths/shapes/Circle.mjs","../../node_modules/pixi.js/lib/maths/shapes/Ellipse.mjs","../../node_modules/pixi.js/lib/maths/misc/squaredDistanceToLineSegment.mjs","../../node_modules/pixi.js/lib/maths/shapes/Polygon.mjs","../../node_modules/pixi.js/lib/maths/shapes/RoundedRectangle.mjs","../../node_modules/pixi.js/lib/rendering/batcher/gpu/getTextureBatchBindGroup.mjs","../../node_modules/pixi.js/lib/utils/data/ViewableBuffer.mjs","../../node_modules/pixi.js/lib/rendering/renderers/shared/buffer/utils/fastCopy.mjs","../../node_modules/pixi.js/lib/rendering/renderers/shared/state/const.mjs","../../node_modules/pixi.js/lib/rendering/renderers/shared/state/getAdjustedBlendModeBlend.mjs","../../node_modules/pixi.js/lib/rendering/batcher/gl/utils/checkMaxIfStatementsInShader.mjs","../../node_modules/pixi.js/lib/rendering/batcher/gl/utils/maxRecommendedTextures.mjs","../../node_modules/pixi.js/lib/rendering/batcher/shared/BatchTextureArray.mjs","../../node_modules/pixi.js/lib/rendering/batcher/shared/Batcher.mjs","../../node_modules/pixi.js/lib/rendering/renderers/shared/buffer/const.mjs","../../node_modules/pixi.js/lib/rendering/renderers/shared/buffer/Buffer.mjs","../../node_modules/pixi.js/lib/rendering/renderers/shared/geometry/utils/ensureIsBuffer.mjs","../../node_modules/pixi.js/lib/rendering/renderers/shared/geometry/utils/getGeometryBounds.mjs","../../node_modules/pixi.js/lib/rendering/renderers/shared/geometry/Geometry.mjs","../../node_modules/pixi.js/lib/rendering/batcher/shared/BatchGeometry.mjs","../../node_modules/pixi.js/lib/rendering/high-shader/compiler/utils/addBits.mjs","../../node_modules/pixi.js/lib/rendering/high-shader/compiler/utils/compileHooks.mjs","../../node_modules/pixi.js/lib/rendering/high-shader/compiler/utils/compileInputs.mjs","../../node_modules/pixi.js/lib/rendering/high-shader/compiler/utils/compileOutputs.mjs","../../node_modules/pixi.js/lib/rendering/high-shader/compiler/utils/injectBits.mjs","../../node_modules/pixi.js/lib/rendering/high-shader/compiler/compileHighShader.mjs","../../node_modules/pixi.js/lib/rendering/high-shader/defaultProgramTemplate.mjs","../../node_modules/pixi.js/lib/rendering/high-shader/shader-bits/globalUniformsBit.mjs","../../node_modules/pixi.js/lib/rendering/high-shader/compileHighShaderToProgram.mjs","../../node_modules/pixi.js/lib/rendering/high-shader/shader-bits/colorBit.mjs","../../node_modules/pixi.js/lib/rendering/high-shader/shader-bits/generateTextureBatchBit.mjs","../../node_modules/pixi.js/lib/rendering/high-shader/shader-bits/roundPixelsBit.mjs","../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/getBatchSamplersUniformGroup.mjs","../../node_modules/pixi.js/lib/rendering/batcher/shared/DefaultShader.mjs","../../node_modules/pixi.js/lib/rendering/batcher/shared/DefaultBatcher.mjs","../../node_modules/pixi.js/lib/rendering/renderers/shared/geometry/utils/buildUvs.mjs","../../node_modules/pixi.js/lib/rendering/renderers/shared/geometry/utils/transformVertices.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/BatchableGraphics.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildCircle.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/const.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/utils/getOrientationOfPoints.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildLine.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildPixelLine.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/utils/triangulateWithHoles.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildPolygon.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildRectangle.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildTriangle.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/utils/generateTextureFillMatrix.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/utils/buildContextBatches.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/GraphicsContextSystem.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildAdaptiveBezier.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildAdaptiveQuadratic.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildArc.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildArcTo.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildArcToSvg.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/path/roundShape.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/path/ShapePath.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/path/GraphicsPath.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/svg/parseSVGFloatAttribute.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/svg/parseSVGDefinitions.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/svg/utils/extractSvgUrlId.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/svg/parseSVGStyle.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/svg/utils/fillOperations.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/svg/utils/pathOperations.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/svg/SVGParser.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/utils/convertFillInputToFillStyle.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/GraphicsContext.mjs","../../node_modules/pixi.js/lib/scene/text/TextStyle.mjs","../../node_modules/pixi.js/lib/rendering/renderers/shared/texture/CanvasPool.mjs","../../node_modules/pixi.js/lib/scene/text/canvas/utils/getCanvasFillStyle.mjs","../../node_modules/pixi.js/lib/scene/text-bitmap/DynamicBitmapFont.mjs","../../node_modules/pixi.js/lib/scene/text-bitmap/utils/getBitmapTextLayout.mjs","../../node_modules/pixi.js/lib/scene/text-bitmap/utils/resolveCharacters.mjs","../../node_modules/pixi.js/lib/scene/text-bitmap/BitmapFontManager.mjs","../../node_modules/pixi.js/lib/filters/defaults/defaultFilter.vert.mjs","../../node_modules/pixi.js/lib/filters/defaults/passthrough/passthrough.frag.mjs","../../node_modules/pixi.js/lib/filters/defaults/passthrough/passthrough.wgsl.mjs","../../node_modules/pixi.js/lib/filters/defaults/passthrough/PassthroughFilter.mjs","../../node_modules/pixi.js/lib/filters/FilterPipe.mjs","../../node_modules/pixi.js/lib/scene/container/bounds/getRenderableBounds.mjs","../../node_modules/pixi.js/lib/filters/FilterSystem.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/Graphics.mjs","../../node_modules/pixi.js/lib/scene/mesh/shared/MeshGeometry.mjs","../../node_modules/pixi.js/lib/utils/canvas/getCanvasBoundingBox.mjs","../../node_modules/pixi.js/lib/scene/text/canvas/CanvasTextGenerator.mjs","../../node_modules/pixi.js/lib/scene/text-html/HTMLTextRenderData.mjs","../../node_modules/pixi.js/lib/scene/text-html/utils/measureHtmlText.mjs","../../node_modules/pixi.js/lib/rendering/high-shader/shader-bits/localUniformBit.mjs","../../node_modules/pixi.js/lib/scene/sprite/BatchableSprite.mjs","../../node_modules/pixi.js/lib/scene/graphics/gpu/colorToUniform.mjs","../../node_modules/pixi.js/lib/scene/graphics/shared/GraphicsPipe.mjs","../../node_modules/pixi.js/lib/scene/mesh-plane/PlaneGeometry.mjs","../../node_modules/pixi.js/lib/scene/mesh/shared/BatchableMesh.mjs","../../node_modules/pixi.js/lib/scene/mesh/shared/MeshPipe.mjs","../../node_modules/pixi.js/lib/scene/particle-container/gl/GlParticleContainerAdaptor.mjs","../../node_modules/pixi.js/lib/scene/particle-container/gpu/GpuParticleContainerAdaptor.mjs","../../node_modules/pixi.js/lib/scene/particle-container/shared/utils/createIndicesForQuads.mjs","../../node_modules/pixi.js/lib/scene/particle-container/shared/utils/generateParticleUpdateFunction.mjs","../../node_modules/pixi.js/lib/scene/particle-container/shared/ParticleBuffer.mjs","../../node_modules/pixi.js/lib/scene/particle-container/shared/shader/particles.frag.mjs","../../node_modules/pixi.js/lib/scene/particle-container/shared/shader/particles.vert.mjs","../../node_modules/pixi.js/lib/scene/particle-container/shared/shader/particles.wgsl.mjs","../../node_modules/pixi.js/lib/scene/particle-container/shared/shader/ParticleShader.mjs","../../node_modules/pixi.js/lib/scene/particle-container/shared/ParticleContainerPipe.mjs","../../node_modules/pixi.js/lib/scene/particle-container/shared/GlParticleContainerPipe.mjs","../../node_modules/pixi.js/lib/scene/particle-container/shared/GpuParticleContainerPipe.mjs","../../node_modules/pixi.js/lib/scene/sprite-nine-slice/NineSliceGeometry.mjs","../../node_modules/pixi.js/lib/scene/sprite-nine-slice/NineSliceSpritePipe.mjs","../../node_modules/pixi.js/lib/scene/sprite-tiling/shader/tilingBit.mjs","../../node_modules/pixi.js/lib/scene/sprite-tiling/shader/TilingSpriteShader.mjs","../../node_modules/pixi.js/lib/scene/sprite-tiling/utils/QuadGeometry.mjs","../../node_modules/pixi.js/lib/scene/sprite-tiling/utils/setPositions.mjs","../../node_modules/pixi.js/lib/scene/sprite-tiling/utils/applyMatrix.mjs","../../node_modules/pixi.js/lib/scene/sprite-tiling/utils/setUvs.mjs","../../node_modules/pixi.js/lib/scene/sprite-tiling/TilingSpritePipe.mjs","../../node_modules/pixi.js/lib/scene/text/sdfShader/shader-bits/localUniformMSDFBit.mjs","../../node_modules/pixi.js/lib/scene/text/sdfShader/shader-bits/mSDFBit.mjs","../../node_modules/pixi.js/lib/scene/text/sdfShader/SdfShader.mjs","../../node_modules/pixi.js/lib/scene/text-bitmap/BitmapTextPipe.mjs","../../node_modules/pixi.js/lib/scene/text-html/BatchableHTMLText.mjs","../../node_modules/pixi.js/lib/scene/text/utils/updateTextBounds.mjs","../../node_modules/pixi.js/lib/scene/text-html/HTMLTextPipe.mjs","../../node_modules/pixi.js/lib/utils/browser/isSafari.mjs","../../node_modules/pixi.js/lib/scene/text/utils/getPo2TextureFromSource.mjs","../../node_modules/pixi.js/lib/scene/text-html/utils/extractFontFamilies.mjs","../../node_modules/pixi.js/lib/scene/text-html/utils/loadFontAsBase64.mjs","../../node_modules/pixi.js/lib/scene/text-html/utils/loadFontCSS.mjs","../../node_modules/pixi.js/lib/scene/text-html/utils/getFontCss.mjs","../../node_modules/pixi.js/lib/scene/text-html/utils/getSVGUrl.mjs","../../node_modules/pixi.js/lib/scene/text-html/utils/getTemporaryCanvasFromImage.mjs","../../node_modules/pixi.js/lib/scene/text-html/utils/loadSVGImage.mjs","../../node_modules/pixi.js/lib/scene/text-html/HTMLTextSystem.mjs","../../node_modules/pixi.js/lib/scene/text/canvas/BatchableText.mjs","../../node_modules/pixi.js/lib/scene/text/canvas/CanvasTextPipe.mjs","../../node_modules/pixi.js/lib/scene/text/canvas/CanvasTextSystem.mjs","../../node_modules/pixi.js/lib/app/init.mjs","../../node_modules/pixi.js/lib/scene/graphics/init.mjs","../../node_modules/pixi.js/lib/scene/mesh/init.mjs","../../node_modules/pixi.js/lib/scene/particle-container/init.mjs","../../node_modules/pixi.js/lib/scene/text/init.mjs","../../node_modules/pixi.js/lib/scene/text-bitmap/init.mjs","../../node_modules/pixi.js/lib/scene/text-html/init.mjs","../../node_modules/pixi.js/lib/scene/sprite-tiling/init.mjs","../../node_modules/pixi.js/lib/scene/sprite-nine-slice/init.mjs","../../node_modules/pixi.js/lib/filters/init.mjs"],"sourcesContent":["\"use strict\";\nconst idCounts = /* @__PURE__ */ Object.create(null);\nconst idHash = /* @__PURE__ */ Object.create(null);\nfunction createIdFromString(value, groupId) {\n  let id = idHash[value];\n  if (id === void 0) {\n    if (idCounts[groupId] === void 0) {\n      idCounts[groupId] = 1;\n    }\n    idHash[value] = id = idCounts[groupId]++;\n  }\n  return id;\n}\n\nexport { createIdFromString };\n//# sourceMappingURL=createIdFromString.mjs.map\n","import { DOMAdapter } from '../../../../../environment/adapter.mjs';\n\n\"use strict\";\nlet context;\nfunction getTestContext() {\n  if (!context || context?.isContextLost()) {\n    const canvas = DOMAdapter.get().createCanvas();\n    context = canvas.getContext(\"webgl\", {});\n  }\n  return context;\n}\n\nexport { getTestContext };\n//# sourceMappingURL=getTestContext.mjs.map\n","import { getTestContext } from './getTestContext.mjs';\n\n\"use strict\";\nlet maxFragmentPrecision;\nfunction getMaxFragmentPrecision() {\n  if (!maxFragmentPrecision) {\n    maxFragmentPrecision = \"mediump\";\n    const gl = getTestContext();\n    if (gl) {\n      if (gl.getShaderPrecisionFormat) {\n        const shaderFragment = gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT);\n        maxFragmentPrecision = shaderFragment.precision ? \"highp\" : \"mediump\";\n      }\n    }\n  }\n  return maxFragmentPrecision;\n}\n\nexport { getMaxFragmentPrecision };\n//# sourceMappingURL=getMaxFragmentPrecision.mjs.map\n","\"use strict\";\nfunction addProgramDefines(src, isES300, isFragment) {\n  if (isES300)\n    return src;\n  if (isFragment) {\n    src = src.replace(\"out vec4 finalColor;\", \"\");\n    return `\n\n        #ifdef GL_ES // This checks if it is WebGL1\n        #define in varying\n        #define finalColor gl_FragColor\n        #define texture texture2D\n        #endif\n        ${src}\n        `;\n  }\n  return `\n\n        #ifdef GL_ES // This checks if it is WebGL1\n        #define in attribute\n        #define out varying\n        #endif\n        ${src}\n        `;\n}\n\nexport { addProgramDefines };\n//# sourceMappingURL=addProgramDefines.mjs.map\n","\"use strict\";\nfunction ensurePrecision(src, options, isFragment) {\n  const maxSupportedPrecision = isFragment ? options.maxSupportedFragmentPrecision : options.maxSupportedVertexPrecision;\n  if (src.substring(0, 9) !== \"precision\") {\n    let precision = isFragment ? options.requestedFragmentPrecision : options.requestedVertexPrecision;\n    if (precision === \"highp\" && maxSupportedPrecision !== \"highp\") {\n      precision = \"mediump\";\n    }\n    return `precision ${precision} float;\n${src}`;\n  } else if (maxSupportedPrecision !== \"highp\" && src.substring(0, 15) === \"precision highp\") {\n    return src.replace(\"precision highp\", \"precision mediump\");\n  }\n  return src;\n}\n\nexport { ensurePrecision };\n//# sourceMappingURL=ensurePrecision.mjs.map\n","\"use strict\";\nfunction insertVersion(src, isES300) {\n  if (!isES300)\n    return src;\n  return `#version 300 es\n${src}`;\n}\n\nexport { insertVersion };\n//# sourceMappingURL=insertVersion.mjs.map\n","\"use strict\";\nconst fragmentNameCache = {};\nconst VertexNameCache = {};\nfunction setProgramName(src, { name = `pixi-program` }, isFragment = true) {\n  name = name.replace(/\\s+/g, \"-\");\n  name += isFragment ? \"-fragment\" : \"-vertex\";\n  const nameCache = isFragment ? fragmentNameCache : VertexNameCache;\n  if (nameCache[name]) {\n    nameCache[name]++;\n    name += `-${nameCache[name]}`;\n  } else {\n    nameCache[name] = 1;\n  }\n  if (src.indexOf(\"#define SHADER_NAME\") !== -1)\n    return src;\n  const shaderName = `#define SHADER_NAME ${name}`;\n  return `${shaderName}\n${src}`;\n}\n\nexport { setProgramName };\n//# sourceMappingURL=setProgramName.mjs.map\n","\"use strict\";\nfunction stripVersion(src, isES300) {\n  if (!isES300)\n    return src;\n  return src.replace(\"#version 300 es\", \"\");\n}\n\nexport { stripVersion };\n//# sourceMappingURL=stripVersion.mjs.map\n","import { createIdFromString } from '../../shared/utils/createIdFromString.mjs';\nimport { getMaxFragmentPrecision } from './program/getMaxFragmentPrecision.mjs';\nimport { addProgramDefines } from './program/preprocessors/addProgramDefines.mjs';\nimport { ensurePrecision } from './program/preprocessors/ensurePrecision.mjs';\nimport { insertVersion } from './program/preprocessors/insertVersion.mjs';\nimport { setProgramName } from './program/preprocessors/setProgramName.mjs';\nimport { stripVersion } from './program/preprocessors/stripVersion.mjs';\n\n\"use strict\";\nconst processes = {\n  // strips any version headers..\n  stripVersion,\n  // adds precision string if not already present\n  ensurePrecision,\n  // add some defines if WebGL1 to make it more compatible with WebGL2 shaders\n  addProgramDefines,\n  // add the program name to the shader\n  setProgramName,\n  // add the version string to the shader header\n  insertVersion\n};\nconst programCache = /* @__PURE__ */ Object.create(null);\nconst _GlProgram = class _GlProgram {\n  /**\n   * Creates a shiny new GlProgram. Used by WebGL renderer.\n   * @param options - The options for the program.\n   */\n  constructor(options) {\n    options = { ..._GlProgram.defaultOptions, ...options };\n    const isES300 = options.fragment.indexOf(\"#version 300 es\") !== -1;\n    const preprocessorOptions = {\n      stripVersion: isES300,\n      ensurePrecision: {\n        requestedFragmentPrecision: options.preferredFragmentPrecision,\n        requestedVertexPrecision: options.preferredVertexPrecision,\n        maxSupportedVertexPrecision: \"highp\",\n        maxSupportedFragmentPrecision: getMaxFragmentPrecision()\n      },\n      setProgramName: {\n        name: options.name\n      },\n      addProgramDefines: isES300,\n      insertVersion: isES300\n    };\n    let fragment = options.fragment;\n    let vertex = options.vertex;\n    Object.keys(processes).forEach((processKey) => {\n      const processOptions = preprocessorOptions[processKey];\n      fragment = processes[processKey](fragment, processOptions, true);\n      vertex = processes[processKey](vertex, processOptions, false);\n    });\n    this.fragment = fragment;\n    this.vertex = vertex;\n    this.transformFeedbackVaryings = options.transformFeedbackVaryings;\n    this._key = createIdFromString(`${this.vertex}:${this.fragment}`, \"gl-program\");\n  }\n  /** destroys the program */\n  destroy() {\n    this.fragment = null;\n    this.vertex = null;\n    this._attributeData = null;\n    this._uniformData = null;\n    this._uniformBlockData = null;\n    this.transformFeedbackVaryings = null;\n    programCache[this._cacheKey] = null;\n  }\n  /**\n   * Helper function that creates a program for a given source.\n   * It will check the program cache if the program has already been created.\n   * If it has that one will be returned, if not a new one will be created and cached.\n   * @param options - The options for the program.\n   * @returns A program using the same source\n   */\n  static from(options) {\n    const key = `${options.vertex}:${options.fragment}`;\n    if (!programCache[key]) {\n      programCache[key] = new _GlProgram(options);\n      programCache[key]._cacheKey = key;\n    }\n    return programCache[key];\n  }\n};\n/** The default options used by the program. */\n_GlProgram.defaultOptions = {\n  preferredVertexPrecision: \"highp\",\n  preferredFragmentPrecision: \"mediump\"\n};\nlet GlProgram = _GlProgram;\n\nexport { GlProgram };\n//# sourceMappingURL=GlProgram.mjs.map\n","\"use strict\";\nconst attributeFormatData = {\n  uint8x2: { size: 2, stride: 2, normalised: false },\n  uint8x4: { size: 4, stride: 4, normalised: false },\n  sint8x2: { size: 2, stride: 2, normalised: false },\n  sint8x4: { size: 4, stride: 4, normalised: false },\n  unorm8x2: { size: 2, stride: 2, normalised: true },\n  unorm8x4: { size: 4, stride: 4, normalised: true },\n  snorm8x2: { size: 2, stride: 2, normalised: true },\n  snorm8x4: { size: 4, stride: 4, normalised: true },\n  uint16x2: { size: 2, stride: 4, normalised: false },\n  uint16x4: { size: 4, stride: 8, normalised: false },\n  sint16x2: { size: 2, stride: 4, normalised: false },\n  sint16x4: { size: 4, stride: 8, normalised: false },\n  unorm16x2: { size: 2, stride: 4, normalised: true },\n  unorm16x4: { size: 4, stride: 8, normalised: true },\n  snorm16x2: { size: 2, stride: 4, normalised: true },\n  snorm16x4: { size: 4, stride: 8, normalised: true },\n  float16x2: { size: 2, stride: 4, normalised: false },\n  float16x4: { size: 4, stride: 8, normalised: false },\n  float32: { size: 1, stride: 4, normalised: false },\n  float32x2: { size: 2, stride: 8, normalised: false },\n  float32x3: { size: 3, stride: 12, normalised: false },\n  float32x4: { size: 4, stride: 16, normalised: false },\n  uint32: { size: 1, stride: 4, normalised: false },\n  uint32x2: { size: 2, stride: 8, normalised: false },\n  uint32x3: { size: 3, stride: 12, normalised: false },\n  uint32x4: { size: 4, stride: 16, normalised: false },\n  sint32: { size: 1, stride: 4, normalised: false },\n  sint32x2: { size: 2, stride: 8, normalised: false },\n  sint32x3: { size: 3, stride: 12, normalised: false },\n  sint32x4: { size: 4, stride: 16, normalised: false }\n};\nfunction getAttributeInfoFromFormat(format) {\n  return attributeFormatData[format] ?? attributeFormatData.float32;\n}\n\nexport { getAttributeInfoFromFormat };\n//# sourceMappingURL=getAttributeInfoFromFormat.mjs.map\n","import { getAttributeInfoFromFormat } from '../../../shared/geometry/utils/getAttributeInfoFromFormat.mjs';\n\n\"use strict\";\nconst WGSL_TO_VERTEX_TYPES = {\n  f32: \"float32\",\n  \"vec2<f32>\": \"float32x2\",\n  \"vec3<f32>\": \"float32x3\",\n  \"vec4<f32>\": \"float32x4\",\n  vec2f: \"float32x2\",\n  vec3f: \"float32x3\",\n  vec4f: \"float32x4\",\n  i32: \"sint32\",\n  \"vec2<i32>\": \"sint32x2\",\n  \"vec3<i32>\": \"sint32x3\",\n  \"vec4<i32>\": \"sint32x4\",\n  u32: \"uint32\",\n  \"vec2<u32>\": \"uint32x2\",\n  \"vec3<u32>\": \"uint32x3\",\n  \"vec4<u32>\": \"uint32x4\",\n  bool: \"uint32\",\n  \"vec2<bool>\": \"uint32x2\",\n  \"vec3<bool>\": \"uint32x3\",\n  \"vec4<bool>\": \"uint32x4\"\n};\nfunction extractAttributesFromGpuProgram({ source, entryPoint }) {\n  const results = {};\n  const mainVertStart = source.indexOf(`fn ${entryPoint}`);\n  if (mainVertStart !== -1) {\n    const arrowFunctionStart = source.indexOf(\"->\", mainVertStart);\n    if (arrowFunctionStart !== -1) {\n      const functionArgsSubstring = source.substring(mainVertStart, arrowFunctionStart);\n      const inputsRegex = /@location\\((\\d+)\\)\\s+([a-zA-Z0-9_]+)\\s*:\\s*([a-zA-Z0-9_<>]+)(?:,|\\s|$)/g;\n      let match;\n      while ((match = inputsRegex.exec(functionArgsSubstring)) !== null) {\n        const format = WGSL_TO_VERTEX_TYPES[match[3]] ?? \"float32\";\n        results[match[2]] = {\n          location: parseInt(match[1], 10),\n          format,\n          stride: getAttributeInfoFromFormat(format).stride,\n          offset: 0,\n          instance: false,\n          start: 0\n        };\n      }\n    }\n  }\n  return results;\n}\n\nexport { extractAttributesFromGpuProgram };\n//# sourceMappingURL=extractAttributesFromGpuProgram.mjs.map\n","\"use strict\";\nfunction extractStructAndGroups(wgsl) {\n  const linePattern = /(^|[^/])@(group|binding)\\(\\d+\\)[^;]+;/g;\n  const groupPattern = /@group\\((\\d+)\\)/;\n  const bindingPattern = /@binding\\((\\d+)\\)/;\n  const namePattern = /var(<[^>]+>)? (\\w+)/;\n  const typePattern = /:\\s*(\\w+)/;\n  const structPattern = /struct\\s+(\\w+)\\s*{([^}]+)}/g;\n  const structMemberPattern = /(\\w+)\\s*:\\s*([\\w\\<\\>]+)/g;\n  const structName = /struct\\s+(\\w+)/;\n  const groups = wgsl.match(linePattern)?.map((item) => ({\n    group: parseInt(item.match(groupPattern)[1], 10),\n    binding: parseInt(item.match(bindingPattern)[1], 10),\n    name: item.match(namePattern)[2],\n    isUniform: item.match(namePattern)[1] === \"<uniform>\",\n    type: item.match(typePattern)[1]\n  }));\n  if (!groups) {\n    return {\n      groups: [],\n      structs: []\n    };\n  }\n  const structs = wgsl.match(structPattern)?.map((struct) => {\n    const name = struct.match(structName)[1];\n    const members = struct.match(structMemberPattern).reduce((acc, member) => {\n      const [name2, type] = member.split(\":\");\n      acc[name2.trim()] = type.trim();\n      return acc;\n    }, {});\n    if (!members) {\n      return null;\n    }\n    return { name, members };\n  }).filter(({ name }) => groups.some((group) => group.type === name)) ?? [];\n  return {\n    groups,\n    structs\n  };\n}\n\nexport { extractStructAndGroups };\n//# sourceMappingURL=extractStructAndGroups.mjs.map\n","\"use strict\";\nvar ShaderStage = /* @__PURE__ */ ((ShaderStage2) => {\n  ShaderStage2[ShaderStage2[\"VERTEX\"] = 1] = \"VERTEX\";\n  ShaderStage2[ShaderStage2[\"FRAGMENT\"] = 2] = \"FRAGMENT\";\n  ShaderStage2[ShaderStage2[\"COMPUTE\"] = 4] = \"COMPUTE\";\n  return ShaderStage2;\n})(ShaderStage || {});\n\nexport { ShaderStage };\n//# sourceMappingURL=const.mjs.map\n","import { ShaderStage } from '../../../shared/shader/const.mjs';\n\n\"use strict\";\nfunction generateGpuLayoutGroups({ groups }) {\n  const layout = [];\n  for (let i = 0; i < groups.length; i++) {\n    const group = groups[i];\n    if (!layout[group.group]) {\n      layout[group.group] = [];\n    }\n    if (group.isUniform) {\n      layout[group.group].push({\n        binding: group.binding,\n        visibility: ShaderStage.VERTEX | ShaderStage.FRAGMENT,\n        buffer: {\n          type: \"uniform\"\n        }\n      });\n    } else if (group.type === \"sampler\") {\n      layout[group.group].push({\n        binding: group.binding,\n        visibility: ShaderStage.FRAGMENT,\n        sampler: {\n          type: \"filtering\"\n        }\n      });\n    } else if (group.type === \"texture_2d\") {\n      layout[group.group].push({\n        binding: group.binding,\n        visibility: ShaderStage.FRAGMENT,\n        texture: {\n          sampleType: \"float\",\n          viewDimension: \"2d\",\n          multisampled: false\n        }\n      });\n    }\n  }\n  return layout;\n}\n\nexport { generateGpuLayoutGroups };\n//# sourceMappingURL=generateGpuLayoutGroups.mjs.map\n","\"use strict\";\nfunction generateLayoutHash({ groups }) {\n  const layout = [];\n  for (let i = 0; i < groups.length; i++) {\n    const group = groups[i];\n    if (!layout[group.group]) {\n      layout[group.group] = {};\n    }\n    layout[group.group][group.name] = group.binding;\n  }\n  return layout;\n}\n\nexport { generateLayoutHash };\n//# sourceMappingURL=generateLayoutHash.mjs.map\n","\"use strict\";\nfunction removeStructAndGroupDuplicates(vertexStructsAndGroups, fragmentStructsAndGroups) {\n  const structNameSet = /* @__PURE__ */ new Set();\n  const dupeGroupKeySet = /* @__PURE__ */ new Set();\n  const structs = [...vertexStructsAndGroups.structs, ...fragmentStructsAndGroups.structs].filter((struct) => {\n    if (structNameSet.has(struct.name)) {\n      return false;\n    }\n    structNameSet.add(struct.name);\n    return true;\n  });\n  const groups = [...vertexStructsAndGroups.groups, ...fragmentStructsAndGroups.groups].filter((group) => {\n    const key = `${group.name}-${group.binding}`;\n    if (dupeGroupKeySet.has(key)) {\n      return false;\n    }\n    dupeGroupKeySet.add(key);\n    return true;\n  });\n  return { structs, groups };\n}\n\nexport { removeStructAndGroupDuplicates };\n//# sourceMappingURL=removeStructAndGroupDuplicates.mjs.map\n","import { createIdFromString } from '../../shared/utils/createIdFromString.mjs';\nimport { extractAttributesFromGpuProgram } from './utils/extractAttributesFromGpuProgram.mjs';\nimport { extractStructAndGroups } from './utils/extractStructAndGroups.mjs';\nimport { generateGpuLayoutGroups } from './utils/generateGpuLayoutGroups.mjs';\nimport { generateLayoutHash } from './utils/generateLayoutHash.mjs';\nimport { removeStructAndGroupDuplicates } from './utils/removeStructAndGroupDuplicates.mjs';\n\n\"use strict\";\nconst programCache = /* @__PURE__ */ Object.create(null);\nclass GpuProgram {\n  /**\n   * Create a new GpuProgram\n   * @param options - The options for the gpu program\n   */\n  constructor(options) {\n    /** @internal */\n    this._layoutKey = 0;\n    /** @internal */\n    this._attributeLocationsKey = 0;\n    const { fragment, vertex, layout, gpuLayout, name } = options;\n    this.name = name;\n    this.fragment = fragment;\n    this.vertex = vertex;\n    if (fragment.source === vertex.source) {\n      const structsAndGroups = extractStructAndGroups(fragment.source);\n      this.structsAndGroups = structsAndGroups;\n    } else {\n      const vertexStructsAndGroups = extractStructAndGroups(vertex.source);\n      const fragmentStructsAndGroups = extractStructAndGroups(fragment.source);\n      this.structsAndGroups = removeStructAndGroupDuplicates(vertexStructsAndGroups, fragmentStructsAndGroups);\n    }\n    this.layout = layout ?? generateLayoutHash(this.structsAndGroups);\n    this.gpuLayout = gpuLayout ?? generateGpuLayoutGroups(this.structsAndGroups);\n    this.autoAssignGlobalUniforms = !!(this.layout[0]?.globalUniforms !== void 0);\n    this.autoAssignLocalUniforms = !!(this.layout[1]?.localUniforms !== void 0);\n    this._generateProgramKey();\n  }\n  // TODO maker this pure\n  _generateProgramKey() {\n    const { vertex, fragment } = this;\n    const bigKey = vertex.source + fragment.source + vertex.entryPoint + fragment.entryPoint;\n    this._layoutKey = createIdFromString(bigKey, \"program\");\n  }\n  get attributeData() {\n    this._attributeData ?? (this._attributeData = extractAttributesFromGpuProgram(this.vertex));\n    return this._attributeData;\n  }\n  /** destroys the program */\n  destroy() {\n    this.gpuLayout = null;\n    this.layout = null;\n    this.structsAndGroups = null;\n    this.fragment = null;\n    this.vertex = null;\n    programCache[this._cacheKey] = null;\n  }\n  /**\n   * Helper function that creates a program for a given source.\n   * It will check the program cache if the program has already been created.\n   * If it has that one will be returned, if not a new one will be created and cached.\n   * @param options - The options for the program.\n   * @returns A program using the same source\n   */\n  static from(options) {\n    const key = `${options.vertex.source}:${options.fragment.source}:${options.fragment.entryPoint}:${options.vertex.entryPoint}`;\n    if (!programCache[key]) {\n      programCache[key] = new GpuProgram(options);\n      programCache[key]._cacheKey = key;\n    }\n    return programCache[key];\n  }\n}\n\nexport { GpuProgram };\n//# sourceMappingURL=GpuProgram.mjs.map\n","\"use strict\";\nconst UNIFORM_TYPES_VALUES = [\n  \"f32\",\n  \"i32\",\n  \"vec2<f32>\",\n  \"vec3<f32>\",\n  \"vec4<f32>\",\n  \"mat2x2<f32>\",\n  \"mat3x3<f32>\",\n  \"mat4x4<f32>\",\n  \"mat3x2<f32>\",\n  \"mat4x2<f32>\",\n  \"mat2x3<f32>\",\n  \"mat4x3<f32>\",\n  \"mat2x4<f32>\",\n  \"mat3x4<f32>\",\n  \"vec2<i32>\",\n  \"vec3<i32>\",\n  \"vec4<i32>\"\n];\nconst UNIFORM_TYPES_MAP = UNIFORM_TYPES_VALUES.reduce((acc, type) => {\n  acc[type] = true;\n  return acc;\n}, {});\n\nexport { UNIFORM_TYPES_MAP, UNIFORM_TYPES_VALUES };\n//# sourceMappingURL=types.mjs.map\n","\"use strict\";\nfunction getDefaultUniformValue(type, size) {\n  switch (type) {\n    case \"f32\":\n      return 0;\n    case \"vec2<f32>\":\n      return new Float32Array(2 * size);\n    case \"vec3<f32>\":\n      return new Float32Array(3 * size);\n    case \"vec4<f32>\":\n      return new Float32Array(4 * size);\n    case \"mat2x2<f32>\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        1\n      ]);\n    case \"mat3x3<f32>\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        1\n      ]);\n    case \"mat4x4<f32>\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1\n      ]);\n  }\n  return null;\n}\n\nexport { getDefaultUniformValue };\n//# sourceMappingURL=getDefaultUniformValue.mjs.map\n","import { uid } from '../../../../utils/data/uid.mjs';\nimport { createIdFromString } from '../utils/createIdFromString.mjs';\nimport { UNIFORM_TYPES_MAP, UNIFORM_TYPES_VALUES } from './types.mjs';\nimport { getDefaultUniformValue } from './utils/getDefaultUniformValue.mjs';\n\n\"use strict\";\nconst _UniformGroup = class _UniformGroup {\n  /**\n   * Create a new Uniform group\n   * @param uniformStructures - The structures of the uniform group\n   * @param options - The optional parameters of this uniform group\n   */\n  constructor(uniformStructures, options) {\n    /**\n     * used internally to know if a uniform group was used in the last render pass\n     * @internal\n     */\n    this._touched = 0;\n    /** a unique id for this uniform group used through the renderer */\n    this.uid = uid(\"uniform\");\n    /**\n     * a resource type, used to identify how to handle it when its in a bind group / shader resource\n     * @internal\n     */\n    this._resourceType = \"uniformGroup\";\n    /**\n     * the resource id used internally by the renderer to build bind group keys\n     * @internal\n     */\n    this._resourceId = uid(\"resource\");\n    /** used ito identify if this is a uniform group */\n    this.isUniformGroup = true;\n    /**\n     * used to flag if this Uniform groups data is different from what it has stored in its buffer / on the GPU\n     * @internal\n     */\n    this._dirtyId = 0;\n    // implementing the interface - UniformGroup are not destroyed\n    this.destroyed = false;\n    options = { ..._UniformGroup.defaultOptions, ...options };\n    this.uniformStructures = uniformStructures;\n    const uniforms = {};\n    for (const i in uniformStructures) {\n      const uniformData = uniformStructures[i];\n      uniformData.name = i;\n      uniformData.size = uniformData.size ?? 1;\n      if (!UNIFORM_TYPES_MAP[uniformData.type]) {\n        const arrayMatch = uniformData.type.match(/^array<(\\w+(?:<\\w+>)?),\\s*(\\d+)>$/);\n        if (arrayMatch) {\n          const [, innerType, size] = arrayMatch;\n          throw new Error(\n            `Uniform type ${uniformData.type} is not supported. Use type: '${innerType}', size: ${size} instead.`\n          );\n        }\n        throw new Error(`Uniform type ${uniformData.type} is not supported. Supported uniform types are: ${UNIFORM_TYPES_VALUES.join(\", \")}`);\n      }\n      uniformData.value ?? (uniformData.value = getDefaultUniformValue(uniformData.type, uniformData.size));\n      uniforms[i] = uniformData.value;\n    }\n    this.uniforms = uniforms;\n    this._dirtyId = 1;\n    this.ubo = options.ubo;\n    this.isStatic = options.isStatic;\n    this._signature = createIdFromString(Object.keys(uniforms).map(\n      (i) => `${i}-${uniformStructures[i].type}`\n    ).join(\"-\"), \"uniform-group\");\n  }\n  /** Call this if you want the uniform groups data to be uploaded to the GPU only useful if `isStatic` is true. */\n  update() {\n    this._dirtyId++;\n  }\n};\n/** The default options used by the uniform group. */\n_UniformGroup.defaultOptions = {\n  /** if true the UniformGroup is handled as an Uniform buffer object. */\n  ubo: false,\n  /** if true, then you are responsible for when the data is uploaded to the GPU by calling `update()` */\n  isStatic: false\n};\nlet UniformGroup = _UniformGroup;\n\nexport { UniformGroup };\n//# sourceMappingURL=UniformGroup.mjs.map\n","\"use strict\";\nclass BindGroup {\n  /**\n   * Create a new instance eof the Bind Group.\n   * @param resources - The resources that are bound together for use by a shader.\n   */\n  constructor(resources) {\n    /** The resources that are bound together for use by a shader. */\n    this.resources = /* @__PURE__ */ Object.create(null);\n    this._dirty = true;\n    let index = 0;\n    for (const i in resources) {\n      const resource = resources[i];\n      this.setResource(resource, index++);\n    }\n    this._updateKey();\n  }\n  /**\n   * Updates the key if its flagged as dirty. This is used internally to\n   * match this bind group to a WebGPU BindGroup.\n   * @internal\n   */\n  _updateKey() {\n    if (!this._dirty)\n      return;\n    this._dirty = false;\n    const keyParts = [];\n    let index = 0;\n    for (const i in this.resources) {\n      keyParts[index++] = this.resources[i]._resourceId;\n    }\n    this._key = keyParts.join(\"|\");\n  }\n  /**\n   * Set a resource at a given index. this function will\n   * ensure that listeners will be removed from the current resource\n   * and added to the new resource.\n   * @param resource - The resource to set.\n   * @param index - The index to set the resource at.\n   */\n  setResource(resource, index) {\n    const currentResource = this.resources[index];\n    if (resource === currentResource)\n      return;\n    if (currentResource) {\n      resource.off?.(\"change\", this.onResourceChange, this);\n    }\n    resource.on?.(\"change\", this.onResourceChange, this);\n    this.resources[index] = resource;\n    this._dirty = true;\n  }\n  /**\n   * Returns the resource at the current specified index.\n   * @param index - The index of the resource to get.\n   * @returns - The resource at the specified index.\n   */\n  getResource(index) {\n    return this.resources[index];\n  }\n  /**\n   * Used internally to 'touch' each resource, to ensure that the GC\n   * knows that all resources in this bind group are still being used.\n   * @param tick - The current tick.\n   * @internal\n   */\n  _touch(tick) {\n    const resources = this.resources;\n    for (const i in resources) {\n      resources[i]._touched = tick;\n    }\n  }\n  /** Destroys this bind group and removes all listeners. */\n  destroy() {\n    const resources = this.resources;\n    for (const i in resources) {\n      const resource = resources[i];\n      resource?.off?.(\"change\", this.onResourceChange, this);\n    }\n    this.resources = null;\n  }\n  onResourceChange(resource) {\n    this._dirty = true;\n    if (resource.destroyed) {\n      const resources = this.resources;\n      for (const i in resources) {\n        if (resources[i] === resource) {\n          resources[i] = null;\n        }\n      }\n    } else {\n      this._updateKey();\n    }\n  }\n}\n\nexport { BindGroup };\n//# sourceMappingURL=BindGroup.mjs.map\n","\"use strict\";\nvar RendererType = /* @__PURE__ */ ((RendererType2) => {\n  RendererType2[RendererType2[\"WEBGL\"] = 1] = \"WEBGL\";\n  RendererType2[RendererType2[\"WEBGPU\"] = 2] = \"WEBGPU\";\n  RendererType2[RendererType2[\"BOTH\"] = 3] = \"BOTH\";\n  return RendererType2;\n})(RendererType || {});\n\nexport { RendererType };\n//# sourceMappingURL=types.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { uid } from '../../../../utils/data/uid.mjs';\nimport { GlProgram } from '../../gl/shader/GlProgram.mjs';\nimport { BindGroup } from '../../gpu/shader/BindGroup.mjs';\nimport { GpuProgram } from '../../gpu/shader/GpuProgram.mjs';\nimport { RendererType } from '../../types.mjs';\nimport { UniformGroup } from './UniformGroup.mjs';\n\n\"use strict\";\nclass Shader extends EventEmitter {\n  constructor(options) {\n    super();\n    /** A unique identifier for the shader */\n    this.uid = uid(\"shader\");\n    /**\n     * A record of the uniform groups and resources used by the shader.\n     * This is used by WebGL renderer to sync uniform data.\n     * @internal\n     */\n    this._uniformBindMap = /* @__PURE__ */ Object.create(null);\n    this._ownedBindGroups = [];\n    let {\n      gpuProgram,\n      glProgram,\n      groups,\n      resources,\n      compatibleRenderers,\n      groupMap\n    } = options;\n    this.gpuProgram = gpuProgram;\n    this.glProgram = glProgram;\n    if (compatibleRenderers === void 0) {\n      compatibleRenderers = 0;\n      if (gpuProgram)\n        compatibleRenderers |= RendererType.WEBGPU;\n      if (glProgram)\n        compatibleRenderers |= RendererType.WEBGL;\n    }\n    this.compatibleRenderers = compatibleRenderers;\n    const nameHash = {};\n    if (!resources && !groups) {\n      resources = {};\n    }\n    if (resources && groups) {\n      throw new Error(\"[Shader] Cannot have both resources and groups\");\n    } else if (!gpuProgram && groups && !groupMap) {\n      throw new Error(\"[Shader] No group map or WebGPU shader provided - consider using resources instead.\");\n    } else if (!gpuProgram && groups && groupMap) {\n      for (const i in groupMap) {\n        for (const j in groupMap[i]) {\n          const uniformName = groupMap[i][j];\n          nameHash[uniformName] = {\n            group: i,\n            binding: j,\n            name: uniformName\n          };\n        }\n      }\n    } else if (gpuProgram && groups && !groupMap) {\n      const groupData = gpuProgram.structsAndGroups.groups;\n      groupMap = {};\n      groupData.forEach((data) => {\n        groupMap[data.group] = groupMap[data.group] || {};\n        groupMap[data.group][data.binding] = data.name;\n        nameHash[data.name] = data;\n      });\n    } else if (resources) {\n      groups = {};\n      groupMap = {};\n      if (gpuProgram) {\n        const groupData = gpuProgram.structsAndGroups.groups;\n        groupData.forEach((data) => {\n          groupMap[data.group] = groupMap[data.group] || {};\n          groupMap[data.group][data.binding] = data.name;\n          nameHash[data.name] = data;\n        });\n      }\n      let bindTick = 0;\n      for (const i in resources) {\n        if (nameHash[i])\n          continue;\n        if (!groups[99]) {\n          groups[99] = new BindGroup();\n          this._ownedBindGroups.push(groups[99]);\n        }\n        nameHash[i] = { group: 99, binding: bindTick, name: i };\n        groupMap[99] = groupMap[99] || {};\n        groupMap[99][bindTick] = i;\n        bindTick++;\n      }\n      for (const i in resources) {\n        const name = i;\n        let value = resources[i];\n        if (!value.source && !value._resourceType) {\n          value = new UniformGroup(value);\n        }\n        const data = nameHash[name];\n        if (data) {\n          if (!groups[data.group]) {\n            groups[data.group] = new BindGroup();\n            this._ownedBindGroups.push(groups[data.group]);\n          }\n          groups[data.group].setResource(value, data.binding);\n        }\n      }\n    }\n    this.groups = groups;\n    this._uniformBindMap = groupMap;\n    this.resources = this._buildResourceAccessor(groups, nameHash);\n  }\n  /**\n   * Sometimes a resource group will be provided later (for example global uniforms)\n   * In such cases, this method can be used to let the shader know about the group.\n   * @param name - the name of the resource group\n   * @param groupIndex - the index of the group (should match the webGPU shader group location)\n   * @param bindIndex - the index of the bind point (should match the webGPU shader bind point)\n   */\n  addResource(name, groupIndex, bindIndex) {\n    var _a, _b;\n    (_a = this._uniformBindMap)[groupIndex] || (_a[groupIndex] = {});\n    (_b = this._uniformBindMap[groupIndex])[bindIndex] || (_b[bindIndex] = name);\n    if (!this.groups[groupIndex]) {\n      this.groups[groupIndex] = new BindGroup();\n      this._ownedBindGroups.push(this.groups[groupIndex]);\n    }\n  }\n  _buildResourceAccessor(groups, nameHash) {\n    const uniformsOut = {};\n    for (const i in nameHash) {\n      const data = nameHash[i];\n      Object.defineProperty(uniformsOut, data.name, {\n        get() {\n          return groups[data.group].getResource(data.binding);\n        },\n        set(value) {\n          groups[data.group].setResource(value, data.binding);\n        }\n      });\n    }\n    return uniformsOut;\n  }\n  /**\n   * Use to destroy the shader when its not longer needed.\n   * It will destroy the resources and remove listeners.\n   * @param destroyPrograms - if the programs should be destroyed as well.\n   * Make sure its not being used by other shaders!\n   */\n  destroy(destroyPrograms = false) {\n    this.emit(\"destroy\", this);\n    if (destroyPrograms) {\n      this.gpuProgram?.destroy();\n      this.glProgram?.destroy();\n    }\n    this.gpuProgram = null;\n    this.glProgram = null;\n    this.removeAllListeners();\n    this._uniformBindMap = null;\n    this._ownedBindGroups.forEach((bindGroup) => {\n      bindGroup.destroy();\n    });\n    this._ownedBindGroups = null;\n    this.resources = null;\n    this.groups = null;\n  }\n  static from(options) {\n    const { gpu, gl, ...rest } = options;\n    let gpuProgram;\n    let glProgram;\n    if (gpu) {\n      gpuProgram = GpuProgram.from(gpu);\n    }\n    if (gl) {\n      glProgram = GlProgram.from(gl);\n    }\n    return new Shader({\n      gpuProgram,\n      glProgram,\n      ...rest\n    });\n  }\n}\n\nexport { Shader };\n//# sourceMappingURL=Shader.mjs.map\n","\"use strict\";\nconst blendModeIds = {\n  normal: 0,\n  add: 1,\n  multiply: 2,\n  screen: 3,\n  overlay: 4,\n  erase: 5,\n  \"normal-npm\": 6,\n  \"add-npm\": 7,\n  \"screen-npm\": 8,\n  min: 9,\n  max: 10\n};\nconst BLEND = 0;\nconst OFFSET = 1;\nconst CULLING = 2;\nconst DEPTH_TEST = 3;\nconst WINDING = 4;\nconst DEPTH_MASK = 5;\nconst _State = class _State {\n  constructor() {\n    this.data = 0;\n    this.blendMode = \"normal\";\n    this.polygonOffset = 0;\n    this.blend = true;\n    this.depthMask = true;\n  }\n  /**\n   * Activates blending of the computed fragment color values.\n   * @default true\n   */\n  get blend() {\n    return !!(this.data & 1 << BLEND);\n  }\n  set blend(value) {\n    if (!!(this.data & 1 << BLEND) !== value) {\n      this.data ^= 1 << BLEND;\n    }\n  }\n  /**\n   * Activates adding an offset to depth values of polygon's fragments\n   * @default false\n   */\n  get offsets() {\n    return !!(this.data & 1 << OFFSET);\n  }\n  set offsets(value) {\n    if (!!(this.data & 1 << OFFSET) !== value) {\n      this.data ^= 1 << OFFSET;\n    }\n  }\n  /** The culling settings for this state none - No culling back - Back face culling front - Front face culling */\n  set cullMode(value) {\n    if (value === \"none\") {\n      this.culling = false;\n      return;\n    }\n    this.culling = true;\n    this.clockwiseFrontFace = value === \"front\";\n  }\n  get cullMode() {\n    if (!this.culling) {\n      return \"none\";\n    }\n    return this.clockwiseFrontFace ? \"front\" : \"back\";\n  }\n  /**\n   * Activates culling of polygons.\n   * @default false\n   */\n  get culling() {\n    return !!(this.data & 1 << CULLING);\n  }\n  set culling(value) {\n    if (!!(this.data & 1 << CULLING) !== value) {\n      this.data ^= 1 << CULLING;\n    }\n  }\n  /**\n   * Activates depth comparisons and updates to the depth buffer.\n   * @default false\n   */\n  get depthTest() {\n    return !!(this.data & 1 << DEPTH_TEST);\n  }\n  set depthTest(value) {\n    if (!!(this.data & 1 << DEPTH_TEST) !== value) {\n      this.data ^= 1 << DEPTH_TEST;\n    }\n  }\n  /**\n   * Enables or disables writing to the depth buffer.\n   * @default true\n   */\n  get depthMask() {\n    return !!(this.data & 1 << DEPTH_MASK);\n  }\n  set depthMask(value) {\n    if (!!(this.data & 1 << DEPTH_MASK) !== value) {\n      this.data ^= 1 << DEPTH_MASK;\n    }\n  }\n  /**\n   * Specifies whether or not front or back-facing polygons can be culled.\n   * @default false\n   */\n  get clockwiseFrontFace() {\n    return !!(this.data & 1 << WINDING);\n  }\n  set clockwiseFrontFace(value) {\n    if (!!(this.data & 1 << WINDING) !== value) {\n      this.data ^= 1 << WINDING;\n    }\n  }\n  /**\n   * The blend mode to be applied when this state is set. Apply a value of `normal` to reset the blend mode.\n   * Setting this mode to anything other than NO_BLEND will automatically switch blending on.\n   * @default 'normal'\n   */\n  get blendMode() {\n    return this._blendMode;\n  }\n  set blendMode(value) {\n    this.blend = value !== \"none\";\n    this._blendMode = value;\n    this._blendModeId = blendModeIds[value] || 0;\n  }\n  /**\n   * The polygon offset. Setting this property to anything other than 0 will automatically enable polygon offset fill.\n   * @default 0\n   */\n  get polygonOffset() {\n    return this._polygonOffset;\n  }\n  set polygonOffset(value) {\n    this.offsets = !!value;\n    this._polygonOffset = value;\n  }\n  toString() {\n    return `[pixi.js/core:State blendMode=${this.blendMode} clockwiseFrontFace=${this.clockwiseFrontFace} culling=${this.culling} depthMask=${this.depthMask} polygonOffset=${this.polygonOffset}]`;\n  }\n  /**\n   * A quickly getting an instance of a State that is configured for 2d rendering.\n   * @returns a new State with values set for 2d rendering\n   */\n  static for2d() {\n    const state = new _State();\n    state.depthTest = false;\n    state.blend = true;\n    return state;\n  }\n};\n_State.default2d = _State.for2d();\nlet State = _State;\n\nexport { State };\n//# sourceMappingURL=State.mjs.map\n","import { GlProgram } from '../rendering/renderers/gl/shader/GlProgram.mjs';\nimport { GpuProgram } from '../rendering/renderers/gpu/shader/GpuProgram.mjs';\nimport { Shader } from '../rendering/renderers/shared/shader/Shader.mjs';\nimport { State } from '../rendering/renderers/shared/state/State.mjs';\n\n\"use strict\";\nconst _Filter = class _Filter extends Shader {\n  /**\n   * @param options - The optional parameters of this filter.\n   */\n  constructor(options) {\n    options = { ..._Filter.defaultOptions, ...options };\n    super(options);\n    /** If enabled is true the filter is applied, if false it will not. */\n    this.enabled = true;\n    /**\n     * The gpu state the filter requires to render.\n     * @internal\n     */\n    this._state = State.for2d();\n    this.blendMode = options.blendMode;\n    this.padding = options.padding;\n    if (typeof options.antialias === \"boolean\") {\n      this.antialias = options.antialias ? \"on\" : \"off\";\n    } else {\n      this.antialias = options.antialias;\n    }\n    this.resolution = options.resolution;\n    this.blendRequired = options.blendRequired;\n    this.clipToViewport = options.clipToViewport;\n    this.addResource(\"uTexture\", 0, 1);\n  }\n  /**\n   * Applies the filter\n   * @param filterManager - The renderer to retrieve the filter from\n   * @param input - The input render target.\n   * @param output - The target to output to.\n   * @param clearMode - Should the output be cleared before rendering to it\n   */\n  apply(filterManager, input, output, clearMode) {\n    filterManager.applyFilter(this, input, output, clearMode);\n  }\n  /**\n   * Get the blend mode of the filter.\n   * @default \"normal\"\n   */\n  get blendMode() {\n    return this._state.blendMode;\n  }\n  /** Sets the blend mode of the filter. */\n  set blendMode(value) {\n    this._state.blendMode = value;\n  }\n  /**\n   * A short hand function to create a filter based of a vertex and fragment shader src.\n   * @param options\n   * @returns A shiny new PixiJS filter!\n   */\n  static from(options) {\n    const { gpu, gl, ...rest } = options;\n    let gpuProgram;\n    let glProgram;\n    if (gpu) {\n      gpuProgram = GpuProgram.from(gpu);\n    }\n    if (gl) {\n      glProgram = GlProgram.from(gl);\n    }\n    return new _Filter({\n      gpuProgram,\n      glProgram,\n      ...rest\n    });\n  }\n};\n/** The default filter settings */\n_Filter.defaultOptions = {\n  blendMode: \"normal\",\n  resolution: 1,\n  padding: 0,\n  antialias: \"off\",\n  blendRequired: false,\n  clipToViewport: true\n};\nlet Filter = _Filter;\n\nexport { Filter };\n//# sourceMappingURL=Filter.mjs.map\n","\nexport default function earcut(data, holeIndices, dim = 2) {\n\n    const hasHoles = holeIndices && holeIndices.length;\n    const outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n    let outerNode = linkedList(data, 0, outerLen, dim, true);\n    const triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    let minX, minY, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = data[0];\n        minY = data[1];\n        let maxX = minX;\n        let maxY = minY;\n\n        for (let i = dim; i < outerLen; i += dim) {\n            const x = data[i];\n            const y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    let last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (let i = start; i < end; i += dim) last = insertNode(i / dim | 0, data[i], data[i + 1], last);\n    } else {\n        for (let i = end - dim; i >= start; i -= dim) last = insertNode(i / dim | 0, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    let p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    let stop = ear;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        const prev = ear.prev;\n        const next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            triangles.push(prev.i, ear.i, next.i); // cut off the triangle\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    const a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    const ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox\n    const x0 = Math.min(ax, bx, cx),\n        y0 = Math.min(ay, by, cy),\n        x1 = Math.max(ax, bx, cx),\n        y1 = Math.max(ay, by, cy);\n\n    let p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangleExceptFirst(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    const a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    const ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox\n    const x0 = Math.min(ax, bx, cx),\n        y0 = Math.min(ay, by, cy),\n        x1 = Math.max(ax, bx, cx),\n        y1 = Math.max(ay, by, cy);\n\n    // z-order range for the current triangle bbox;\n    const minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    let p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangleExceptFirst(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangleExceptFirst(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangleExceptFirst(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangleExceptFirst(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles) {\n    let p = start;\n    do {\n        const a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i, p.i, b.i);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    let a = start;\n    do {\n        let b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                let c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    const queue = [];\n\n    for (let i = 0, len = holeIndices.length; i < len; i++) {\n        const start = holeIndices[i] * dim;\n        const end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        const list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareXYSlope);\n\n    // process holes from left to right\n    for (let i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareXYSlope(a, b) {\n    let result = a.x - b.x;\n    // when the left-most point of 2 holes meet at a vertex, sort the holes counterclockwise so that when we find\n    // the bridge to the outer shell is always the point that they meet at.\n    if (result === 0) {\n        result = a.y - b.y;\n        if (result === 0) {\n            const aSlope = (a.next.y - a.y) / (a.next.x - a.x);\n            const bSlope = (b.next.y - b.y) / (b.next.x - b.x);\n            result = aSlope - bSlope;\n        }\n    }\n    return result;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole(hole, outerNode) {\n    const bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    const bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    let p = outerNode;\n    const hx = hole.x;\n    const hy = hole.y;\n    let qx = -Infinity;\n    let m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    // unless they intersect at a vertex, then choose the vertex\n    if (equals(hole, p)) return p;\n    do {\n        if (equals(hole, p.next)) return p.next;\n        else if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            const x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    const stop = m;\n    const mx = m.x;\n    const my = m.y;\n    let tanMin = Infinity;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            const tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    let p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    let numMerges;\n    let inSize = 1;\n\n    do {\n        let p = list;\n        let e;\n        list = null;\n        let tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            let q = p;\n            let pSize = 0;\n            for (let i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            let qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    let p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a point lies within a convex triangle but false if its equal to the first point of the triangle\nfunction pointInTriangleExceptFirst(ax, ay, bx, by, cx, cy, px, py) {\n    return !(ax === px && ay === py) && pointInTriangle(ax, ay, bx, by, cx, cy, px, py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // doesn't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    const o1 = sign(area(p1, q1, p2));\n    const o2 = sign(area(p1, q1, q2));\n    const o3 = sign(area(p2, q2, p1));\n    const o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    let p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    let p = a;\n    let inside = false;\n    const px = (a.x + b.x) / 2;\n    const py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    const a2 = createNode(a.i, a.x, a.y),\n        b2 = createNode(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    const p = createNode(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction createNode(i, x, y) {\n    return {\n        i, // vertex index in coordinates array\n        x, y, // vertex coordinates\n        prev: null, // previous and next vertex nodes in a polygon ring\n        next: null,\n        z: 0, // z-order curve value\n        prevZ: null, // previous and next nodes in z-order\n        nextZ: null,\n        steiner: false // indicates whether this is a steiner point\n    };\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nexport function deviation(data, holeIndices, dim, triangles) {\n    const hasHoles = holeIndices && holeIndices.length;\n    const outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    let polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (let i = 0, len = holeIndices.length; i < len; i++) {\n            const start = holeIndices[i] * dim;\n            const end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    let trianglesArea = 0;\n    for (let i = 0; i < triangles.length; i += 3) {\n        const a = triangles[i] * dim;\n        const b = triangles[i + 1] * dim;\n        const c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n}\n\nfunction signedArea(data, start, end, dim) {\n    let sum = 0;\n    for (let i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nexport function flatten(data) {\n    const vertices = [];\n    const holes = [];\n    const dimensions = data[0][0].length;\n    let holeIndex = 0;\n    let prevLen = 0;\n\n    for (const ring of data) {\n        for (const p of ring) {\n            for (let d = 0; d < dimensions; d++) vertices.push(p[d]);\n        }\n        if (prevLen) {\n            holeIndex += prevLen;\n            holes.push(holeIndex);\n        }\n        prevLen = ring.length;\n    }\n    return {vertices, holes, dimensions};\n}\n","import earcutModule from 'earcut';\nexport { default as EventEmitter } from 'eventemitter3';\n\n\"use strict\";\nconst earcut = earcutModule.default || earcutModule;\n\nexport { earcut };\n//# sourceMappingURL=utils.mjs.map\n","import { ExtensionType } from '../extensions/Extensions.mjs';\n\n\"use strict\";\nclass ResizePlugin {\n  /**\n   * Initialize the plugin with scope of application instance\n   * @private\n   * @param {object} [options] - See application options\n   */\n  static init(options) {\n    Object.defineProperty(\n      this,\n      \"resizeTo\",\n      {\n        set(dom) {\n          globalThis.removeEventListener(\"resize\", this.queueResize);\n          this._resizeTo = dom;\n          if (dom) {\n            globalThis.addEventListener(\"resize\", this.queueResize);\n            this.resize();\n          }\n        },\n        get() {\n          return this._resizeTo;\n        }\n      }\n    );\n    this.queueResize = () => {\n      if (!this._resizeTo) {\n        return;\n      }\n      this._cancelResize();\n      this._resizeId = requestAnimationFrame(() => this.resize());\n    };\n    this._cancelResize = () => {\n      if (this._resizeId) {\n        cancelAnimationFrame(this._resizeId);\n        this._resizeId = null;\n      }\n    };\n    this.resize = () => {\n      if (!this._resizeTo) {\n        return;\n      }\n      this._cancelResize();\n      let width;\n      let height;\n      if (this._resizeTo === globalThis.window) {\n        width = globalThis.innerWidth;\n        height = globalThis.innerHeight;\n      } else {\n        const { clientWidth, clientHeight } = this._resizeTo;\n        width = clientWidth;\n        height = clientHeight;\n      }\n      this.renderer.resize(width, height);\n      this.render();\n    };\n    this._resizeId = null;\n    this._resizeTo = null;\n    this.resizeTo = options.resizeTo || null;\n  }\n  /**\n   * Clean up the ticker, scoped to application\n   * @private\n   */\n  static destroy() {\n    globalThis.removeEventListener(\"resize\", this.queueResize);\n    this._cancelResize();\n    this._cancelResize = null;\n    this.queueResize = null;\n    this.resizeTo = null;\n    this.resize = null;\n  }\n}\n/** @ignore */\nResizePlugin.extension = ExtensionType.Application;\n\nexport { ResizePlugin };\n//# sourceMappingURL=ResizePlugin.mjs.map\n","import { ExtensionType } from '../extensions/Extensions.mjs';\nimport { UPDATE_PRIORITY } from '../ticker/const.mjs';\nimport { Ticker } from '../ticker/Ticker.mjs';\n\n\"use strict\";\nclass TickerPlugin {\n  /**\n   * Initialize the plugin with scope of application instance\n   * @private\n   * @param {object} [options] - See application options\n   */\n  static init(options) {\n    options = Object.assign({\n      autoStart: true,\n      sharedTicker: false\n    }, options);\n    Object.defineProperty(\n      this,\n      \"ticker\",\n      {\n        set(ticker) {\n          if (this._ticker) {\n            this._ticker.remove(this.render, this);\n          }\n          this._ticker = ticker;\n          if (ticker) {\n            ticker.add(this.render, this, UPDATE_PRIORITY.LOW);\n          }\n        },\n        get() {\n          return this._ticker;\n        }\n      }\n    );\n    this.stop = () => {\n      this._ticker.stop();\n    };\n    this.start = () => {\n      this._ticker.start();\n    };\n    this._ticker = null;\n    this.ticker = options.sharedTicker ? Ticker.shared : new Ticker();\n    if (options.autoStart) {\n      this.start();\n    }\n  }\n  /**\n   * Clean up the ticker, scoped to application.\n   * @private\n   */\n  static destroy() {\n    if (this._ticker) {\n      const oldTicker = this._ticker;\n      this.ticker = null;\n      oldTicker.destroy();\n    }\n  }\n}\n/** @ignore */\nTickerPlugin.extension = ExtensionType.Application;\n\nexport { TickerPlugin };\n//# sourceMappingURL=TickerPlugin.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { deprecation, v8_0_0 } from '../../utils/logging/deprecation.mjs';\n\n\"use strict\";\nclass AbstractBitmapFont extends EventEmitter {\n  constructor() {\n    super(...arguments);\n    /** The map of characters by character code. */\n    this.chars = /* @__PURE__ */ Object.create(null);\n    /**\n     * The line-height of the font face in pixels.\n     * @type {number}\n     */\n    this.lineHeight = 0;\n    /**\n     * The name of the font face\n     * @type {string}\n     */\n    this.fontFamily = \"\";\n    /** The metrics of the font face. */\n    this.fontMetrics = { fontSize: 0, ascent: 0, descent: 0 };\n    /**\n     * The offset of the font face from the baseline.\n     * @type {number}\n     */\n    this.baseLineOffset = 0;\n    /** The range and type of the distance field for this font. */\n    this.distanceField = { type: \"none\", range: 0 };\n    /** The map of base page textures (i.e., sheets of glyphs). */\n    this.pages = [];\n    /** should the fill for this font be applied as a tint to the text. */\n    this.applyFillAsTint = true;\n    /** The size of the font face in pixels. */\n    this.baseMeasurementFontSize = 100;\n    this.baseRenderedFontSize = 100;\n  }\n  /**\n   * The name of the font face.\n   * @deprecated since 8.0.0 Use `fontFamily` instead.\n   */\n  get font() {\n    deprecation(v8_0_0, \"BitmapFont.font is deprecated, please use BitmapFont.fontFamily instead.\");\n    return this.fontFamily;\n  }\n  /**\n   * The map of base page textures (i.e., sheets of glyphs).\n   * @deprecated since 8.0.0 Use `pages` instead.\n   */\n  get pageTextures() {\n    deprecation(v8_0_0, \"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead.\");\n    return this.pages;\n  }\n  /**\n   * The size of the font face in pixels.\n   * @deprecated since 8.0.0 Use `fontMetrics.fontSize` instead.\n   */\n  get size() {\n    deprecation(v8_0_0, \"BitmapFont.size is deprecated, please use BitmapFont.fontMetrics.fontSize instead.\");\n    return this.fontMetrics.fontSize;\n  }\n  /**\n   * The kind of distance field for this font or \"none\".\n   * @deprecated since 8.0.0 Use `distanceField.type` instead.\n   */\n  get distanceFieldRange() {\n    deprecation(v8_0_0, \"BitmapFont.distanceFieldRange is deprecated, please use BitmapFont.distanceField.range instead.\");\n    return this.distanceField.range;\n  }\n  /**\n   * The range of the distance field in pixels.\n   * @deprecated since 8.0.0 Use `distanceField.range` instead.\n   */\n  get distanceFieldType() {\n    deprecation(v8_0_0, \"BitmapFont.distanceFieldType is deprecated, please use BitmapFont.distanceField.type instead.\");\n    return this.distanceField.type;\n  }\n  destroy(destroyTextures = false) {\n    this.emit(\"destroy\", this);\n    this.removeAllListeners();\n    for (const i in this.chars) {\n      this.chars[i].texture?.destroy();\n    }\n    this.chars = null;\n    if (destroyTextures) {\n      this.pages.forEach((page) => page.texture.destroy(true));\n      this.pages = null;\n    }\n  }\n}\n\nexport { AbstractBitmapFont };\n//# sourceMappingURL=AbstractBitmapFont.mjs.map\n","/**\n * tiny-lru\n *\n * @copyright 2025 Jason Mulligan <jason.mulligan@avoidwork.com>\n * @license BSD-3-Clause\n * @version 11.4.5\n */\n/**\n * A high-performance Least Recently Used (LRU) cache implementation with optional TTL support.\n * Items are automatically evicted when the cache reaches its maximum size,\n * removing the least recently used items first. All core operations (get, set, delete) are O(1).\n *\n * @class LRU\n * @example\n * // Create a cache with max 100 items\n * const cache = new LRU(100);\n * cache.set('key1', 'value1');\n * console.log(cache.get('key1')); // 'value1'\n *\n * @example\n * // Create a cache with TTL\n * const cache = new LRU(100, 5000); // 5 second TTL\n * cache.set('key1', 'value1');\n * // After 5 seconds, key1 will be expired\n */\nclass LRU {\n\t/**\n\t * Creates a new LRU cache instance.\n\t * Note: Constructor does not validate parameters. Use lru() factory function for parameter validation.\n\t *\n\t * @constructor\n\t * @param {number} [max=0] - Maximum number of items to store. 0 means unlimited.\n\t * @param {number} [ttl=0] - Time to live in milliseconds. 0 means no expiration.\n\t * @param {boolean} [resetTtl=false] - Whether to reset TTL when accessing existing items via get().\n\t * @example\n\t * const cache = new LRU(1000, 60000, true); // 1000 items, 1 minute TTL, reset on access\n\t * @see {@link lru} For parameter validation\n\t * @since 1.0.0\n\t */\n\tconstructor (max = 0, ttl = 0, resetTtl = false) {\n\t\tthis.first = null;\n\t\tthis.items = Object.create(null);\n\t\tthis.last = null;\n\t\tthis.max = max;\n\t\tthis.resetTtl = resetTtl;\n\t\tthis.size = 0;\n\t\tthis.ttl = ttl;\n\t}\n\n\t/**\n\t * Removes all items from the cache.\n\t *\n\t * @method clear\n\t * @memberof LRU\n\t * @returns {LRU} The LRU instance for method chaining.\n\t * @example\n\t * cache.clear();\n\t * console.log(cache.size); // 0\n\t * @since 1.0.0\n\t */\n\tclear () {\n\t\tthis.first = null;\n\t\tthis.items = Object.create(null);\n\t\tthis.last = null;\n\t\tthis.size = 0;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Removes an item from the cache by key.\n\t *\n\t * @method delete\n\t * @memberof LRU\n\t * @param {string} key - The key of the item to delete.\n\t * @returns {LRU} The LRU instance for method chaining.\n\t * @example\n\t * cache.set('key1', 'value1');\n\t * cache.delete('key1');\n\t * console.log(cache.has('key1')); // false\n\t * @see {@link LRU#has}\n\t * @see {@link LRU#clear}\n\t * @since 1.0.0\n\t */\n\tdelete (key) {\n\t\tif (this.has(key)) {\n\t\t\tconst item = this.items[key];\n\n\t\t\tdelete this.items[key];\n\t\t\tthis.size--;\n\n\t\t\tif (item.prev !== null) {\n\t\t\t\titem.prev.next = item.next;\n\t\t\t}\n\n\t\t\tif (item.next !== null) {\n\t\t\t\titem.next.prev = item.prev;\n\t\t\t}\n\n\t\t\tif (this.first === item) {\n\t\t\t\tthis.first = item.next;\n\t\t\t}\n\n\t\t\tif (this.last === item) {\n\t\t\t\tthis.last = item.prev;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns an array of [key, value] pairs for the specified keys.\n\t * Order follows LRU order (least to most recently used).\n\t *\n\t * @method entries\n\t * @memberof LRU\n\t * @param {string[]} [keys=this.keys()] - Array of keys to get entries for. Defaults to all keys.\n\t * @returns {Array<Array<*>>} Array of [key, value] pairs in LRU order.\n\t * @example\n\t * cache.set('a', 1).set('b', 2);\n\t * console.log(cache.entries()); // [['a', 1], ['b', 2]]\n\t * console.log(cache.entries(['a'])); // [['a', 1]]\n\t * @see {@link LRU#keys}\n\t * @see {@link LRU#values}\n\t * @since 11.1.0\n\t */\n\tentries (keys = this.keys()) {\n\t\treturn keys.map(key => [key, this.get(key)]);\n\t}\n\n\t/**\n\t * Removes the least recently used item from the cache.\n\t *\n\t * @method evict\n\t * @memberof LRU\n\t * @param {boolean} [bypass=false] - Whether to force eviction even when cache is empty.\n\t * @returns {LRU} The LRU instance for method chaining.\n\t * @example\n\t * cache.set('old', 'value').set('new', 'value');\n\t * cache.evict(); // Removes 'old' item\n\t * @see {@link LRU#setWithEvicted}\n\t * @since 1.0.0\n\t */\n\tevict (bypass = false) {\n\t\tif (bypass || this.size > 0) {\n\t\t\tconst item = this.first;\n\n\t\t\tdelete this.items[item.key];\n\n\t\t\tif (--this.size === 0) {\n\t\t\t\tthis.first = null;\n\t\t\t\tthis.last = null;\n\t\t\t} else {\n\t\t\t\tthis.first = item.next;\n\t\t\t\tthis.first.prev = null;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the expiration timestamp for a given key.\n\t *\n\t * @method expiresAt\n\t * @memberof LRU\n\t * @param {string} key - The key to check expiration for.\n\t * @returns {number|undefined} The expiration timestamp in milliseconds, or undefined if key doesn't exist.\n\t * @example\n\t * const cache = new LRU(100, 5000); // 5 second TTL\n\t * cache.set('key1', 'value1');\n\t * console.log(cache.expiresAt('key1')); // timestamp 5 seconds from now\n\t * @see {@link LRU#get}\n\t * @see {@link LRU#has}\n\t * @since 1.0.0\n\t */\n\texpiresAt (key) {\n\t\tlet result;\n\n\t\tif (this.has(key)) {\n\t\t\tresult = this.items[key].expiry;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Retrieves a value from the cache by key. Updates the item's position to most recently used.\n\t *\n\t * @method get\n\t * @memberof LRU\n\t * @param {string} key - The key to retrieve.\n\t * @returns {*} The value associated with the key, or undefined if not found or expired.\n\t * @example\n\t * cache.set('key1', 'value1');\n\t * console.log(cache.get('key1')); // 'value1'\n\t * console.log(cache.get('nonexistent')); // undefined\n\t * @see {@link LRU#set}\n\t * @see {@link LRU#has}\n\t * @since 1.0.0\n\t */\n\tget (key) {\n\t\tconst item = this.items[key];\n\n\t\tif (item !== undefined) {\n\t\t\t// Check TTL only if enabled to avoid unnecessary Date.now() calls\n\t\t\tif (this.ttl > 0) {\n\t\t\t\tif (item.expiry <= Date.now()) {\n\t\t\t\t\tthis.delete(key);\n\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fast LRU update without full set() overhead\n\t\t\tthis.moveToEnd(item);\n\n\t\t\treturn item.value;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Checks if a key exists in the cache.\n\t *\n\t * @method has\n\t * @memberof LRU\n\t * @param {string} key - The key to check for.\n\t * @returns {boolean} True if the key exists, false otherwise.\n\t * @example\n\t * cache.set('key1', 'value1');\n\t * console.log(cache.has('key1')); // true\n\t * console.log(cache.has('nonexistent')); // false\n\t * @see {@link LRU#get}\n\t * @see {@link LRU#delete}\n\t * @since 9.0.0\n\t */\n\thas (key) {\n\t\treturn key in this.items;\n\t}\n\n\t/**\n\t * Efficiently moves an item to the end of the LRU list (most recently used position).\n\t * This is an internal optimization method that avoids the overhead of the full set() operation\n\t * when only LRU position needs to be updated.\n\t *\n\t * @method moveToEnd\n\t * @memberof LRU\n\t * @param {Object} item - The cache item with prev/next pointers to reposition.\n\t * @private\n\t * @since 11.3.5\n\t */\n\tmoveToEnd (item) {\n\t\t// If already at the end, nothing to do\n\t\tif (this.last === item) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove item from current position in the list\n\t\tif (item.prev !== null) {\n\t\t\titem.prev.next = item.next;\n\t\t}\n\n\t\tif (item.next !== null) {\n\t\t\titem.next.prev = item.prev;\n\t\t}\n\n\t\t// Update first pointer if this was the first item\n\t\tif (this.first === item) {\n\t\t\tthis.first = item.next;\n\t\t}\n\n\t\t// Add item to the end\n\t\titem.prev = this.last;\n\t\titem.next = null;\n\n\t\tif (this.last !== null) {\n\t\t\tthis.last.next = item;\n\t\t}\n\n\t\tthis.last = item;\n\n\t\t// Handle edge case: if this was the only item, it's also first\n\t\tif (this.first === null) {\n\t\t\tthis.first = item;\n\t\t}\n\t}\n\n\t/**\n\t * Returns an array of all keys in the cache, ordered from least to most recently used.\n\t *\n\t * @method keys\n\t * @memberof LRU\n\t * @returns {string[]} Array of keys in LRU order.\n\t * @example\n\t * cache.set('a', 1).set('b', 2);\n\t * cache.get('a'); // Move 'a' to most recent\n\t * console.log(cache.keys()); // ['b', 'a']\n\t * @see {@link LRU#values}\n\t * @see {@link LRU#entries}\n\t * @since 9.0.0\n\t */\n\tkeys () {\n\t\tconst result = [];\n\t\tlet x = this.first;\n\n\t\twhile (x !== null) {\n\t\t\tresult.push(x.key);\n\t\t\tx = x.next;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Sets a value in the cache and returns any evicted item.\n\t *\n\t * @method setWithEvicted\n\t * @memberof LRU\n\t * @param {string} key - The key to set.\n\t * @param {*} value - The value to store.\n\t * @param {boolean} [resetTtl=this.resetTtl] - Whether to reset the TTL for this operation.\n\t * @returns {Object|null} The evicted item (if any) with shape {key, value, expiry, prev, next}, or null.\n\t * @example\n\t * const cache = new LRU(2);\n\t * cache.set('a', 1).set('b', 2);\n\t * const evicted = cache.setWithEvicted('c', 3); // evicted = {key: 'a', value: 1, ...}\n\t * @see {@link LRU#set}\n\t * @see {@link LRU#evict}\n\t * @since 11.3.0\n\t */\n\tsetWithEvicted (key, value, resetTtl = this.resetTtl) {\n\t\tlet evicted = null;\n\n\t\tif (this.has(key)) {\n\t\t\tthis.set(key, value, true, resetTtl);\n\t\t} else {\n\t\t\tif (this.max > 0 && this.size === this.max) {\n\t\t\t\tevicted = {...this.first};\n\t\t\t\tthis.evict(true);\n\t\t\t}\n\n\t\t\tlet item = this.items[key] = {\n\t\t\t\texpiry: this.ttl > 0 ? Date.now() + this.ttl : this.ttl,\n\t\t\t\tkey: key,\n\t\t\t\tprev: this.last,\n\t\t\t\tnext: null,\n\t\t\t\tvalue\n\t\t\t};\n\n\t\t\tif (++this.size === 1) {\n\t\t\t\tthis.first = item;\n\t\t\t} else {\n\t\t\t\tthis.last.next = item;\n\t\t\t}\n\n\t\t\tthis.last = item;\n\t\t}\n\n\t\treturn evicted;\n\t}\n\n\t/**\n\t * Sets a value in the cache. Updates the item's position to most recently used.\n\t *\n\t * @method set\n\t * @memberof LRU\n\t * @param {string} key - The key to set.\n\t * @param {*} value - The value to store.\n\t * @param {boolean} [bypass=false] - Internal parameter for setWithEvicted method.\n\t * @param {boolean} [resetTtl=this.resetTtl] - Whether to reset the TTL for this operation.\n\t * @returns {LRU} The LRU instance for method chaining.\n\t * @example\n\t * cache.set('key1', 'value1')\n\t *      .set('key2', 'value2')\n\t *      .set('key3', 'value3');\n\t * @see {@link LRU#get}\n\t * @see {@link LRU#setWithEvicted}\n\t * @since 1.0.0\n\t */\n\tset (key, value, bypass = false, resetTtl = this.resetTtl) {\n\t\tlet item = this.items[key];\n\n\t\tif (bypass || item !== undefined) {\n\t\t\t// Existing item: update value and position\n\t\t\titem.value = value;\n\n\t\t\tif (bypass === false && resetTtl) {\n\t\t\t\titem.expiry = this.ttl > 0 ? Date.now() + this.ttl : this.ttl;\n\t\t\t}\n\n\t\t\t// Always move to end, but the bypass parameter affects TTL reset behavior\n\t\t\tthis.moveToEnd(item);\n\t\t} else {\n\t\t\t// New item: check for eviction and create\n\t\t\tif (this.max > 0 && this.size === this.max) {\n\t\t\t\tthis.evict(true);\n\t\t\t}\n\n\t\t\titem = this.items[key] = {\n\t\t\t\texpiry: this.ttl > 0 ? Date.now() + this.ttl : this.ttl,\n\t\t\t\tkey: key,\n\t\t\t\tprev: this.last,\n\t\t\t\tnext: null,\n\t\t\t\tvalue\n\t\t\t};\n\n\t\t\tif (++this.size === 1) {\n\t\t\t\tthis.first = item;\n\t\t\t} else {\n\t\t\t\tthis.last.next = item;\n\t\t\t}\n\n\t\t\tthis.last = item;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns an array of all values in the cache for the specified keys.\n\t * Order follows LRU order (least to most recently used).\n\t *\n\t * @method values\n\t * @memberof LRU\n\t * @param {string[]} [keys=this.keys()] - Array of keys to get values for. Defaults to all keys.\n\t * @returns {Array<*>} Array of values corresponding to the keys in LRU order.\n\t * @example\n\t * cache.set('a', 1).set('b', 2);\n\t * console.log(cache.values()); // [1, 2]\n\t * console.log(cache.values(['a'])); // [1]\n\t * @see {@link LRU#keys}\n\t * @see {@link LRU#entries}\n\t * @since 11.1.0\n\t */\n\tvalues (keys = this.keys()) {\n\t\treturn keys.map(key => this.get(key));\n\t}\n}\n\n/**\n * Factory function to create a new LRU cache instance with parameter validation.\n *\n * @function lru\n * @param {number} [max=1000] - Maximum number of items to store. Must be >= 0. Use 0 for unlimited size.\n * @param {number} [ttl=0] - Time to live in milliseconds. Must be >= 0. Use 0 for no expiration.\n * @param {boolean} [resetTtl=false] - Whether to reset TTL when accessing existing items via get().\n * @returns {LRU} A new LRU cache instance.\n * @throws {TypeError} When parameters are invalid (negative numbers or wrong types).\n * @example\n * // Create cache with factory function\n * const cache = lru(100, 5000, true);\n * cache.set('key', 'value');\n *\n * @example\n * // Error handling\n * try {\n *   const cache = lru(-1); // Invalid max\n * } catch (error) {\n *   console.error(error.message); // \"Invalid max value\"\n * }\n * @see {@link LRU}\n * @since 1.0.0\n */\nfunction lru (max = 1000, ttl = 0, resetTtl = false) {\n\tif (isNaN(max) || max < 0) {\n\t\tthrow new TypeError(\"Invalid max value\");\n\t}\n\n\tif (isNaN(ttl) || ttl < 0) {\n\t\tthrow new TypeError(\"Invalid ttl value\");\n\t}\n\n\tif (typeof resetTtl !== \"boolean\") {\n\t\tthrow new TypeError(\"Invalid resetTtl value\");\n\t}\n\n\treturn new LRU(max, ttl, resetTtl);\n}export{LRU,lru};","\"use strict\";\nconst genericFontFamilies = [\n  \"serif\",\n  \"sans-serif\",\n  \"monospace\",\n  \"cursive\",\n  \"fantasy\",\n  \"system-ui\"\n];\nfunction fontStringFromTextStyle(style) {\n  const fontSizeString = typeof style.fontSize === \"number\" ? `${style.fontSize}px` : style.fontSize;\n  let fontFamilies = style.fontFamily;\n  if (!Array.isArray(style.fontFamily)) {\n    fontFamilies = style.fontFamily.split(\",\");\n  }\n  for (let i = fontFamilies.length - 1; i >= 0; i--) {\n    let fontFamily = fontFamilies[i].trim();\n    if (!/([\\\"\\'])[^\\'\\\"]+\\1/.test(fontFamily) && !genericFontFamilies.includes(fontFamily)) {\n      fontFamily = `\"${fontFamily}\"`;\n    }\n    fontFamilies[i] = fontFamily;\n  }\n  return `${style.fontStyle} ${style.fontVariant} ${style.fontWeight} ${fontSizeString} ${fontFamilies.join(\",\")}`;\n}\n\nexport { fontStringFromTextStyle };\n//# sourceMappingURL=fontStringFromTextStyle.mjs.map\n","import { lru } from 'tiny-lru';\nimport { DOMAdapter } from '../../../environment/adapter.mjs';\nimport { fontStringFromTextStyle } from './utils/fontStringFromTextStyle.mjs';\n\n\"use strict\";\nconst contextSettings = {\n  // TextMetrics requires getImageData readback for measuring fonts.\n  willReadFrequently: true\n};\nconst _CanvasTextMetrics = class _CanvasTextMetrics {\n  /**\n   * Checking that we can use modern canvas 2D API.\n   *\n   * Note: This is an unstable API, Chrome < 94 use `textLetterSpacing`, later versions use `letterSpacing`.\n   * @see TextMetrics.experimentalLetterSpacing\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/ICanvasRenderingContext2D/letterSpacing\n   * @see https://developer.chrome.com/origintrials/#/view_trial/3585991203293757441\n   */\n  static get experimentalLetterSpacingSupported() {\n    let result = _CanvasTextMetrics._experimentalLetterSpacingSupported;\n    if (result === void 0) {\n      const proto = DOMAdapter.get().getCanvasRenderingContext2D().prototype;\n      result = _CanvasTextMetrics._experimentalLetterSpacingSupported = \"letterSpacing\" in proto || \"textLetterSpacing\" in proto;\n    }\n    return result;\n  }\n  /**\n   * @param text - the text that was measured\n   * @param style - the style that was measured\n   * @param width - the measured width of the text\n   * @param height - the measured height of the text\n   * @param lines - an array of the lines of text broken by new lines and wrapping if specified in style\n   * @param lineWidths - an array of the line widths for each line matched to `lines`\n   * @param lineHeight - the measured line height for this style\n   * @param maxLineWidth - the maximum line width for all measured lines\n   * @param {FontMetrics} fontProperties - the font properties object from TextMetrics.measureFont\n   */\n  constructor(text, style, width, height, lines, lineWidths, lineHeight, maxLineWidth, fontProperties) {\n    this.text = text;\n    this.style = style;\n    this.width = width;\n    this.height = height;\n    this.lines = lines;\n    this.lineWidths = lineWidths;\n    this.lineHeight = lineHeight;\n    this.maxLineWidth = maxLineWidth;\n    this.fontProperties = fontProperties;\n  }\n  /**\n   * Measures the supplied string of text and returns a Rectangle.\n   * @param text - The text to measure.\n   * @param style - The text style to use for measuring\n   * @param canvas - optional specification of the canvas to use for measuring.\n   * @param wordWrap\n   * @returns Measured width and height of the text.\n   */\n  static measureText(text = \" \", style, canvas = _CanvasTextMetrics._canvas, wordWrap = style.wordWrap) {\n    const textKey = `${text}-${style.styleKey}-wordWrap-${wordWrap}`;\n    if (_CanvasTextMetrics._measurementCache.has(textKey)) {\n      return _CanvasTextMetrics._measurementCache.get(textKey);\n    }\n    const font = fontStringFromTextStyle(style);\n    const fontProperties = _CanvasTextMetrics.measureFont(font);\n    if (fontProperties.fontSize === 0) {\n      fontProperties.fontSize = style.fontSize;\n      fontProperties.ascent = style.fontSize;\n    }\n    const context = _CanvasTextMetrics.__context;\n    context.font = font;\n    const outputText = wordWrap ? _CanvasTextMetrics._wordWrap(text, style, canvas) : text;\n    const lines = outputText.split(/(?:\\r\\n|\\r|\\n)/);\n    const lineWidths = new Array(lines.length);\n    let maxLineWidth = 0;\n    for (let i = 0; i < lines.length; i++) {\n      const lineWidth = _CanvasTextMetrics._measureText(lines[i], style.letterSpacing, context);\n      lineWidths[i] = lineWidth;\n      maxLineWidth = Math.max(maxLineWidth, lineWidth);\n    }\n    const strokeWidth = style._stroke?.width || 0;\n    let width = maxLineWidth + strokeWidth;\n    if (style.dropShadow) {\n      width += style.dropShadow.distance;\n    }\n    const lineHeight = style.lineHeight || fontProperties.fontSize;\n    let height = Math.max(lineHeight, fontProperties.fontSize + strokeWidth) + (lines.length - 1) * (lineHeight + style.leading);\n    if (style.dropShadow) {\n      height += style.dropShadow.distance;\n    }\n    const measurements = new _CanvasTextMetrics(\n      text,\n      style,\n      width,\n      height,\n      lines,\n      lineWidths,\n      lineHeight + style.leading,\n      maxLineWidth,\n      fontProperties\n    );\n    _CanvasTextMetrics._measurementCache.set(textKey, measurements);\n    return measurements;\n  }\n  static _measureText(text, letterSpacing, context) {\n    let useExperimentalLetterSpacing = false;\n    if (_CanvasTextMetrics.experimentalLetterSpacingSupported) {\n      if (_CanvasTextMetrics.experimentalLetterSpacing) {\n        context.letterSpacing = `${letterSpacing}px`;\n        context.textLetterSpacing = `${letterSpacing}px`;\n        useExperimentalLetterSpacing = true;\n      } else {\n        context.letterSpacing = \"0px\";\n        context.textLetterSpacing = \"0px\";\n      }\n    }\n    const metrics = context.measureText(text);\n    let metricWidth = metrics.width;\n    const actualBoundingBoxLeft = -metrics.actualBoundingBoxLeft;\n    const actualBoundingBoxRight = metrics.actualBoundingBoxRight;\n    let boundsWidth = actualBoundingBoxRight - actualBoundingBoxLeft;\n    if (metricWidth > 0) {\n      if (useExperimentalLetterSpacing) {\n        metricWidth -= letterSpacing;\n        boundsWidth -= letterSpacing;\n      } else {\n        const val = (_CanvasTextMetrics.graphemeSegmenter(text).length - 1) * letterSpacing;\n        metricWidth += val;\n        boundsWidth += val;\n      }\n    }\n    return Math.max(metricWidth, boundsWidth);\n  }\n  /**\n   * Applies newlines to a string to have it optimally fit into the horizontal\n   * bounds set by the Text object's wordWrapWidth property.\n   * @param text - String to apply word wrapping to\n   * @param style - the style to use when wrapping\n   * @param canvas - optional specification of the canvas to use for measuring.\n   * @returns New string with new lines applied where required\n   */\n  static _wordWrap(text, style, canvas = _CanvasTextMetrics._canvas) {\n    const context = canvas.getContext(\"2d\", contextSettings);\n    let width = 0;\n    let line = \"\";\n    let lines = \"\";\n    const cache = /* @__PURE__ */ Object.create(null);\n    const { letterSpacing, whiteSpace } = style;\n    const collapseSpaces = _CanvasTextMetrics._collapseSpaces(whiteSpace);\n    const collapseNewlines = _CanvasTextMetrics._collapseNewlines(whiteSpace);\n    let canPrependSpaces = !collapseSpaces;\n    const wordWrapWidth = style.wordWrapWidth + letterSpacing;\n    const tokens = _CanvasTextMetrics._tokenize(text);\n    for (let i = 0; i < tokens.length; i++) {\n      let token = tokens[i];\n      if (_CanvasTextMetrics._isNewline(token)) {\n        if (!collapseNewlines) {\n          lines += _CanvasTextMetrics._addLine(line);\n          canPrependSpaces = !collapseSpaces;\n          line = \"\";\n          width = 0;\n          continue;\n        }\n        token = \" \";\n      }\n      if (collapseSpaces) {\n        const currIsBreakingSpace = _CanvasTextMetrics.isBreakingSpace(token);\n        const lastIsBreakingSpace = _CanvasTextMetrics.isBreakingSpace(line[line.length - 1]);\n        if (currIsBreakingSpace && lastIsBreakingSpace) {\n          continue;\n        }\n      }\n      const tokenWidth = _CanvasTextMetrics._getFromCache(token, letterSpacing, cache, context);\n      if (tokenWidth > wordWrapWidth) {\n        if (line !== \"\") {\n          lines += _CanvasTextMetrics._addLine(line);\n          line = \"\";\n          width = 0;\n        }\n        if (_CanvasTextMetrics.canBreakWords(token, style.breakWords)) {\n          const characters = _CanvasTextMetrics.wordWrapSplit(token);\n          for (let j = 0; j < characters.length; j++) {\n            let char = characters[j];\n            let lastChar = char;\n            let k = 1;\n            while (characters[j + k]) {\n              const nextChar = characters[j + k];\n              if (!_CanvasTextMetrics.canBreakChars(lastChar, nextChar, token, j, style.breakWords)) {\n                char += nextChar;\n              } else {\n                break;\n              }\n              lastChar = nextChar;\n              k++;\n            }\n            j += k - 1;\n            const characterWidth = _CanvasTextMetrics._getFromCache(char, letterSpacing, cache, context);\n            if (characterWidth + width > wordWrapWidth) {\n              lines += _CanvasTextMetrics._addLine(line);\n              canPrependSpaces = false;\n              line = \"\";\n              width = 0;\n            }\n            line += char;\n            width += characterWidth;\n          }\n        } else {\n          if (line.length > 0) {\n            lines += _CanvasTextMetrics._addLine(line);\n            line = \"\";\n            width = 0;\n          }\n          const isLastToken = i === tokens.length - 1;\n          lines += _CanvasTextMetrics._addLine(token, !isLastToken);\n          canPrependSpaces = false;\n          line = \"\";\n          width = 0;\n        }\n      } else {\n        if (tokenWidth + width > wordWrapWidth) {\n          canPrependSpaces = false;\n          lines += _CanvasTextMetrics._addLine(line);\n          line = \"\";\n          width = 0;\n        }\n        if (line.length > 0 || !_CanvasTextMetrics.isBreakingSpace(token) || canPrependSpaces) {\n          line += token;\n          width += tokenWidth;\n        }\n      }\n    }\n    lines += _CanvasTextMetrics._addLine(line, false);\n    return lines;\n  }\n  /**\n   * Convenience function for logging each line added during the wordWrap method.\n   * @param line    - The line of text to add\n   * @param newLine - Add new line character to end\n   * @returns A formatted line\n   */\n  static _addLine(line, newLine = true) {\n    line = _CanvasTextMetrics._trimRight(line);\n    line = newLine ? `${line}\n` : line;\n    return line;\n  }\n  /**\n   * Gets & sets the widths of calculated characters in a cache object\n   * @param key            - The key\n   * @param letterSpacing  - The letter spacing\n   * @param cache          - The cache\n   * @param context        - The canvas context\n   * @returns The from cache.\n   */\n  static _getFromCache(key, letterSpacing, cache, context) {\n    let width = cache[key];\n    if (typeof width !== \"number\") {\n      width = _CanvasTextMetrics._measureText(key, letterSpacing, context) + letterSpacing;\n      cache[key] = width;\n    }\n    return width;\n  }\n  /**\n   * Determines whether we should collapse breaking spaces.\n   * @param whiteSpace - The TextStyle property whiteSpace\n   * @returns Should collapse\n   */\n  static _collapseSpaces(whiteSpace) {\n    return whiteSpace === \"normal\" || whiteSpace === \"pre-line\";\n  }\n  /**\n   * Determines whether we should collapse newLine chars.\n   * @param whiteSpace - The white space\n   * @returns should collapse\n   */\n  static _collapseNewlines(whiteSpace) {\n    return whiteSpace === \"normal\";\n  }\n  /**\n   * Trims breaking whitespaces from string.\n   * @param text - The text\n   * @returns Trimmed string\n   */\n  static _trimRight(text) {\n    if (typeof text !== \"string\") {\n      return \"\";\n    }\n    for (let i = text.length - 1; i >= 0; i--) {\n      const char = text[i];\n      if (!_CanvasTextMetrics.isBreakingSpace(char)) {\n        break;\n      }\n      text = text.slice(0, -1);\n    }\n    return text;\n  }\n  /**\n   * Determines if char is a newline.\n   * @param char - The character\n   * @returns True if newline, False otherwise.\n   */\n  static _isNewline(char) {\n    if (typeof char !== \"string\") {\n      return false;\n    }\n    return _CanvasTextMetrics._newlines.includes(char.charCodeAt(0));\n  }\n  /**\n   * Determines if char is a breaking whitespace.\n   *\n   * It allows one to determine whether char should be a breaking whitespace\n   * For example certain characters in CJK langs or numbers.\n   * It must return a boolean.\n   * @param char - The character\n   * @param [_nextChar] - The next character\n   * @returns True if whitespace, False otherwise.\n   */\n  static isBreakingSpace(char, _nextChar) {\n    if (typeof char !== \"string\") {\n      return false;\n    }\n    return _CanvasTextMetrics._breakingSpaces.includes(char.charCodeAt(0));\n  }\n  /**\n   * Splits a string into words, breaking-spaces and newLine characters\n   * @param text - The text\n   * @returns A tokenized array\n   */\n  static _tokenize(text) {\n    const tokens = [];\n    let token = \"\";\n    if (typeof text !== \"string\") {\n      return tokens;\n    }\n    for (let i = 0; i < text.length; i++) {\n      const char = text[i];\n      const nextChar = text[i + 1];\n      if (_CanvasTextMetrics.isBreakingSpace(char, nextChar) || _CanvasTextMetrics._isNewline(char)) {\n        if (token !== \"\") {\n          tokens.push(token);\n          token = \"\";\n        }\n        if (char === \"\\r\" && nextChar === \"\\n\") {\n          tokens.push(\"\\r\\n\");\n          i++;\n        } else {\n          tokens.push(char);\n        }\n        continue;\n      }\n      token += char;\n    }\n    if (token !== \"\") {\n      tokens.push(token);\n    }\n    return tokens;\n  }\n  /**\n   * Overridable helper method used internally by TextMetrics, exposed to allow customizing the class's behavior.\n   *\n   * It allows one to customise which words should break\n   * Examples are if the token is CJK or numbers.\n   * It must return a boolean.\n   * @param _token - The token\n   * @param breakWords - The style attr break words\n   * @returns Whether to break word or not\n   */\n  static canBreakWords(_token, breakWords) {\n    return breakWords;\n  }\n  /**\n   * Overridable helper method used internally by TextMetrics, exposed to allow customizing the class's behavior.\n   *\n   * It allows one to determine whether a pair of characters\n   * should be broken by newlines\n   * For example certain characters in CJK langs or numbers.\n   * It must return a boolean.\n   * @param _char - The character\n   * @param _nextChar - The next character\n   * @param _token - The token/word the characters are from\n   * @param _index - The index in the token of the char\n   * @param _breakWords - The style attr break words\n   * @returns whether to break word or not\n   */\n  static canBreakChars(_char, _nextChar, _token, _index, _breakWords) {\n    return true;\n  }\n  /**\n   * Overridable helper method used internally by TextMetrics, exposed to allow customizing the class's behavior.\n   *\n   * It is called when a token (usually a word) has to be split into separate pieces\n   * in order to determine the point to break a word.\n   * It must return an array of characters.\n   * @param token - The token to split\n   * @returns The characters of the token\n   * @see CanvasTextMetrics.graphemeSegmenter\n   */\n  static wordWrapSplit(token) {\n    return _CanvasTextMetrics.graphemeSegmenter(token);\n  }\n  /**\n   * Calculates the ascent, descent and fontSize of a given font-style\n   * @param font - String representing the style of the font\n   * @returns Font properties object\n   */\n  static measureFont(font) {\n    if (_CanvasTextMetrics._fonts[font]) {\n      return _CanvasTextMetrics._fonts[font];\n    }\n    const context = _CanvasTextMetrics._context;\n    context.font = font;\n    const metrics = context.measureText(_CanvasTextMetrics.METRICS_STRING + _CanvasTextMetrics.BASELINE_SYMBOL);\n    const properties = {\n      ascent: metrics.actualBoundingBoxAscent,\n      descent: metrics.actualBoundingBoxDescent,\n      fontSize: metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent\n    };\n    _CanvasTextMetrics._fonts[font] = properties;\n    return properties;\n  }\n  /**\n   * Clear font metrics in metrics cache.\n   * @param {string} [font] - font name. If font name not set then clear cache for all fonts.\n   */\n  static clearMetrics(font = \"\") {\n    if (font) {\n      delete _CanvasTextMetrics._fonts[font];\n    } else {\n      _CanvasTextMetrics._fonts = {};\n    }\n  }\n  /**\n   * Cached canvas element for measuring text\n   * TODO: this should be private, but isn't because of backward compat, will fix later.\n   * @ignore\n   */\n  static get _canvas() {\n    if (!_CanvasTextMetrics.__canvas) {\n      let canvas;\n      try {\n        const c = new OffscreenCanvas(0, 0);\n        const context = c.getContext(\"2d\", contextSettings);\n        if (context?.measureText) {\n          _CanvasTextMetrics.__canvas = c;\n          return c;\n        }\n        canvas = DOMAdapter.get().createCanvas();\n      } catch (_cx) {\n        canvas = DOMAdapter.get().createCanvas();\n      }\n      canvas.width = canvas.height = 10;\n      _CanvasTextMetrics.__canvas = canvas;\n    }\n    return _CanvasTextMetrics.__canvas;\n  }\n  /**\n   * TODO: this should be private, but isn't because of backward compat, will fix later.\n   * @ignore\n   */\n  static get _context() {\n    if (!_CanvasTextMetrics.__context) {\n      _CanvasTextMetrics.__context = _CanvasTextMetrics._canvas.getContext(\"2d\", contextSettings);\n    }\n    return _CanvasTextMetrics.__context;\n  }\n};\n/**\n * String used for calculate font metrics.\n * These characters are all tall to help calculate the height required for text.\n */\n_CanvasTextMetrics.METRICS_STRING = \"|\\xC9q\\xC5\";\n/** Baseline symbol for calculate font metrics. */\n_CanvasTextMetrics.BASELINE_SYMBOL = \"M\";\n/** Baseline multiplier for calculate font metrics. */\n_CanvasTextMetrics.BASELINE_MULTIPLIER = 1.4;\n/** Height multiplier for setting height of canvas to calculate font metrics. */\n_CanvasTextMetrics.HEIGHT_MULTIPLIER = 2;\n/**\n * A Unicode \"character\", or \"grapheme cluster\", can be composed of multiple Unicode code points,\n * such as letters with diacritical marks (e.g. `'\\u0065\\u0301'`, letter e with acute)\n * or emojis with modifiers (e.g. `'\\uD83E\\uDDD1\\u200D\\uD83D\\uDCBB'`, technologist).\n * The new `Intl.Segmenter` API in ES2022 can split the string into grapheme clusters correctly. If it is not available,\n * PixiJS will fallback to use the iterator of String, which can only spilt the string into code points.\n * If you want to get full functionality in environments that don't support `Intl.Segmenter` (such as Firefox),\n * you can use other libraries such as [grapheme-splitter]{@link https://www.npmjs.com/package/grapheme-splitter}\n * or [graphemer]{@link https://www.npmjs.com/package/graphemer} to create a polyfill. Since these libraries can be\n * relatively large in size to handle various Unicode grapheme clusters properly, PixiJS won't use them directly.\n */\n_CanvasTextMetrics.graphemeSegmenter = (() => {\n  if (typeof Intl?.Segmenter === \"function\") {\n    const segmenter = new Intl.Segmenter();\n    return (s) => {\n      const segments = segmenter.segment(s);\n      const result = [];\n      let i = 0;\n      for (const segment of segments) {\n        result[i++] = segment.segment;\n      }\n      return result;\n    };\n  }\n  return (s) => [...s];\n})();\n/**\n * New rendering behavior for letter-spacing which uses Chrome's new native API. This will\n * lead to more accurate letter-spacing results because it does not try to manually draw\n * each character. However, this Chrome API is experimental and may not serve all cases yet.\n * @see TextMetrics.experimentalLetterSpacingSupported\n */\n_CanvasTextMetrics.experimentalLetterSpacing = false;\n/** Cache of {@link TextMetrics.FontMetrics} objects. */\n_CanvasTextMetrics._fonts = {};\n/** Cache of new line chars. */\n_CanvasTextMetrics._newlines = [\n  10,\n  // line feed\n  13\n  // carriage return\n];\n/** Cache of breaking spaces. */\n_CanvasTextMetrics._breakingSpaces = [\n  9,\n  // character tabulation\n  32,\n  // space\n  8192,\n  // en quad\n  8193,\n  // em quad\n  8194,\n  // en space\n  8195,\n  // em space\n  8196,\n  // three-per-em space\n  8197,\n  // four-per-em space\n  8198,\n  // six-per-em space\n  8200,\n  // punctuation space\n  8201,\n  // thin space\n  8202,\n  // hair space\n  8287,\n  // medium mathematical space\n  12288\n  // ideographic space\n];\n/** Cache for measured text metrics */\n_CanvasTextMetrics._measurementCache = lru(1e3);\nlet CanvasTextMetrics = _CanvasTextMetrics;\n\nexport { CanvasTextMetrics };\n//# sourceMappingURL=CanvasTextMetrics.mjs.map\n","import { Color } from '../../../../color/Color.mjs';\nimport { DOMAdapter } from '../../../../environment/adapter.mjs';\nimport { Matrix } from '../../../../maths/matrix/Matrix.mjs';\nimport { ImageSource } from '../../../../rendering/renderers/shared/texture/sources/ImageSource.mjs';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { uid } from '../../../../utils/data/uid.mjs';\nimport { deprecation } from '../../../../utils/logging/deprecation.mjs';\nimport { definedProps } from '../../../container/utils/definedProps.mjs';\n\n\"use strict\";\nconst emptyColorStops = [{ offset: 0, color: \"white\" }, { offset: 1, color: \"black\" }];\nconst _FillGradient = class _FillGradient {\n  constructor(...args) {\n    /**\n     * Unique identifier for this gradient instance\n     * @internal\n     */\n    this.uid = uid(\"fillGradient\");\n    /**\n     * Internal tick counter to track changes in the gradient.\n     * This is used to invalidate the gradient when the texture changes.\n     * @internal\n     */\n    this._tick = 0;\n    /** Type of gradient - currently only supports 'linear' */\n    this.type = \"linear\";\n    /** Array of color stops defining the gradient */\n    this.colorStops = [];\n    let options = ensureGradientOptions(args);\n    const defaults = options.type === \"radial\" ? _FillGradient.defaultRadialOptions : _FillGradient.defaultLinearOptions;\n    options = { ...defaults, ...definedProps(options) };\n    this._textureSize = options.textureSize;\n    this._wrapMode = options.wrapMode;\n    if (options.type === \"radial\") {\n      this.center = options.center;\n      this.outerCenter = options.outerCenter ?? this.center;\n      this.innerRadius = options.innerRadius;\n      this.outerRadius = options.outerRadius;\n      this.scale = options.scale;\n      this.rotation = options.rotation;\n    } else {\n      this.start = options.start;\n      this.end = options.end;\n    }\n    this.textureSpace = options.textureSpace;\n    this.type = options.type;\n    options.colorStops.forEach((stop) => {\n      this.addColorStop(stop.offset, stop.color);\n    });\n  }\n  /**\n   * Adds a color stop to the gradient\n   * @param offset - Position of the stop (0-1)\n   * @param color - Color of the stop\n   * @returns This gradient instance for chaining\n   */\n  addColorStop(offset, color) {\n    this.colorStops.push({ offset, color: Color.shared.setValue(color).toHexa() });\n    return this;\n  }\n  /**\n   * Builds the internal texture and transform for the gradient.\n   * Called automatically when the gradient is first used.\n   * @internal\n   */\n  buildLinearGradient() {\n    if (this.texture)\n      return;\n    let { x: x0, y: y0 } = this.start;\n    let { x: x1, y: y1 } = this.end;\n    let dx = x1 - x0;\n    let dy = y1 - y0;\n    const flip = dx < 0 || dy < 0;\n    if (this._wrapMode === \"clamp-to-edge\") {\n      if (dx < 0) {\n        const temp = x0;\n        x0 = x1;\n        x1 = temp;\n        dx *= -1;\n      }\n      if (dy < 0) {\n        const temp = y0;\n        y0 = y1;\n        y1 = temp;\n        dy *= -1;\n      }\n    }\n    const colorStops = this.colorStops.length ? this.colorStops : emptyColorStops;\n    const defaultSize = this._textureSize;\n    const { canvas, context } = getCanvas(defaultSize, 1);\n    const gradient = !flip ? context.createLinearGradient(0, 0, this._textureSize, 0) : context.createLinearGradient(this._textureSize, 0, 0, 0);\n    addColorStops(gradient, colorStops);\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, defaultSize, 1);\n    this.texture = new Texture({\n      source: new ImageSource({\n        resource: canvas,\n        addressMode: this._wrapMode\n      })\n    });\n    const dist = Math.sqrt(dx * dx + dy * dy);\n    const angle = Math.atan2(dy, dx);\n    const m = new Matrix();\n    m.scale(dist / defaultSize, 1);\n    m.rotate(angle);\n    m.translate(x0, y0);\n    if (this.textureSpace === \"local\") {\n      m.scale(defaultSize, defaultSize);\n    }\n    this.transform = m;\n  }\n  /**\n   * Builds the internal texture and transform for the gradient.\n   * Called automatically when the gradient is first used.\n   * @internal\n   */\n  buildGradient() {\n    if (!this.texture)\n      this._tick++;\n    if (this.type === \"linear\") {\n      this.buildLinearGradient();\n    } else {\n      this.buildRadialGradient();\n    }\n  }\n  /**\n   * Builds the internal texture and transform for the radial gradient.\n   * Called automatically when the gradient is first used.\n   * @internal\n   */\n  buildRadialGradient() {\n    if (this.texture)\n      return;\n    const colorStops = this.colorStops.length ? this.colorStops : emptyColorStops;\n    const defaultSize = this._textureSize;\n    const { canvas, context } = getCanvas(defaultSize, defaultSize);\n    const { x: x0, y: y0 } = this.center;\n    const { x: x1, y: y1 } = this.outerCenter;\n    const r0 = this.innerRadius;\n    const r1 = this.outerRadius;\n    const ox = x1 - r1;\n    const oy = y1 - r1;\n    const scale = defaultSize / (r1 * 2);\n    const cx = (x0 - ox) * scale;\n    const cy = (y0 - oy) * scale;\n    const gradient = context.createRadialGradient(\n      cx,\n      cy,\n      r0 * scale,\n      (x1 - ox) * scale,\n      (y1 - oy) * scale,\n      r1 * scale\n    );\n    addColorStops(gradient, colorStops);\n    context.fillStyle = colorStops[colorStops.length - 1].color;\n    context.fillRect(0, 0, defaultSize, defaultSize);\n    context.fillStyle = gradient;\n    context.translate(cx, cy);\n    context.rotate(this.rotation);\n    context.scale(1, this.scale);\n    context.translate(-cx, -cy);\n    context.fillRect(0, 0, defaultSize, defaultSize);\n    this.texture = new Texture({\n      source: new ImageSource({\n        resource: canvas,\n        addressMode: this._wrapMode\n      })\n    });\n    const m = new Matrix();\n    m.scale(1 / scale, 1 / scale);\n    m.translate(ox, oy);\n    if (this.textureSpace === \"local\") {\n      m.scale(defaultSize, defaultSize);\n    }\n    this.transform = m;\n  }\n  /** Destroys the gradient, releasing resources. This will also destroy the internal texture. */\n  destroy() {\n    this.texture?.destroy(true);\n    this.texture = null;\n    this.transform = null;\n    this.colorStops = [];\n    this.start = null;\n    this.end = null;\n    this.center = null;\n    this.outerCenter = null;\n  }\n  /**\n   * Returns a unique key for this gradient instance.\n   * This key is used for caching and texture management.\n   * @returns {string} Unique key for the gradient\n   */\n  get styleKey() {\n    return `fill-gradient-${this.uid}-${this._tick}`;\n  }\n};\n/** Default options for creating a gradient fill */\n_FillGradient.defaultLinearOptions = {\n  start: { x: 0, y: 0 },\n  end: { x: 0, y: 1 },\n  colorStops: [],\n  textureSpace: \"local\",\n  type: \"linear\",\n  textureSize: 256,\n  wrapMode: \"clamp-to-edge\"\n};\n/** Default options for creating a radial gradient fill */\n_FillGradient.defaultRadialOptions = {\n  center: { x: 0.5, y: 0.5 },\n  innerRadius: 0,\n  outerRadius: 0.5,\n  colorStops: [],\n  scale: 1,\n  textureSpace: \"local\",\n  type: \"radial\",\n  textureSize: 256,\n  wrapMode: \"clamp-to-edge\"\n};\nlet FillGradient = _FillGradient;\nfunction addColorStops(gradient, colorStops) {\n  for (let i = 0; i < colorStops.length; i++) {\n    const stop = colorStops[i];\n    gradient.addColorStop(stop.offset, stop.color);\n  }\n}\nfunction getCanvas(width, height) {\n  const canvas = DOMAdapter.get().createCanvas(width, height);\n  const context = canvas.getContext(\"2d\");\n  return { canvas, context };\n}\nfunction ensureGradientOptions(args) {\n  let options = args[0] ?? {};\n  if (typeof options === \"number\" || args[1]) {\n    deprecation(\"8.5.2\", `use options object instead`);\n    options = {\n      type: \"linear\",\n      start: { x: args[0], y: args[1] },\n      end: { x: args[2], y: args[3] },\n      textureSpace: args[4],\n      textureSize: args[5] ?? FillGradient.defaultLinearOptions.textureSize\n    };\n  }\n  return options;\n}\n\nexport { FillGradient };\n//# sourceMappingURL=FillGradient.mjs.map\n","import { Matrix } from '../../../../maths/matrix/Matrix.mjs';\nimport { uid } from '../../../../utils/data/uid.mjs';\n\n\"use strict\";\nconst repetitionMap = {\n  repeat: {\n    addressModeU: \"repeat\",\n    addressModeV: \"repeat\"\n  },\n  \"repeat-x\": {\n    addressModeU: \"repeat\",\n    addressModeV: \"clamp-to-edge\"\n  },\n  \"repeat-y\": {\n    addressModeU: \"clamp-to-edge\",\n    addressModeV: \"repeat\"\n  },\n  \"no-repeat\": {\n    addressModeU: \"clamp-to-edge\",\n    addressModeV: \"clamp-to-edge\"\n  }\n};\nclass FillPattern {\n  constructor(texture, repetition) {\n    /**\n     * unique id for this fill pattern\n     * @internal\n     */\n    this.uid = uid(\"fillPattern\");\n    /**\n     * Internal tick counter to track changes in the pattern.\n     * This is used to invalidate the pattern when the texture or transform changes.\n     * @internal\n     */\n    this._tick = 0;\n    /** The transform matrix applied to the pattern */\n    this.transform = new Matrix();\n    this.texture = texture;\n    this.transform.scale(\n      1 / texture.frame.width,\n      1 / texture.frame.height\n    );\n    if (repetition) {\n      texture.source.style.addressModeU = repetitionMap[repetition].addressModeU;\n      texture.source.style.addressModeV = repetitionMap[repetition].addressModeV;\n    }\n  }\n  /**\n   * Sets the transform for the pattern\n   * @param transform - The transform matrix to apply to the pattern.\n   * If not provided, the pattern will use the default transform.\n   */\n  setTransform(transform) {\n    const texture = this.texture;\n    this.transform.copyFrom(transform);\n    this.transform.invert();\n    this.transform.scale(\n      1 / texture.frame.width,\n      1 / texture.frame.height\n    );\n    this._tick++;\n  }\n  /** Internal texture used to render the gradient */\n  get texture() {\n    return this._texture;\n  }\n  set texture(value) {\n    if (this._texture === value)\n      return;\n    this._texture = value;\n    this._tick++;\n  }\n  /**\n   * Returns a unique key for this instance.\n   * This key is used for caching.\n   * @returns {string} Unique key for the instance\n   */\n  get styleKey() {\n    return `fill-pattern-${this.uid}-${this._tick}`;\n  }\n  /** Destroys the fill pattern, releasing resources. This will also destroy the internal texture. */\n  destroy() {\n    this.texture.destroy(true);\n    this.texture = null;\n  }\n}\n\nexport { FillPattern };\n//# sourceMappingURL=FillPattern.mjs.map\n","\nmodule.exports = parse\n\n/**\n * expected argument lengths\n * @type {Object}\n */\n\nvar length = {a: 7, c: 6, h: 1, l: 2, m: 2, q: 4, s: 4, t: 2, v: 1, z: 0}\n\n/**\n * segment pattern\n * @type {RegExp}\n */\n\nvar segment = /([astvzqmhlc])([^astvzqmhlc]*)/ig\n\n/**\n * parse an svg path data string. Generates an Array\n * of commands where each command is an Array of the\n * form `[command, arg1, arg2, ...]`\n *\n * @param {String} path\n * @return {Array}\n */\n\nfunction parse(path) {\n\tvar data = []\n\tpath.replace(segment, function(_, command, args){\n\t\tvar type = command.toLowerCase()\n\t\targs = parseValues(args)\n\n\t\t// overloaded moveTo\n\t\tif (type == 'm' && args.length > 2) {\n\t\t\tdata.push([command].concat(args.splice(0, 2)))\n\t\t\ttype = 'l'\n\t\t\tcommand = command == 'm' ? 'l' : 'L'\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (args.length == length[type]) {\n\t\t\t\targs.unshift(command)\n\t\t\t\treturn data.push(args)\n\t\t\t}\n\t\t\tif (args.length < length[type]) throw new Error('malformed path data')\n\t\t\tdata.push([command].concat(args.splice(0, length[type])))\n\t\t}\n\t})\n\treturn data\n}\n\nvar number = /-?[0-9]*\\.?[0-9]+(?:e[-+]?\\d+)?/ig\n\nfunction parseValues(args) {\n\tvar numbers = args.match(number)\n\treturn numbers ? numbers.map(Number) : []\n}\n","import parse from 'parse-svg-path';\nimport { warn } from '../../../../utils/logging/warn.mjs';\n\n\"use strict\";\nfunction parseSVGPath(svgPath, path) {\n  const commands = parse(svgPath);\n  const subpaths = [];\n  let currentSubPath = null;\n  let lastX = 0;\n  let lastY = 0;\n  for (let i = 0; i < commands.length; i++) {\n    const command = commands[i];\n    const type = command[0];\n    const data = command;\n    switch (type) {\n      case \"M\":\n        lastX = data[1];\n        lastY = data[2];\n        path.moveTo(lastX, lastY);\n        break;\n      case \"m\":\n        lastX += data[1];\n        lastY += data[2];\n        path.moveTo(lastX, lastY);\n        break;\n      case \"H\":\n        lastX = data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"h\":\n        lastX += data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"V\":\n        lastY = data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"v\":\n        lastY += data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"L\":\n        lastX = data[1];\n        lastY = data[2];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"l\":\n        lastX += data[1];\n        lastY += data[2];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"C\":\n        lastX = data[5];\n        lastY = data[6];\n        path.bezierCurveTo(\n          data[1],\n          data[2],\n          // First control point\n          data[3],\n          data[4],\n          // Second control point\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"c\":\n        path.bezierCurveTo(\n          lastX + data[1],\n          lastY + data[2],\n          // First control point\n          lastX + data[3],\n          lastY + data[4],\n          // Second control point\n          lastX + data[5],\n          lastY + data[6]\n          // End point\n        );\n        lastX += data[5];\n        lastY += data[6];\n        break;\n      case \"S\":\n        lastX = data[3];\n        lastY = data[4];\n        path.bezierCurveToShort(\n          data[1],\n          data[2],\n          // Control point\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"s\":\n        path.bezierCurveToShort(\n          lastX + data[1],\n          lastY + data[2],\n          // Control point\n          lastX + data[3],\n          lastY + data[4]\n          // End point\n        );\n        lastX += data[3];\n        lastY += data[4];\n        break;\n      case \"Q\":\n        lastX = data[3];\n        lastY = data[4];\n        path.quadraticCurveTo(\n          data[1],\n          data[2],\n          // Control point\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"q\":\n        path.quadraticCurveTo(\n          lastX + data[1],\n          lastY + data[2],\n          // Control point\n          lastX + data[3],\n          lastY + data[4]\n          // End point\n        );\n        lastX += data[3];\n        lastY += data[4];\n        break;\n      case \"T\":\n        lastX = data[1];\n        lastY = data[2];\n        path.quadraticCurveToShort(\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"t\":\n        lastX += data[1];\n        lastY += data[2];\n        path.quadraticCurveToShort(\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"A\":\n        lastX = data[6];\n        lastY = data[7];\n        path.arcToSvg(\n          data[1],\n          // rx\n          data[2],\n          // ry\n          data[3],\n          // x-axis-rotation\n          data[4],\n          // large-arc-flag\n          data[5],\n          // sweep-flag\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"a\":\n        lastX += data[6];\n        lastY += data[7];\n        path.arcToSvg(\n          data[1],\n          // rx\n          data[2],\n          // ry\n          data[3],\n          // x-axis-rotation\n          data[4],\n          // large-arc-flag\n          data[5],\n          // sweep-flag\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"Z\":\n      case \"z\":\n        path.closePath();\n        if (subpaths.length > 0) {\n          currentSubPath = subpaths.pop();\n          if (currentSubPath) {\n            lastX = currentSubPath.startX;\n            lastY = currentSubPath.startY;\n          } else {\n            lastX = 0;\n            lastY = 0;\n          }\n        }\n        currentSubPath = null;\n        break;\n      default:\n        warn(`Unknown SVG path command: ${type}`);\n    }\n    if (type !== \"Z\" && type !== \"z\") {\n      if (currentSubPath === null) {\n        currentSubPath = { startX: lastX, startY: lastY };\n        subpaths.push(currentSubPath);\n      }\n    }\n  }\n  return path;\n}\n\nexport { parseSVGPath };\n//# sourceMappingURL=parseSVGPath.mjs.map\n","import { Rectangle } from './Rectangle.mjs';\n\n\"use strict\";\nclass Circle {\n  /**\n   * @param x - The X coordinate of the center of this circle\n   * @param y - The Y coordinate of the center of this circle\n   * @param radius - The radius of the circle\n   */\n  constructor(x = 0, y = 0, radius = 0) {\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks.\n     * @example\n     * ```ts\n     * // Check shape type\n     * const shape = new Circle(0, 0, 50);\n     * console.log(shape.type); // 'circle'\n     *\n     * // Use in type guards\n     * if (shape.type === 'circle') {\n     *     console.log(shape.radius);\n     * }\n     * ```\n     * @remarks\n     * - Used for shape type checking\n     * - More efficient than instanceof\n     * - Read-only property\n     * @readonly\n     * @default 'circle'\n     * @see {@link SHAPE_PRIMITIVE} For all shape types\n     * @see {@link ShapePrimitive} For shape interface\n     */\n    this.type = \"circle\";\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n  }\n  /**\n   * Creates a clone of this Circle instance.\n   * @example\n   * ```ts\n   * // Basic circle cloning\n   * const original = new Circle(100, 100, 50);\n   * const copy = original.clone();\n   *\n   * // Clone and modify\n   * const modified = original.clone();\n   * modified.radius = 75;\n   *\n   * // Verify independence\n   * console.log(original.radius); // 50\n   * console.log(modified.radius); // 75\n   * ```\n   * @returns A copy of the Circle\n   * @see {@link Circle.copyFrom} For copying into existing circle\n   * @see {@link Circle.copyTo} For copying to another circle\n   */\n  clone() {\n    return new Circle(this.x, this.y, this.radius);\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this circle.\n   *\n   * Uses the distance formula to determine if a point is inside the circle's radius.\n   *\n   * Commonly used for hit testing in PixiJS events and graphics.\n   * @example\n   * ```ts\n   * // Basic containment check\n   * const circle = new Circle(100, 100, 50);\n   * const isInside = circle.contains(120, 120);\n   *\n   * // Check mouse position\n   * const circle = new Circle(0, 0, 100);\n   * container.hitArea = circle;\n   * container.on('pointermove', (e) => {\n   *     // only called if pointer is within circle\n   * });\n   * ```\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @returns Whether the x/y coordinates are within this Circle\n   * @see {@link Circle.strokeContains} For checking stroke intersection\n   * @see {@link Circle.getBounds} For getting bounding box\n   */\n  contains(x, y) {\n    if (this.radius <= 0)\n      return false;\n    const r2 = this.radius * this.radius;\n    let dx = this.x - x;\n    let dy = this.y - y;\n    dx *= dx;\n    dy *= dy;\n    return dx + dy <= r2;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this circle including the stroke.\n   * @example\n   * ```ts\n   * // Basic stroke check\n   * const circle = new Circle(100, 100, 50);\n   * const isOnStroke = circle.strokeContains(150, 100, 4); // 4px line width\n   *\n   * // Check with different alignments\n   * const innerStroke = circle.strokeContains(150, 100, 4, 1);   // Inside\n   * const centerStroke = circle.strokeContains(150, 100, 4, 0.5); // Centered\n   * const outerStroke = circle.strokeContains(150, 100, 4, 0);   // Outside\n   * ```\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @param width - The width of the line to check\n   * @param alignment - The alignment of the stroke, 0.5 by default\n   * @returns Whether the x/y coordinates are within this Circle's stroke\n   * @see {@link Circle.contains} For checking fill containment\n   * @see {@link Circle.getBounds} For getting stroke bounds\n   */\n  strokeContains(x, y, width, alignment = 0.5) {\n    if (this.radius === 0)\n      return false;\n    const dx = this.x - x;\n    const dy = this.y - y;\n    const radius = this.radius;\n    const outerWidth = (1 - alignment) * width;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return distance <= radius + outerWidth && distance > radius - (width - outerWidth);\n  }\n  /**\n   * Returns the framing rectangle of the circle as a Rectangle object.\n   * @example\n   * ```ts\n   * // Basic bounds calculation\n   * const circle = new Circle(100, 100, 50);\n   * const bounds = circle.getBounds();\n   * // bounds: x=50, y=50, width=100, height=100\n   *\n   * // Reuse existing rectangle\n   * const rect = new Rectangle();\n   * circle.getBounds(rect);\n   * ```\n   * @param out - Optional Rectangle object to store the result\n   * @returns The framing rectangle\n   * @see {@link Rectangle} For rectangle properties\n   * @see {@link Circle.contains} For point containment\n   */\n  getBounds(out) {\n    out || (out = new Rectangle());\n    out.x = this.x - this.radius;\n    out.y = this.y - this.radius;\n    out.width = this.radius * 2;\n    out.height = this.radius * 2;\n    return out;\n  }\n  /**\n   * Copies another circle to this one.\n   * @example\n   * ```ts\n   * // Basic copying\n   * const source = new Circle(100, 100, 50);\n   * const target = new Circle();\n   * target.copyFrom(source);\n   * ```\n   * @param circle - The circle to copy from\n   * @returns Returns itself\n   * @see {@link Circle.copyTo} For copying to another circle\n   * @see {@link Circle.clone} For creating new circle copy\n   */\n  copyFrom(circle) {\n    this.x = circle.x;\n    this.y = circle.y;\n    this.radius = circle.radius;\n    return this;\n  }\n  /**\n   * Copies this circle to another one.\n   * @example\n   * ```ts\n   * // Basic copying\n   * const source = new Circle(100, 100, 50);\n   * const target = new Circle();\n   * source.copyTo(target);\n   * ```\n   * @param circle - The circle to copy to\n   * @returns Returns given parameter\n   * @see {@link Circle.copyFrom} For copying from another circle\n   * @see {@link Circle.clone} For creating new circle copy\n   */\n  copyTo(circle) {\n    circle.copyFrom(this);\n    return circle;\n  }\n  toString() {\n    return `[pixi.js/math:Circle x=${this.x} y=${this.y} radius=${this.radius}]`;\n  }\n}\n\nexport { Circle };\n//# sourceMappingURL=Circle.mjs.map\n","import { Rectangle } from './Rectangle.mjs';\n\n\"use strict\";\nclass Ellipse {\n  /**\n   * @param x - The X coordinate of the center of this ellipse\n   * @param y - The Y coordinate of the center of this ellipse\n   * @param halfWidth - The half width of this ellipse\n   * @param halfHeight - The half height of this ellipse\n   */\n  constructor(x = 0, y = 0, halfWidth = 0, halfHeight = 0) {\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     * @example\n     * ```ts\n     * // Check shape type\n     * const shape = new Ellipse(0, 0, 50, 25);\n     * console.log(shape.type); // 'ellipse'\n     *\n     * // Use in type guards\n     * if (shape.type === 'ellipse') {\n     *     console.log(shape.halfWidth, shape.halfHeight);\n     * }\n     * ```\n     * @readonly\n     * @default 'ellipse'\n     * @see {@link SHAPE_PRIMITIVE} For all shape types\n     */\n    this.type = \"ellipse\";\n    this.x = x;\n    this.y = y;\n    this.halfWidth = halfWidth;\n    this.halfHeight = halfHeight;\n  }\n  /**\n   * Creates a clone of this Ellipse instance.\n   * @example\n   * ```ts\n   * // Basic cloning\n   * const original = new Ellipse(100, 100, 50, 25);\n   * const copy = original.clone();\n   *\n   * // Clone and modify\n   * const modified = original.clone();\n   * modified.halfWidth *= 2;\n   * modified.halfHeight *= 2;\n   *\n   * // Verify independence\n   * console.log(original.halfWidth);  // 50\n   * console.log(modified.halfWidth);  // 100\n   * ```\n   * @returns A copy of the ellipse\n   * @see {@link Ellipse.copyFrom} For copying into existing ellipse\n   * @see {@link Ellipse.copyTo} For copying to another ellipse\n   */\n  clone() {\n    return new Ellipse(this.x, this.y, this.halfWidth, this.halfHeight);\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this ellipse.\n   * Uses normalized coordinates and the ellipse equation to determine containment.\n   * @example\n   * ```ts\n   * // Basic containment check\n   * const ellipse = new Ellipse(100, 100, 50, 25);\n   * const isInside = ellipse.contains(120, 110);\n   * ```\n   * @remarks\n   * - Uses ellipse equation (x²/a² + y²/b² ≤ 1)\n   * - Returns false if dimensions are 0 or negative\n   * - Normalized to center (0,0) for calculation\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @returns Whether the x/y coords are within this ellipse\n   * @see {@link Ellipse.strokeContains} For checking stroke intersection\n   * @see {@link Ellipse.getBounds} For getting containing rectangle\n   */\n  contains(x, y) {\n    if (this.halfWidth <= 0 || this.halfHeight <= 0) {\n      return false;\n    }\n    let normx = (x - this.x) / this.halfWidth;\n    let normy = (y - this.y) / this.halfHeight;\n    normx *= normx;\n    normy *= normy;\n    return normx + normy <= 1;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this ellipse including stroke.\n   * @example\n   * ```ts\n   * // Basic stroke check\n   * const ellipse = new Ellipse(100, 100, 50, 25);\n   * const isOnStroke = ellipse.strokeContains(150, 100, 4); // 4px line width\n   *\n   * // Check with different alignments\n   * const innerStroke = ellipse.strokeContains(150, 100, 4, 1);   // Inside\n   * const centerStroke = ellipse.strokeContains(150, 100, 4, 0.5); // Centered\n   * const outerStroke = ellipse.strokeContains(150, 100, 4, 0);   // Outside\n   * ```\n   * @remarks\n   * - Uses normalized ellipse equations\n   * - Considers stroke alignment\n   * - Returns false if dimensions are 0\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @param strokeWidth - The width of the line to check\n   * @param alignment - The alignment of the stroke (1 = inner, 0.5 = centered, 0 = outer)\n   * @returns Whether the x/y coords are within this ellipse's stroke\n   * @see {@link Ellipse.contains} For checking fill containment\n   * @see {@link Ellipse.getBounds} For getting stroke bounds\n   */\n  strokeContains(x, y, strokeWidth, alignment = 0.5) {\n    const { halfWidth, halfHeight } = this;\n    if (halfWidth <= 0 || halfHeight <= 0) {\n      return false;\n    }\n    const strokeOuterWidth = strokeWidth * (1 - alignment);\n    const strokeInnerWidth = strokeWidth - strokeOuterWidth;\n    const innerHorizontal = halfWidth - strokeInnerWidth;\n    const innerVertical = halfHeight - strokeInnerWidth;\n    const outerHorizontal = halfWidth + strokeOuterWidth;\n    const outerVertical = halfHeight + strokeOuterWidth;\n    const normalizedX = x - this.x;\n    const normalizedY = y - this.y;\n    const innerEllipse = normalizedX * normalizedX / (innerHorizontal * innerHorizontal) + normalizedY * normalizedY / (innerVertical * innerVertical);\n    const outerEllipse = normalizedX * normalizedX / (outerHorizontal * outerHorizontal) + normalizedY * normalizedY / (outerVertical * outerVertical);\n    return innerEllipse > 1 && outerEllipse <= 1;\n  }\n  /**\n   * Returns the framing rectangle of the ellipse as a Rectangle object.\n   * @example\n   * ```ts\n   * // Basic bounds calculation\n   * const ellipse = new Ellipse(100, 100, 50, 25);\n   * const bounds = ellipse.getBounds();\n   * // bounds: x=50, y=75, width=100, height=50\n   *\n   * // Reuse existing rectangle\n   * const rect = new Rectangle();\n   * ellipse.getBounds(rect);\n   * ```\n   * @remarks\n   * - Creates Rectangle if none provided\n   * - Top-left is (x-halfWidth, y-halfHeight)\n   * - Width is halfWidth * 2\n   * - Height is halfHeight * 2\n   * @param out - Optional Rectangle object to store the result\n   * @returns The framing rectangle\n   * @see {@link Rectangle} For rectangle properties\n   * @see {@link Ellipse.contains} For checking if a point is inside\n   */\n  getBounds(out) {\n    out || (out = new Rectangle());\n    out.x = this.x - this.halfWidth;\n    out.y = this.y - this.halfHeight;\n    out.width = this.halfWidth * 2;\n    out.height = this.halfHeight * 2;\n    return out;\n  }\n  /**\n   * Copies another ellipse to this one.\n   * @example\n   * ```ts\n   * // Basic copying\n   * const source = new Ellipse(100, 100, 50, 25);\n   * const target = new Ellipse();\n   * target.copyFrom(source);\n   * ```\n   * @param ellipse - The ellipse to copy from\n   * @returns Returns itself\n   * @see {@link Ellipse.copyTo} For copying to another ellipse\n   * @see {@link Ellipse.clone} For creating new ellipse copy\n   */\n  copyFrom(ellipse) {\n    this.x = ellipse.x;\n    this.y = ellipse.y;\n    this.halfWidth = ellipse.halfWidth;\n    this.halfHeight = ellipse.halfHeight;\n    return this;\n  }\n  /**\n   * Copies this ellipse to another one.\n   * @example\n   * ```ts\n   * // Basic copying\n   * const source = new Ellipse(100, 100, 50, 25);\n   * const target = new Ellipse();\n   * source.copyTo(target);\n   * ```\n   * @param ellipse - The ellipse to copy to\n   * @returns Returns given parameter\n   * @see {@link Ellipse.copyFrom} For copying from another ellipse\n   * @see {@link Ellipse.clone} For creating new ellipse copy\n   */\n  copyTo(ellipse) {\n    ellipse.copyFrom(this);\n    return ellipse;\n  }\n  toString() {\n    return `[pixi.js/math:Ellipse x=${this.x} y=${this.y} halfWidth=${this.halfWidth} halfHeight=${this.halfHeight}]`;\n  }\n}\n\nexport { Ellipse };\n//# sourceMappingURL=Ellipse.mjs.map\n","\"use strict\";\nfunction squaredDistanceToLineSegment(x, y, x1, y1, x2, y2) {\n  const a = x - x1;\n  const b = y - y1;\n  const c = x2 - x1;\n  const d = y2 - y1;\n  const dot = a * c + b * d;\n  const lenSq = c * c + d * d;\n  let param = -1;\n  if (lenSq !== 0) {\n    param = dot / lenSq;\n  }\n  let xx;\n  let yy;\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  } else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  } else {\n    xx = x1 + param * c;\n    yy = y1 + param * d;\n  }\n  const dx = x - xx;\n  const dy = y - yy;\n  return dx * dx + dy * dy;\n}\n\nexport { squaredDistanceToLineSegment };\n//# sourceMappingURL=squaredDistanceToLineSegment.mjs.map\n","import { deprecation } from '../../utils/logging/deprecation.mjs';\nimport { squaredDistanceToLineSegment } from '../misc/squaredDistanceToLineSegment.mjs';\nimport { Rectangle } from './Rectangle.mjs';\n\n\"use strict\";\nlet tempRect;\nlet tempRect2;\nclass Polygon {\n  /**\n   * @param points - This can be an array of Points\n   *  that form the polygon, a flat array of numbers that will be interpreted as [x,y, x,y, ...], or\n   *  the arguments passed can be all the points of the polygon e.g.\n   *  `new Polygon(new Point(), new Point(), ...)`, or the arguments passed can be flat\n   *  x,y values e.g. `new Polygon(x,y, x,y, x,y, ...)` where `x` and `y` are Numbers.\n   */\n  constructor(...points) {\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     * @example\n     * ```ts\n     * // Check shape type\n     * const shape = new Polygon([0, 0, 100, 0, 50, 100]);\n     * console.log(shape.type); // 'polygon'\n     *\n     * // Use in type guards\n     * if (shape.type === 'polygon') {\n     *     // TypeScript knows this is a Polygon\n     *     console.log(shape.points.length);\n     * }\n     * ```\n     * @readonly\n     * @default 'polygon'\n     * @see {@link SHAPE_PRIMITIVE} For all shape types\n     */\n    this.type = \"polygon\";\n    let flat = Array.isArray(points[0]) ? points[0] : points;\n    if (typeof flat[0] !== \"number\") {\n      const p = [];\n      for (let i = 0, il = flat.length; i < il; i++) {\n        p.push(flat[i].x, flat[i].y);\n      }\n      flat = p;\n    }\n    this.points = flat;\n    this.closePath = true;\n  }\n  /**\n   * Determines whether the polygon's points are arranged in a clockwise direction.\n   * Uses the shoelace formula (surveyor's formula) to calculate the signed area.\n   *\n   * A positive area indicates clockwise winding, while negative indicates counter-clockwise.\n   *\n   * The formula sums up the cross products of adjacent vertices:\n   * For each pair of adjacent points (x1,y1) and (x2,y2), we calculate (x1*y2 - x2*y1)\n   * The final sum divided by 2 gives the signed area - positive for clockwise.\n   * @example\n   * ```ts\n   * // Check polygon winding\n   * const polygon = new Polygon([0, 0, 100, 0, 50, 100]);\n   * console.log(polygon.isClockwise()); // Check direction\n   *\n   * // Use in path construction\n   * const hole = new Polygon([25, 25, 75, 25, 75, 75, 25, 75]);\n   * if (hole.isClockwise() === shape.isClockwise()) {\n   *     hole.points.reverse(); // Reverse for proper hole winding\n   * }\n   * ```\n   * @returns `true` if the polygon's points are arranged clockwise, `false` if counter-clockwise\n   */\n  isClockwise() {\n    let area = 0;\n    const points = this.points;\n    const length = points.length;\n    for (let i = 0; i < length; i += 2) {\n      const x1 = points[i];\n      const y1 = points[i + 1];\n      const x2 = points[(i + 2) % length];\n      const y2 = points[(i + 3) % length];\n      area += (x2 - x1) * (y2 + y1);\n    }\n    return area < 0;\n  }\n  /**\n   * Checks if this polygon completely contains another polygon.\n   * Used for detecting holes in shapes, like when parsing SVG paths.\n   * @example\n   * ```ts\n   * // Basic containment check\n   * const outerSquare = new Polygon([0,0, 100,0, 100,100, 0,100]); // A square\n   * const innerSquare = new Polygon([25,25, 75,25, 75,75, 25,75]); // A smaller square inside\n   *\n   * outerSquare.containsPolygon(innerSquare); // Returns true\n   * innerSquare.containsPolygon(outerSquare); // Returns false\n   * ```\n   * @remarks\n   * - Uses bounds check for quick rejection\n   * - Tests all points for containment\n   * @param polygon - The polygon to test for containment\n   * @returns True if this polygon completely contains the other polygon\n   * @see {@link Polygon.contains} For single point testing\n   * @see {@link Polygon.getBounds} For bounds calculation\n   */\n  containsPolygon(polygon) {\n    const thisBounds = this.getBounds(tempRect);\n    const otherBounds = polygon.getBounds(tempRect2);\n    if (!thisBounds.containsRect(otherBounds)) {\n      return false;\n    }\n    const points = polygon.points;\n    for (let i = 0; i < points.length; i += 2) {\n      const x = points[i];\n      const y = points[i + 1];\n      if (!this.contains(x, y)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Creates a clone of this polygon.\n   * @example\n   * ```ts\n   * // Basic cloning\n   * const original = new Polygon([0, 0, 100, 0, 50, 100]);\n   * const copy = original.clone();\n   *\n   * // Clone and modify\n   * const modified = original.clone();\n   * modified.points[0] = 10; // Modify first x coordinate\n   * ```\n   * @returns A copy of the polygon\n   * @see {@link Polygon.copyFrom} For copying into existing polygon\n   * @see {@link Polygon.copyTo} For copying to another polygon\n   */\n  clone() {\n    const points = this.points.slice();\n    const polygon = new Polygon(points);\n    polygon.closePath = this.closePath;\n    return polygon;\n  }\n  /**\n   * Checks whether the x and y coordinates passed to this function are contained within this polygon.\n   * Uses raycasting algorithm for point-in-polygon testing.\n   * @example\n   * ```ts\n   * // Basic containment check\n   * const polygon = new Polygon([0, 0, 100, 0, 50, 100]);\n   * const isInside = polygon.contains(25, 25); // true\n   * ```\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @returns Whether the x/y coordinates are within this polygon\n   * @see {@link Polygon.strokeContains} For checking stroke intersection\n   * @see {@link Polygon.containsPolygon} For polygon-in-polygon testing\n   */\n  contains(x, y) {\n    let inside = false;\n    const length = this.points.length / 2;\n    for (let i = 0, j = length - 1; i < length; j = i++) {\n      const xi = this.points[i * 2];\n      const yi = this.points[i * 2 + 1];\n      const xj = this.points[j * 2];\n      const yj = this.points[j * 2 + 1];\n      const intersect = yi > y !== yj > y && x < (xj - xi) * ((y - yi) / (yj - yi)) + xi;\n      if (intersect) {\n        inside = !inside;\n      }\n    }\n    return inside;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this polygon including the stroke.\n   * @example\n   * ```ts\n   * // Basic stroke check\n   * const polygon = new Polygon([0, 0, 100, 0, 50, 100]);\n   * const isOnStroke = polygon.strokeContains(25, 25, 4); // 4px line width\n   *\n   * // Check with different alignments\n   * const innerStroke = polygon.strokeContains(25, 25, 4, 1);   // Inside\n   * const centerStroke = polygon.strokeContains(25, 25, 4, 0.5); // Centered\n   * const outerStroke = polygon.strokeContains(25, 25, 4, 0);   // Outside\n   * ```\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @param strokeWidth - The width of the line to check\n   * @param alignment - The alignment of the stroke (1 = inner, 0.5 = centered, 0 = outer)\n   * @returns Whether the x/y coordinates are within this polygon's stroke\n   * @see {@link Polygon.contains} For checking fill containment\n   * @see {@link Polygon.getBounds} For getting stroke bounds\n   */\n  strokeContains(x, y, strokeWidth, alignment = 0.5) {\n    const strokeWidthSquared = strokeWidth * strokeWidth;\n    const rightWidthSquared = strokeWidthSquared * (1 - alignment);\n    const leftWidthSquared = strokeWidthSquared - rightWidthSquared;\n    const { points } = this;\n    const iterationLength = points.length - (this.closePath ? 0 : 2);\n    for (let i = 0; i < iterationLength; i += 2) {\n      const x1 = points[i];\n      const y1 = points[i + 1];\n      const x2 = points[(i + 2) % points.length];\n      const y2 = points[(i + 3) % points.length];\n      const distanceSquared = squaredDistanceToLineSegment(x, y, x1, y1, x2, y2);\n      const sign = Math.sign((x2 - x1) * (y - y1) - (y2 - y1) * (x - x1));\n      if (distanceSquared <= (sign < 0 ? leftWidthSquared : rightWidthSquared)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * Returns the framing rectangle of the polygon as a Rectangle object.\n   * @example\n   * ```ts\n   * // Basic bounds calculation\n   * const polygon = new Polygon([0, 0, 100, 0, 50, 100]);\n   * const bounds = polygon.getBounds();\n   * // bounds: x=0, y=0, width=100, height=100\n   *\n   * // Reuse existing rectangle\n   * const rect = new Rectangle();\n   * polygon.getBounds(rect);\n   * ```\n   * @param out - Optional rectangle to store the result\n   * @returns The framing rectangle\n   * @see {@link Rectangle} For rectangle properties\n   * @see {@link Polygon.contains} For checking if a point is inside\n   */\n  getBounds(out) {\n    out || (out = new Rectangle());\n    const points = this.points;\n    let minX = Infinity;\n    let maxX = -Infinity;\n    let minY = Infinity;\n    let maxY = -Infinity;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i];\n      const y = points[i + 1];\n      minX = x < minX ? x : minX;\n      maxX = x > maxX ? x : maxX;\n      minY = y < minY ? y : minY;\n      maxY = y > maxY ? y : maxY;\n    }\n    out.x = minX;\n    out.width = maxX - minX;\n    out.y = minY;\n    out.height = maxY - minY;\n    return out;\n  }\n  /**\n   * Copies another polygon to this one.\n   * @example\n   * ```ts\n   * // Basic copying\n   * const source = new Polygon([0, 0, 100, 0, 50, 100]);\n   * const target = new Polygon();\n   * target.copyFrom(source);\n   * ```\n   * @param polygon - The polygon to copy from\n   * @returns Returns itself\n   * @see {@link Polygon.copyTo} For copying to another polygon\n   * @see {@link Polygon.clone} For creating new polygon copy\n   */\n  copyFrom(polygon) {\n    this.points = polygon.points.slice();\n    this.closePath = polygon.closePath;\n    return this;\n  }\n  /**\n   * Copies this polygon to another one.\n   * @example\n   * ```ts\n   * // Basic copying\n   * const source = new Polygon([0, 0, 100, 0, 50, 100]);\n   * const target = new Polygon();\n   * source.copyTo(target);\n   * ```\n   * @param polygon - The polygon to copy to\n   * @returns Returns given parameter\n   * @see {@link Polygon.copyFrom} For copying from another polygon\n   * @see {@link Polygon.clone} For creating new polygon copy\n   */\n  copyTo(polygon) {\n    polygon.copyFrom(this);\n    return polygon;\n  }\n  toString() {\n    return `[pixi.js/math:PolygoncloseStroke=${this.closePath}points=${this.points.reduce((pointsDesc, currentPoint) => `${pointsDesc}, ${currentPoint}`, \"\")}]`;\n  }\n  /**\n   * Get the last X coordinate of the polygon.\n   * @example\n   * ```ts\n   * // Basic coordinate access\n   * const polygon = new Polygon([0, 0, 100, 200, 300, 400]);\n   * console.log(polygon.lastX); // 300\n   * ```\n   * @readonly\n   * @returns The x-coordinate of the last vertex\n   * @see {@link Polygon.lastY} For last Y coordinate\n   * @see {@link Polygon.points} For raw points array\n   */\n  get lastX() {\n    return this.points[this.points.length - 2];\n  }\n  /**\n   * Get the last Y coordinate of the polygon.\n   * @example\n   * ```ts\n   * // Basic coordinate access\n   * const polygon = new Polygon([0, 0, 100, 200, 300, 400]);\n   * console.log(polygon.lastY); // 400\n   * ```\n   * @readonly\n   * @returns The y-coordinate of the last vertex\n   * @see {@link Polygon.lastX} For last X coordinate\n   * @see {@link Polygon.points} For raw points array\n   */\n  get lastY() {\n    return this.points[this.points.length - 1];\n  }\n  /**\n   * Get the last X coordinate of the polygon.\n   * @readonly\n   * @deprecated since 8.11.0, use {@link Polygon.lastX} instead.\n   */\n  get x() {\n    deprecation(\"8.11.0\", \"Polygon.lastX is deprecated, please use Polygon.lastX instead.\");\n    return this.points[this.points.length - 2];\n  }\n  /**\n   * Get the last Y coordinate of the polygon.\n   * @readonly\n   * @deprecated since 8.11.0, use {@link Polygon.lastY} instead.\n   */\n  get y() {\n    deprecation(\"8.11.0\", \"Polygon.y is deprecated, please use Polygon.lastY instead.\");\n    return this.points[this.points.length - 1];\n  }\n  /**\n   * Get the first X coordinate of the polygon.\n   * @example\n   * ```ts\n   * // Basic coordinate access\n   * const polygon = new Polygon([0, 0, 100, 200, 300, 400]);\n   * console.log(polygon.x); // 0\n   * ```\n   * @readonly\n   * @returns The x-coordinate of the first vertex\n   * @see {@link Polygon.startY} For first Y coordinate\n   * @see {@link Polygon.points} For raw points array\n   */\n  get startX() {\n    return this.points[0];\n  }\n  /**\n   * Get the first Y coordinate of the polygon.\n   * @example\n   * ```ts\n   * // Basic coordinate access\n   * const polygon = new Polygon([0, 0, 100, 200, 300, 400]);\n   * console.log(polygon.y); // 0\n   * ```\n   * @readonly\n   * @returns The y-coordinate of the first vertex\n   * @see {@link Polygon.startX} For first X coordinate\n   * @see {@link Polygon.points} For raw points array\n   */\n  get startY() {\n    return this.points[1];\n  }\n}\n\nexport { Polygon };\n//# sourceMappingURL=Polygon.mjs.map\n","import { Rectangle } from './Rectangle.mjs';\n\n\"use strict\";\nconst isCornerWithinStroke = (pX, pY, cornerX, cornerY, radius, strokeWidthInner, strokeWidthOuter) => {\n  const dx = pX - cornerX;\n  const dy = pY - cornerY;\n  const distance = Math.sqrt(dx * dx + dy * dy);\n  return distance >= radius - strokeWidthInner && distance <= radius + strokeWidthOuter;\n};\nclass RoundedRectangle {\n  /**\n   * @param x - The X coordinate of the upper-left corner of the rounded rectangle\n   * @param y - The Y coordinate of the upper-left corner of the rounded rectangle\n   * @param width - The overall width of this rounded rectangle\n   * @param height - The overall height of this rounded rectangle\n   * @param radius - Controls the radius of the rounded corners\n   */\n  constructor(x = 0, y = 0, width = 0, height = 0, radius = 20) {\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     * @example\n     * ```ts\n     * // Check shape type\n     * const shape = new RoundedRectangle(0, 0, 100, 100, 20);\n     * console.log(shape.type); // 'roundedRectangle'\n     *\n     * // Use in type guards\n     * if (shape.type === 'roundedRectangle') {\n     *     console.log(shape.radius);\n     * }\n     * ```\n     * @readonly\n     * @default 'roundedRectangle'\n     * @see {@link SHAPE_PRIMITIVE} For all shape types\n     */\n    this.type = \"roundedRectangle\";\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.radius = radius;\n  }\n  /**\n   * Returns the framing rectangle of the rounded rectangle as a Rectangle object\n   * @example\n   * ```ts\n   * // Basic bounds calculation\n   * const rect = new RoundedRectangle(100, 100, 200, 150, 20);\n   * const bounds = rect.getBounds();\n   * // bounds: x=100, y=100, width=200, height=150\n   *\n   * // Reuse existing rectangle\n   * const out = new Rectangle();\n   * rect.getBounds(out);\n   * ```\n   * @remarks\n   * - Rectangle matches outer dimensions\n   * - Ignores corner radius\n   * @param out - Optional rectangle to store the result\n   * @returns The framing rectangle\n   * @see {@link Rectangle} For rectangle properties\n   * @see {@link RoundedRectangle.contains} For checking if a point is inside\n   */\n  getBounds(out) {\n    out || (out = new Rectangle());\n    out.x = this.x;\n    out.y = this.y;\n    out.width = this.width;\n    out.height = this.height;\n    return out;\n  }\n  /**\n   * Creates a clone of this Rounded Rectangle.\n   * @example\n   * ```ts\n   * // Basic cloning\n   * const original = new RoundedRectangle(100, 100, 200, 150, 20);\n   * const copy = original.clone();\n   *\n   * // Clone and modify\n   * const modified = original.clone();\n   * modified.radius = 30;\n   * modified.width *= 2;\n   *\n   * // Verify independence\n   * console.log(original.radius);  // 20\n   * console.log(modified.radius);  // 30\n   * ```\n   * @returns A copy of the rounded rectangle\n   * @see {@link RoundedRectangle.copyFrom} For copying into existing rectangle\n   * @see {@link RoundedRectangle.copyTo} For copying to another rectangle\n   */\n  clone() {\n    return new RoundedRectangle(this.x, this.y, this.width, this.height, this.radius);\n  }\n  /**\n   * Copies another rectangle to this one.\n   * @example\n   * ```ts\n   * // Basic copying\n   * const source = new RoundedRectangle(100, 100, 200, 150, 20);\n   * const target = new RoundedRectangle();\n   * target.copyFrom(source);\n   *\n   * // Chain with other operations\n   * const rect = new RoundedRectangle()\n   *     .copyFrom(source)\n   *     .getBounds(rect);\n   * ```\n   * @param rectangle - The rectangle to copy from\n   * @returns Returns itself\n   * @see {@link RoundedRectangle.copyTo} For copying to another rectangle\n   * @see {@link RoundedRectangle.clone} For creating new rectangle copy\n   */\n  copyFrom(rectangle) {\n    this.x = rectangle.x;\n    this.y = rectangle.y;\n    this.width = rectangle.width;\n    this.height = rectangle.height;\n    return this;\n  }\n  /**\n   * Copies this rectangle to another one.\n   * @example\n   * ```ts\n   * // Basic copying\n   * const source = new RoundedRectangle(100, 100, 200, 150, 20);\n   * const target = new RoundedRectangle();\n   * source.copyTo(target);\n   *\n   * // Chain with other operations\n   * const result = source\n   *     .copyTo(new RoundedRectangle())\n   *     .getBounds();\n   * ```\n   * @param rectangle - The rectangle to copy to\n   * @returns Returns given parameter\n   * @see {@link RoundedRectangle.copyFrom} For copying from another rectangle\n   * @see {@link RoundedRectangle.clone} For creating new rectangle copy\n   */\n  copyTo(rectangle) {\n    rectangle.copyFrom(this);\n    return rectangle;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this Rounded Rectangle\n   * @example\n   * ```ts\n   * // Basic containment check\n   * const rect = new RoundedRectangle(100, 100, 200, 150, 20);\n   * const isInside = rect.contains(150, 125); // true\n   * // Check corner radius\n   * const corner = rect.contains(100, 100); // false if within corner curve\n   * ```\n   * @remarks\n   * - Returns false if width/height is 0 or negative\n   * - Handles rounded corners with radius check\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @returns Whether the x/y coordinates are within this Rounded Rectangle\n   * @see {@link RoundedRectangle.strokeContains} For checking stroke intersection\n   * @see {@link RoundedRectangle.getBounds} For getting containing rectangle\n   */\n  contains(x, y) {\n    if (this.width <= 0 || this.height <= 0) {\n      return false;\n    }\n    if (x >= this.x && x <= this.x + this.width) {\n      if (y >= this.y && y <= this.y + this.height) {\n        const radius = Math.max(0, Math.min(this.radius, Math.min(this.width, this.height) / 2));\n        if (y >= this.y + radius && y <= this.y + this.height - radius || x >= this.x + radius && x <= this.x + this.width - radius) {\n          return true;\n        }\n        let dx = x - (this.x + radius);\n        let dy = y - (this.y + radius);\n        const radius2 = radius * radius;\n        if (dx * dx + dy * dy <= radius2) {\n          return true;\n        }\n        dx = x - (this.x + this.width - radius);\n        if (dx * dx + dy * dy <= radius2) {\n          return true;\n        }\n        dy = y - (this.y + this.height - radius);\n        if (dx * dx + dy * dy <= radius2) {\n          return true;\n        }\n        dx = x - (this.x + radius);\n        if (dx * dx + dy * dy <= radius2) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this rectangle including the stroke.\n   * @example\n   * ```ts\n   * // Basic stroke check\n   * const rect = new RoundedRectangle(100, 100, 200, 150, 20);\n   * const isOnStroke = rect.strokeContains(150, 100, 4); // 4px line width\n   *\n   * // Check with different alignments\n   * const innerStroke = rect.strokeContains(150, 100, 4, 1);   // Inside\n   * const centerStroke = rect.strokeContains(150, 100, 4, 0.5); // Centered\n   * const outerStroke = rect.strokeContains(150, 100, 4, 0);   // Outside\n   * ```\n   * @param pX - The X coordinate of the point to test\n   * @param pY - The Y coordinate of the point to test\n   * @param strokeWidth - The width of the line to check\n   * @param alignment - The alignment of the stroke (1 = inner, 0.5 = centered, 0 = outer)\n   * @returns Whether the x/y coordinates are within this rectangle's stroke\n   * @see {@link RoundedRectangle.contains} For checking fill containment\n   * @see {@link RoundedRectangle.getBounds} For getting stroke bounds\n   */\n  strokeContains(pX, pY, strokeWidth, alignment = 0.5) {\n    const { x, y, width, height, radius } = this;\n    const strokeWidthOuter = strokeWidth * (1 - alignment);\n    const strokeWidthInner = strokeWidth - strokeWidthOuter;\n    const innerX = x + radius;\n    const innerY = y + radius;\n    const innerWidth = width - radius * 2;\n    const innerHeight = height - radius * 2;\n    const rightBound = x + width;\n    const bottomBound = y + height;\n    if ((pX >= x - strokeWidthOuter && pX <= x + strokeWidthInner || pX >= rightBound - strokeWidthInner && pX <= rightBound + strokeWidthOuter) && pY >= innerY && pY <= innerY + innerHeight) {\n      return true;\n    }\n    if ((pY >= y - strokeWidthOuter && pY <= y + strokeWidthInner || pY >= bottomBound - strokeWidthInner && pY <= bottomBound + strokeWidthOuter) && pX >= innerX && pX <= innerX + innerWidth) {\n      return true;\n    }\n    return (\n      // Top-left\n      pX < innerX && pY < innerY && isCornerWithinStroke(\n        pX,\n        pY,\n        innerX,\n        innerY,\n        radius,\n        strokeWidthInner,\n        strokeWidthOuter\n      ) || pX > rightBound - radius && pY < innerY && isCornerWithinStroke(\n        pX,\n        pY,\n        rightBound - radius,\n        innerY,\n        radius,\n        strokeWidthInner,\n        strokeWidthOuter\n      ) || pX > rightBound - radius && pY > bottomBound - radius && isCornerWithinStroke(\n        pX,\n        pY,\n        rightBound - radius,\n        bottomBound - radius,\n        radius,\n        strokeWidthInner,\n        strokeWidthOuter\n      ) || pX < innerX && pY > bottomBound - radius && isCornerWithinStroke(\n        pX,\n        pY,\n        innerX,\n        bottomBound - radius,\n        radius,\n        strokeWidthInner,\n        strokeWidthOuter\n      )\n    );\n  }\n  toString() {\n    return `[pixi.js/math:RoundedRectangle x=${this.x} y=${this.y}width=${this.width} height=${this.height} radius=${this.radius}]`;\n  }\n}\n\nexport { RoundedRectangle };\n//# sourceMappingURL=RoundedRectangle.mjs.map\n","import { BindGroup } from '../../renderers/gpu/shader/BindGroup.mjs';\nimport { Texture } from '../../renderers/shared/texture/Texture.mjs';\n\n\"use strict\";\nconst cachedGroups = {};\nfunction getTextureBatchBindGroup(textures, size, maxTextures) {\n  let uid = 2166136261;\n  for (let i = 0; i < size; i++) {\n    uid ^= textures[i].uid;\n    uid = Math.imul(uid, 16777619);\n    uid >>>= 0;\n  }\n  return cachedGroups[uid] || generateTextureBatchBindGroup(textures, size, uid, maxTextures);\n}\nfunction generateTextureBatchBindGroup(textures, size, key, maxTextures) {\n  const bindGroupResources = {};\n  let bindIndex = 0;\n  for (let i = 0; i < maxTextures; i++) {\n    const texture = i < size ? textures[i] : Texture.EMPTY.source;\n    bindGroupResources[bindIndex++] = texture.source;\n    bindGroupResources[bindIndex++] = texture.style;\n  }\n  const bindGroup = new BindGroup(bindGroupResources);\n  cachedGroups[key] = bindGroup;\n  return bindGroup;\n}\n\nexport { getTextureBatchBindGroup };\n//# sourceMappingURL=getTextureBatchBindGroup.mjs.map\n","\"use strict\";\nclass ViewableBuffer {\n  constructor(sizeOrBuffer) {\n    if (typeof sizeOrBuffer === \"number\") {\n      this.rawBinaryData = new ArrayBuffer(sizeOrBuffer);\n    } else if (sizeOrBuffer instanceof Uint8Array) {\n      this.rawBinaryData = sizeOrBuffer.buffer;\n    } else {\n      this.rawBinaryData = sizeOrBuffer;\n    }\n    this.uint32View = new Uint32Array(this.rawBinaryData);\n    this.float32View = new Float32Array(this.rawBinaryData);\n    this.size = this.rawBinaryData.byteLength;\n  }\n  /** View on the raw binary data as a `Int8Array`. */\n  get int8View() {\n    if (!this._int8View) {\n      this._int8View = new Int8Array(this.rawBinaryData);\n    }\n    return this._int8View;\n  }\n  /** View on the raw binary data as a `Uint8Array`. */\n  get uint8View() {\n    if (!this._uint8View) {\n      this._uint8View = new Uint8Array(this.rawBinaryData);\n    }\n    return this._uint8View;\n  }\n  /**  View on the raw binary data as a `Int16Array`. */\n  get int16View() {\n    if (!this._int16View) {\n      this._int16View = new Int16Array(this.rawBinaryData);\n    }\n    return this._int16View;\n  }\n  /** View on the raw binary data as a `Int32Array`. */\n  get int32View() {\n    if (!this._int32View) {\n      this._int32View = new Int32Array(this.rawBinaryData);\n    }\n    return this._int32View;\n  }\n  /** View on the raw binary data as a `Float64Array`. */\n  get float64View() {\n    if (!this._float64Array) {\n      this._float64Array = new Float64Array(this.rawBinaryData);\n    }\n    return this._float64Array;\n  }\n  /** View on the raw binary data as a `BigUint64Array`. */\n  get bigUint64View() {\n    if (!this._bigUint64Array) {\n      this._bigUint64Array = new BigUint64Array(this.rawBinaryData);\n    }\n    return this._bigUint64Array;\n  }\n  /**\n   * Returns the view of the given type.\n   * @param type - One of `int8`, `uint8`, `int16`,\n   *    `uint16`, `int32`, `uint32`, and `float32`.\n   * @returns - typed array of given type\n   */\n  view(type) {\n    return this[`${type}View`];\n  }\n  /** Destroys all buffer references. Do not use after calling this. */\n  destroy() {\n    this.rawBinaryData = null;\n    this._int8View = null;\n    this._uint8View = null;\n    this._int16View = null;\n    this.uint16View = null;\n    this._int32View = null;\n    this.uint32View = null;\n    this.float32View = null;\n  }\n  /**\n   * Returns the size of the given type in bytes.\n   * @param type - One of `int8`, `uint8`, `int16`,\n   *   `uint16`, `int32`, `uint32`, and `float32`.\n   * @returns - size of the type in bytes\n   */\n  static sizeOf(type) {\n    switch (type) {\n      case \"int8\":\n      case \"uint8\":\n        return 1;\n      case \"int16\":\n      case \"uint16\":\n        return 2;\n      case \"int32\":\n      case \"uint32\":\n      case \"float32\":\n        return 4;\n      default:\n        throw new Error(`${type} isn't a valid view type`);\n    }\n  }\n}\n\nexport { ViewableBuffer };\n//# sourceMappingURL=ViewableBuffer.mjs.map\n","\"use strict\";\nfunction fastCopy(sourceBuffer, destinationBuffer) {\n  const lengthDouble = sourceBuffer.byteLength / 8 | 0;\n  const sourceFloat64View = new Float64Array(sourceBuffer, 0, lengthDouble);\n  const destinationFloat64View = new Float64Array(destinationBuffer, 0, lengthDouble);\n  destinationFloat64View.set(sourceFloat64View);\n  const remainingBytes = sourceBuffer.byteLength - lengthDouble * 8;\n  if (remainingBytes > 0) {\n    const sourceUint8View = new Uint8Array(sourceBuffer, lengthDouble * 8, remainingBytes);\n    const destinationUint8View = new Uint8Array(destinationBuffer, lengthDouble * 8, remainingBytes);\n    destinationUint8View.set(sourceUint8View);\n  }\n}\n\nexport { fastCopy };\n//# sourceMappingURL=fastCopy.mjs.map\n","\"use strict\";\nconst BLEND_TO_NPM = {\n  normal: \"normal-npm\",\n  add: \"add-npm\",\n  screen: \"screen-npm\"\n};\nvar STENCIL_MODES = /* @__PURE__ */ ((STENCIL_MODES2) => {\n  STENCIL_MODES2[STENCIL_MODES2[\"DISABLED\"] = 0] = \"DISABLED\";\n  STENCIL_MODES2[STENCIL_MODES2[\"RENDERING_MASK_ADD\"] = 1] = \"RENDERING_MASK_ADD\";\n  STENCIL_MODES2[STENCIL_MODES2[\"MASK_ACTIVE\"] = 2] = \"MASK_ACTIVE\";\n  STENCIL_MODES2[STENCIL_MODES2[\"INVERSE_MASK_ACTIVE\"] = 3] = \"INVERSE_MASK_ACTIVE\";\n  STENCIL_MODES2[STENCIL_MODES2[\"RENDERING_MASK_REMOVE\"] = 4] = \"RENDERING_MASK_REMOVE\";\n  STENCIL_MODES2[STENCIL_MODES2[\"NONE\"] = 5] = \"NONE\";\n  return STENCIL_MODES2;\n})(STENCIL_MODES || {});\n\nexport { BLEND_TO_NPM, STENCIL_MODES };\n//# sourceMappingURL=const.mjs.map\n","import { BLEND_TO_NPM } from './const.mjs';\n\n\"use strict\";\nfunction getAdjustedBlendModeBlend(blendMode, textureSource) {\n  if (textureSource.alphaMode === \"no-premultiply-alpha\") {\n    return BLEND_TO_NPM[blendMode] || blendMode;\n  }\n  return blendMode;\n}\n\nexport { getAdjustedBlendModeBlend };\n//# sourceMappingURL=getAdjustedBlendModeBlend.mjs.map\n","\"use strict\";\nconst fragTemplate = [\n  \"precision mediump float;\",\n  \"void main(void){\",\n  \"float test = 0.1;\",\n  \"%forloop%\",\n  \"gl_FragColor = vec4(0.0);\",\n  \"}\"\n].join(\"\\n\");\nfunction generateIfTestSrc(maxIfs) {\n  let src = \"\";\n  for (let i = 0; i < maxIfs; ++i) {\n    if (i > 0) {\n      src += \"\\nelse \";\n    }\n    if (i < maxIfs - 1) {\n      src += `if(test == ${i}.0){}`;\n    }\n  }\n  return src;\n}\nfunction checkMaxIfStatementsInShader(maxIfs, gl) {\n  if (maxIfs === 0) {\n    throw new Error(\"Invalid value of `0` passed to `checkMaxIfStatementsInShader`\");\n  }\n  const shader = gl.createShader(gl.FRAGMENT_SHADER);\n  try {\n    while (true) {\n      const fragmentSrc = fragTemplate.replace(/%forloop%/gi, generateIfTestSrc(maxIfs));\n      gl.shaderSource(shader, fragmentSrc);\n      gl.compileShader(shader);\n      if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        maxIfs = maxIfs / 2 | 0;\n      } else {\n        break;\n      }\n    }\n  } finally {\n    gl.deleteShader(shader);\n  }\n  return maxIfs;\n}\n\nexport { checkMaxIfStatementsInShader };\n//# sourceMappingURL=checkMaxIfStatementsInShader.mjs.map\n","import { getTestContext } from '../../../renderers/gl/shader/program/getTestContext.mjs';\nimport { checkMaxIfStatementsInShader } from './checkMaxIfStatementsInShader.mjs';\n\n\"use strict\";\nlet maxTexturesPerBatchCache = null;\nfunction getMaxTexturesPerBatch() {\n  if (maxTexturesPerBatchCache)\n    return maxTexturesPerBatchCache;\n  const gl = getTestContext();\n  maxTexturesPerBatchCache = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  maxTexturesPerBatchCache = checkMaxIfStatementsInShader(\n    maxTexturesPerBatchCache,\n    gl\n  );\n  gl.getExtension(\"WEBGL_lose_context\")?.loseContext();\n  return maxTexturesPerBatchCache;\n}\n\nexport { getMaxTexturesPerBatch };\n//# sourceMappingURL=maxRecommendedTextures.mjs.map\n","\"use strict\";\nclass BatchTextureArray {\n  constructor() {\n    /** Respective locations for textures. */\n    this.ids = /* @__PURE__ */ Object.create(null);\n    this.textures = [];\n    this.count = 0;\n  }\n  /** Clear the textures and their locations. */\n  clear() {\n    for (let i = 0; i < this.count; i++) {\n      const t = this.textures[i];\n      this.textures[i] = null;\n      this.ids[t.uid] = null;\n    }\n    this.count = 0;\n  }\n}\n\nexport { BatchTextureArray };\n//# sourceMappingURL=BatchTextureArray.mjs.map\n","import { uid } from '../../../utils/data/uid.mjs';\nimport { ViewableBuffer } from '../../../utils/data/ViewableBuffer.mjs';\nimport { deprecation } from '../../../utils/logging/deprecation.mjs';\nimport { GlobalResourceRegistry } from '../../../utils/pool/GlobalResourceRegistry.mjs';\nimport { fastCopy } from '../../renderers/shared/buffer/utils/fastCopy.mjs';\nimport { getAdjustedBlendModeBlend } from '../../renderers/shared/state/getAdjustedBlendModeBlend.mjs';\nimport { getMaxTexturesPerBatch } from '../gl/utils/maxRecommendedTextures.mjs';\nimport { BatchTextureArray } from './BatchTextureArray.mjs';\n\n\"use strict\";\nclass Batch {\n  constructor() {\n    this.renderPipeId = \"batch\";\n    this.action = \"startBatch\";\n    // TODO - eventually this could be useful for flagging batches as dirty and then only rebuilding those ones\n    // public elementStart = 0;\n    // public elementSize = 0;\n    // for drawing..\n    this.start = 0;\n    this.size = 0;\n    this.textures = new BatchTextureArray();\n    this.blendMode = \"normal\";\n    this.topology = \"triangle-strip\";\n    this.canBundle = true;\n  }\n  destroy() {\n    this.textures = null;\n    this.gpuBindGroup = null;\n    this.bindGroup = null;\n    this.batcher = null;\n  }\n}\nconst batchPool = [];\nlet batchPoolIndex = 0;\nGlobalResourceRegistry.register({\n  clear: () => {\n    if (batchPool.length > 0) {\n      for (const item of batchPool) {\n        if (item)\n          item.destroy();\n      }\n    }\n    batchPool.length = 0;\n    batchPoolIndex = 0;\n  }\n});\nfunction getBatchFromPool() {\n  return batchPoolIndex > 0 ? batchPool[--batchPoolIndex] : new Batch();\n}\nfunction returnBatchToPool(batch) {\n  batchPool[batchPoolIndex++] = batch;\n}\nlet BATCH_TICK = 0;\nconst _Batcher = class _Batcher {\n  constructor(options) {\n    /** unique id for this batcher */\n    this.uid = uid(\"batcher\");\n    /** Indicates whether the batch data has been modified and needs updating. */\n    this.dirty = true;\n    /** The current index of the batch being processed. */\n    this.batchIndex = 0;\n    /** An array of all batches created during the current rendering process. */\n    this.batches = [];\n    this._elements = [];\n    options = { ..._Batcher.defaultOptions, ...options };\n    if (!options.maxTextures) {\n      deprecation(\"v8.8.0\", \"maxTextures is a required option for Batcher now, please pass it in the options\");\n      options.maxTextures = getMaxTexturesPerBatch();\n    }\n    const { maxTextures, attributesInitialSize, indicesInitialSize } = options;\n    this.attributeBuffer = new ViewableBuffer(attributesInitialSize * 4);\n    this.indexBuffer = new Uint16Array(indicesInitialSize);\n    this.maxTextures = maxTextures;\n  }\n  begin() {\n    this.elementSize = 0;\n    this.elementStart = 0;\n    this.indexSize = 0;\n    this.attributeSize = 0;\n    for (let i = 0; i < this.batchIndex; i++) {\n      returnBatchToPool(this.batches[i]);\n    }\n    this.batchIndex = 0;\n    this._batchIndexStart = 0;\n    this._batchIndexSize = 0;\n    this.dirty = true;\n  }\n  add(batchableObject) {\n    this._elements[this.elementSize++] = batchableObject;\n    batchableObject._indexStart = this.indexSize;\n    batchableObject._attributeStart = this.attributeSize;\n    batchableObject._batcher = this;\n    this.indexSize += batchableObject.indexSize;\n    this.attributeSize += batchableObject.attributeSize * this.vertexSize;\n  }\n  checkAndUpdateTexture(batchableObject, texture) {\n    const textureId = batchableObject._batch.textures.ids[texture._source.uid];\n    if (!textureId && textureId !== 0)\n      return false;\n    batchableObject._textureId = textureId;\n    batchableObject.texture = texture;\n    return true;\n  }\n  updateElement(batchableObject) {\n    this.dirty = true;\n    const attributeBuffer = this.attributeBuffer;\n    if (batchableObject.packAsQuad) {\n      this.packQuadAttributes(\n        batchableObject,\n        attributeBuffer.float32View,\n        attributeBuffer.uint32View,\n        batchableObject._attributeStart,\n        batchableObject._textureId\n      );\n    } else {\n      this.packAttributes(\n        batchableObject,\n        attributeBuffer.float32View,\n        attributeBuffer.uint32View,\n        batchableObject._attributeStart,\n        batchableObject._textureId\n      );\n    }\n  }\n  /**\n   * breaks the batcher. This happens when a batch gets too big,\n   * or we need to switch to a different type of rendering (a filter for example)\n   * @param instructionSet\n   */\n  break(instructionSet) {\n    const elements = this._elements;\n    if (!elements[this.elementStart])\n      return;\n    let batch = getBatchFromPool();\n    let textureBatch = batch.textures;\n    textureBatch.clear();\n    const firstElement = elements[this.elementStart];\n    let blendMode = getAdjustedBlendModeBlend(firstElement.blendMode, firstElement.texture._source);\n    let topology = firstElement.topology;\n    if (this.attributeSize * 4 > this.attributeBuffer.size) {\n      this._resizeAttributeBuffer(this.attributeSize * 4);\n    }\n    if (this.indexSize > this.indexBuffer.length) {\n      this._resizeIndexBuffer(this.indexSize);\n    }\n    const f32 = this.attributeBuffer.float32View;\n    const u32 = this.attributeBuffer.uint32View;\n    const indexBuffer = this.indexBuffer;\n    let size = this._batchIndexSize;\n    let start = this._batchIndexStart;\n    let action = \"startBatch\";\n    const maxTextures = this.maxTextures;\n    for (let i = this.elementStart; i < this.elementSize; ++i) {\n      const element = elements[i];\n      elements[i] = null;\n      const texture = element.texture;\n      const source = texture._source;\n      const adjustedBlendMode = getAdjustedBlendModeBlend(element.blendMode, source);\n      const breakRequired = blendMode !== adjustedBlendMode || topology !== element.topology;\n      if (source._batchTick === BATCH_TICK && !breakRequired) {\n        element._textureId = source._textureBindLocation;\n        size += element.indexSize;\n        if (element.packAsQuad) {\n          this.packQuadAttributes(\n            element,\n            f32,\n            u32,\n            element._attributeStart,\n            element._textureId\n          );\n          this.packQuadIndex(\n            indexBuffer,\n            element._indexStart,\n            element._attributeStart / this.vertexSize\n          );\n        } else {\n          this.packAttributes(\n            element,\n            f32,\n            u32,\n            element._attributeStart,\n            element._textureId\n          );\n          this.packIndex(\n            element,\n            indexBuffer,\n            element._indexStart,\n            element._attributeStart / this.vertexSize\n          );\n        }\n        element._batch = batch;\n        continue;\n      }\n      source._batchTick = BATCH_TICK;\n      if (textureBatch.count >= maxTextures || breakRequired) {\n        this._finishBatch(\n          batch,\n          start,\n          size - start,\n          textureBatch,\n          blendMode,\n          topology,\n          instructionSet,\n          action\n        );\n        action = \"renderBatch\";\n        start = size;\n        blendMode = adjustedBlendMode;\n        topology = element.topology;\n        batch = getBatchFromPool();\n        textureBatch = batch.textures;\n        textureBatch.clear();\n        ++BATCH_TICK;\n      }\n      element._textureId = source._textureBindLocation = textureBatch.count;\n      textureBatch.ids[source.uid] = textureBatch.count;\n      textureBatch.textures[textureBatch.count++] = source;\n      element._batch = batch;\n      size += element.indexSize;\n      if (element.packAsQuad) {\n        this.packQuadAttributes(\n          element,\n          f32,\n          u32,\n          element._attributeStart,\n          element._textureId\n        );\n        this.packQuadIndex(\n          indexBuffer,\n          element._indexStart,\n          element._attributeStart / this.vertexSize\n        );\n      } else {\n        this.packAttributes(\n          element,\n          f32,\n          u32,\n          element._attributeStart,\n          element._textureId\n        );\n        this.packIndex(\n          element,\n          indexBuffer,\n          element._indexStart,\n          element._attributeStart / this.vertexSize\n        );\n      }\n    }\n    if (textureBatch.count > 0) {\n      this._finishBatch(\n        batch,\n        start,\n        size - start,\n        textureBatch,\n        blendMode,\n        topology,\n        instructionSet,\n        action\n      );\n      start = size;\n      ++BATCH_TICK;\n    }\n    this.elementStart = this.elementSize;\n    this._batchIndexStart = start;\n    this._batchIndexSize = size;\n  }\n  _finishBatch(batch, indexStart, indexSize, textureBatch, blendMode, topology, instructionSet, action) {\n    batch.gpuBindGroup = null;\n    batch.bindGroup = null;\n    batch.action = action;\n    batch.batcher = this;\n    batch.textures = textureBatch;\n    batch.blendMode = blendMode;\n    batch.topology = topology;\n    batch.start = indexStart;\n    batch.size = indexSize;\n    ++BATCH_TICK;\n    this.batches[this.batchIndex++] = batch;\n    instructionSet.add(batch);\n  }\n  finish(instructionSet) {\n    this.break(instructionSet);\n  }\n  /**\n   * Resizes the attribute buffer to the given size (1 = 1 float32)\n   * @param size - the size in vertices to ensure (not bytes!)\n   */\n  ensureAttributeBuffer(size) {\n    if (size * 4 <= this.attributeBuffer.size)\n      return;\n    this._resizeAttributeBuffer(size * 4);\n  }\n  /**\n   * Resizes the index buffer to the given size (1 = 1 float32)\n   * @param size - the size in vertices to ensure (not bytes!)\n   */\n  ensureIndexBuffer(size) {\n    if (size <= this.indexBuffer.length)\n      return;\n    this._resizeIndexBuffer(size);\n  }\n  _resizeAttributeBuffer(size) {\n    const newSize = Math.max(size, this.attributeBuffer.size * 2);\n    const newArrayBuffer = new ViewableBuffer(newSize);\n    fastCopy(this.attributeBuffer.rawBinaryData, newArrayBuffer.rawBinaryData);\n    this.attributeBuffer = newArrayBuffer;\n  }\n  _resizeIndexBuffer(size) {\n    const indexBuffer = this.indexBuffer;\n    let newSize = Math.max(size, indexBuffer.length * 1.5);\n    newSize += newSize % 2;\n    const newIndexBuffer = newSize > 65535 ? new Uint32Array(newSize) : new Uint16Array(newSize);\n    if (newIndexBuffer.BYTES_PER_ELEMENT !== indexBuffer.BYTES_PER_ELEMENT) {\n      for (let i = 0; i < indexBuffer.length; i++) {\n        newIndexBuffer[i] = indexBuffer[i];\n      }\n    } else {\n      fastCopy(indexBuffer.buffer, newIndexBuffer.buffer);\n    }\n    this.indexBuffer = newIndexBuffer;\n  }\n  packQuadIndex(indexBuffer, index, indicesOffset) {\n    indexBuffer[index] = indicesOffset + 0;\n    indexBuffer[index + 1] = indicesOffset + 1;\n    indexBuffer[index + 2] = indicesOffset + 2;\n    indexBuffer[index + 3] = indicesOffset + 0;\n    indexBuffer[index + 4] = indicesOffset + 2;\n    indexBuffer[index + 5] = indicesOffset + 3;\n  }\n  packIndex(element, indexBuffer, index, indicesOffset) {\n    const indices = element.indices;\n    const size = element.indexSize;\n    const indexOffset = element.indexOffset;\n    const attributeOffset = element.attributeOffset;\n    for (let i = 0; i < size; i++) {\n      indexBuffer[index++] = indicesOffset + indices[i + indexOffset] - attributeOffset;\n    }\n  }\n  destroy() {\n    if (this.batches === null)\n      return;\n    for (let i = 0; i < this.batches.length; i++) {\n      returnBatchToPool(this.batches[i]);\n    }\n    this.batches = null;\n    for (let i = 0; i < this._elements.length; i++) {\n      if (this._elements[i])\n        this._elements[i]._batch = null;\n    }\n    this._elements = null;\n    this.indexBuffer = null;\n    this.attributeBuffer.destroy();\n    this.attributeBuffer = null;\n  }\n};\n_Batcher.defaultOptions = {\n  maxTextures: null,\n  attributesInitialSize: 4,\n  indicesInitialSize: 6\n};\nlet Batcher = _Batcher;\n\nexport { Batch, Batcher };\n//# sourceMappingURL=Batcher.mjs.map\n","\"use strict\";\nvar BufferUsage = /* @__PURE__ */ ((BufferUsage2) => {\n  BufferUsage2[BufferUsage2[\"MAP_READ\"] = 1] = \"MAP_READ\";\n  BufferUsage2[BufferUsage2[\"MAP_WRITE\"] = 2] = \"MAP_WRITE\";\n  BufferUsage2[BufferUsage2[\"COPY_SRC\"] = 4] = \"COPY_SRC\";\n  BufferUsage2[BufferUsage2[\"COPY_DST\"] = 8] = \"COPY_DST\";\n  BufferUsage2[BufferUsage2[\"INDEX\"] = 16] = \"INDEX\";\n  BufferUsage2[BufferUsage2[\"VERTEX\"] = 32] = \"VERTEX\";\n  BufferUsage2[BufferUsage2[\"UNIFORM\"] = 64] = \"UNIFORM\";\n  BufferUsage2[BufferUsage2[\"STORAGE\"] = 128] = \"STORAGE\";\n  BufferUsage2[BufferUsage2[\"INDIRECT\"] = 256] = \"INDIRECT\";\n  BufferUsage2[BufferUsage2[\"QUERY_RESOLVE\"] = 512] = \"QUERY_RESOLVE\";\n  BufferUsage2[BufferUsage2[\"STATIC\"] = 1024] = \"STATIC\";\n  return BufferUsage2;\n})(BufferUsage || {});\n\nexport { BufferUsage };\n//# sourceMappingURL=const.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { uid } from '../../../../utils/data/uid.mjs';\nimport { BufferUsage } from './const.mjs';\n\n\"use strict\";\nclass Buffer extends EventEmitter {\n  /**\n   * Creates a new Buffer with the given options\n   * @param options - the options for the buffer\n   */\n  constructor(options) {\n    let { data, size } = options;\n    const { usage, label, shrinkToFit } = options;\n    super();\n    /**\n     * emits when the underlying buffer has changed shape (i.e. resized)\n     * letting the renderer know that it needs to discard the old buffer on the GPU and create a new one\n     * @event change\n     */\n    /**\n     * emits when the underlying buffer data has been updated. letting the renderer know\n     * that it needs to update the buffer on the GPU\n     * @event update\n     */\n    /**\n     * emits when the buffer is destroyed. letting the renderer know that it needs to destroy the buffer on the GPU\n     * @event destroy\n     */\n    /** a unique id for this uniform group used through the renderer */\n    this.uid = uid(\"buffer\");\n    /**\n     * a resource type, used to identify how to handle it when its in a bind group / shader resource\n     * @internal\n     */\n    this._resourceType = \"buffer\";\n    /**\n     * the resource id used internally by the renderer to build bind group keys\n     * @internal\n     */\n    this._resourceId = uid(\"resource\");\n    /**\n     * used internally to know if a uniform group was used in the last render pass\n     * @internal\n     */\n    this._touched = 0;\n    /** @internal */\n    this._updateID = 1;\n    this._dataInt32 = null;\n    /**\n     * should the GPU buffer be shrunk when the data becomes smaller?\n     * changing this will cause the buffer to be destroyed and a new one created on the GPU\n     * this can be expensive, especially if the buffer is already big enough!\n     * setting this to false will prevent the buffer from being shrunk. This will yield better performance\n     * if you are constantly setting data that is changing size often.\n     * @default true\n     */\n    this.shrinkToFit = true;\n    /**\n     * Has the buffer been destroyed?\n     * @readonly\n     */\n    this.destroyed = false;\n    if (data instanceof Array) {\n      data = new Float32Array(data);\n    }\n    this._data = data;\n    size ?? (size = data?.byteLength);\n    const mappedAtCreation = !!data;\n    this.descriptor = {\n      size,\n      usage,\n      mappedAtCreation,\n      label\n    };\n    this.shrinkToFit = shrinkToFit ?? true;\n  }\n  /** the data in the buffer */\n  get data() {\n    return this._data;\n  }\n  set data(value) {\n    this.setDataWithSize(value, value.length, true);\n  }\n  get dataInt32() {\n    if (!this._dataInt32) {\n      this._dataInt32 = new Int32Array(this.data.buffer);\n    }\n    return this._dataInt32;\n  }\n  /** whether the buffer is static or not */\n  get static() {\n    return !!(this.descriptor.usage & BufferUsage.STATIC);\n  }\n  set static(value) {\n    if (value) {\n      this.descriptor.usage |= BufferUsage.STATIC;\n    } else {\n      this.descriptor.usage &= ~BufferUsage.STATIC;\n    }\n  }\n  /**\n   * Sets the data in the buffer to the given value. This will immediately update the buffer on the GPU.\n   * If you only want to update a subset of the buffer, you can pass in the size of the data.\n   * @param value - the data to set\n   * @param size - the size of the data in bytes\n   * @param syncGPU - should the buffer be updated on the GPU immediately?\n   */\n  setDataWithSize(value, size, syncGPU) {\n    this._updateID++;\n    this._updateSize = size * value.BYTES_PER_ELEMENT;\n    if (this._data === value) {\n      if (syncGPU)\n        this.emit(\"update\", this);\n      return;\n    }\n    const oldData = this._data;\n    this._data = value;\n    this._dataInt32 = null;\n    if (!oldData || oldData.length !== value.length) {\n      if (!this.shrinkToFit && oldData && value.byteLength < oldData.byteLength) {\n        if (syncGPU)\n          this.emit(\"update\", this);\n      } else {\n        this.descriptor.size = value.byteLength;\n        this._resourceId = uid(\"resource\");\n        this.emit(\"change\", this);\n      }\n      return;\n    }\n    if (syncGPU)\n      this.emit(\"update\", this);\n  }\n  /**\n   * updates the buffer on the GPU to reflect the data in the buffer.\n   * By default it will update the entire buffer. If you only want to update a subset of the buffer,\n   * you can pass in the size of the buffer to update.\n   * @param sizeInBytes - the new size of the buffer in bytes\n   */\n  update(sizeInBytes) {\n    this._updateSize = sizeInBytes ?? this._updateSize;\n    this._updateID++;\n    this.emit(\"update\", this);\n  }\n  /** Destroys the buffer */\n  destroy() {\n    this.destroyed = true;\n    this.emit(\"destroy\", this);\n    this.emit(\"change\", this);\n    this._data = null;\n    this.descriptor = null;\n    this.removeAllListeners();\n  }\n}\n\nexport { Buffer };\n//# sourceMappingURL=Buffer.mjs.map\n","import { Buffer } from '../../buffer/Buffer.mjs';\nimport { BufferUsage } from '../../buffer/const.mjs';\n\n\"use strict\";\nfunction ensureIsBuffer(buffer, index) {\n  if (!(buffer instanceof Buffer)) {\n    let usage = index ? BufferUsage.INDEX : BufferUsage.VERTEX;\n    if (buffer instanceof Array) {\n      if (index) {\n        buffer = new Uint32Array(buffer);\n        usage = BufferUsage.INDEX | BufferUsage.COPY_DST;\n      } else {\n        buffer = new Float32Array(buffer);\n        usage = BufferUsage.VERTEX | BufferUsage.COPY_DST;\n      }\n    }\n    buffer = new Buffer({\n      data: buffer,\n      label: index ? \"index-mesh-buffer\" : \"vertex-mesh-buffer\",\n      usage\n    });\n  }\n  return buffer;\n}\n\nexport { ensureIsBuffer };\n//# sourceMappingURL=ensureIsBuffer.mjs.map\n","\"use strict\";\nfunction getGeometryBounds(geometry, attributeId, bounds) {\n  const attribute = geometry.getAttribute(attributeId);\n  if (!attribute) {\n    bounds.minX = 0;\n    bounds.minY = 0;\n    bounds.maxX = 0;\n    bounds.maxY = 0;\n    return bounds;\n  }\n  const data = attribute.buffer.data;\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  const byteSize = data.BYTES_PER_ELEMENT;\n  const offset = (attribute.offset || 0) / byteSize;\n  const stride = (attribute.stride || 2 * 4) / byteSize;\n  for (let i = offset; i < data.length; i += stride) {\n    const x = data[i];\n    const y = data[i + 1];\n    if (x > maxX)\n      maxX = x;\n    if (y > maxY)\n      maxY = y;\n    if (x < minX)\n      minX = x;\n    if (y < minY)\n      minY = y;\n  }\n  bounds.minX = minX;\n  bounds.minY = minY;\n  bounds.maxX = maxX;\n  bounds.maxY = maxY;\n  return bounds;\n}\n\nexport { getGeometryBounds };\n//# sourceMappingURL=getGeometryBounds.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { Bounds } from '../../../../scene/container/bounds/Bounds.mjs';\nimport { uid } from '../../../../utils/data/uid.mjs';\nimport { Buffer } from '../buffer/Buffer.mjs';\nimport { ensureIsBuffer } from './utils/ensureIsBuffer.mjs';\nimport { getGeometryBounds } from './utils/getGeometryBounds.mjs';\n\n\"use strict\";\nfunction ensureIsAttribute(attribute) {\n  if (attribute instanceof Buffer || Array.isArray(attribute) || attribute.BYTES_PER_ELEMENT) {\n    attribute = {\n      buffer: attribute\n    };\n  }\n  attribute.buffer = ensureIsBuffer(attribute.buffer, false);\n  return attribute;\n}\nclass Geometry extends EventEmitter {\n  /**\n   * Create a new instance of a geometry\n   * @param options - The options for the geometry.\n   */\n  constructor(options = {}) {\n    super();\n    /** The unique id of the geometry. */\n    this.uid = uid(\"geometry\");\n    /**\n     * the layout key will be generated by WebGPU all geometries that have the same structure\n     * will have the same layout key. This is used to cache the pipeline layout\n     * @internal\n     */\n    this._layoutKey = 0;\n    /** the instance count of the geometry to draw */\n    this.instanceCount = 1;\n    this._bounds = new Bounds();\n    this._boundsDirty = true;\n    const { attributes, indexBuffer, topology } = options;\n    this.buffers = [];\n    this.attributes = {};\n    if (attributes) {\n      for (const i in attributes) {\n        this.addAttribute(i, attributes[i]);\n      }\n    }\n    this.instanceCount = options.instanceCount ?? 1;\n    if (indexBuffer) {\n      this.addIndex(indexBuffer);\n    }\n    this.topology = topology || \"triangle-list\";\n  }\n  onBufferUpdate() {\n    this._boundsDirty = true;\n    this.emit(\"update\", this);\n  }\n  /**\n   * Returns the requested attribute.\n   * @param id - The name of the attribute required\n   * @returns - The attribute requested.\n   */\n  getAttribute(id) {\n    return this.attributes[id];\n  }\n  /**\n   * Returns the index buffer\n   * @returns - The index buffer.\n   */\n  getIndex() {\n    return this.indexBuffer;\n  }\n  /**\n   * Returns the requested buffer.\n   * @param id - The name of the buffer required.\n   * @returns - The buffer requested.\n   */\n  getBuffer(id) {\n    return this.getAttribute(id).buffer;\n  }\n  /**\n   * Used to figure out how many vertices there are in this geometry\n   * @returns the number of vertices in the geometry\n   */\n  getSize() {\n    for (const i in this.attributes) {\n      const attribute = this.attributes[i];\n      const buffer = attribute.buffer;\n      return buffer.data.length / (attribute.stride / 4 || attribute.size);\n    }\n    return 0;\n  }\n  /**\n   * Adds an attribute to the geometry.\n   * @param name - The name of the attribute to add.\n   * @param attributeOption - The attribute option to add.\n   */\n  addAttribute(name, attributeOption) {\n    const attribute = ensureIsAttribute(attributeOption);\n    const bufferIndex = this.buffers.indexOf(attribute.buffer);\n    if (bufferIndex === -1) {\n      this.buffers.push(attribute.buffer);\n      attribute.buffer.on(\"update\", this.onBufferUpdate, this);\n      attribute.buffer.on(\"change\", this.onBufferUpdate, this);\n    }\n    this.attributes[name] = attribute;\n  }\n  /**\n   * Adds an index buffer to the geometry.\n   * @param indexBuffer - The index buffer to add. Can be a Buffer, TypedArray, or an array of numbers.\n   */\n  addIndex(indexBuffer) {\n    this.indexBuffer = ensureIsBuffer(indexBuffer, true);\n    this.buffers.push(this.indexBuffer);\n  }\n  /** Returns the bounds of the geometry. */\n  get bounds() {\n    if (!this._boundsDirty)\n      return this._bounds;\n    this._boundsDirty = false;\n    return getGeometryBounds(this, \"aPosition\", this._bounds);\n  }\n  /**\n   * destroys the geometry.\n   * @param destroyBuffers - destroy the buffers associated with this geometry\n   */\n  destroy(destroyBuffers = false) {\n    this.emit(\"destroy\", this);\n    this.removeAllListeners();\n    if (destroyBuffers) {\n      this.buffers.forEach((buffer) => buffer.destroy());\n    }\n    this.attributes = null;\n    this.buffers = null;\n    this.indexBuffer = null;\n    this._bounds = null;\n  }\n}\n\nexport { Geometry };\n//# sourceMappingURL=Geometry.mjs.map\n","import { Buffer } from '../../renderers/shared/buffer/Buffer.mjs';\nimport { BufferUsage } from '../../renderers/shared/buffer/const.mjs';\nimport { Geometry } from '../../renderers/shared/geometry/Geometry.mjs';\n\n\"use strict\";\nconst placeHolderBufferData = new Float32Array(1);\nconst placeHolderIndexData = new Uint32Array(1);\nclass BatchGeometry extends Geometry {\n  constructor() {\n    const vertexSize = 6;\n    const attributeBuffer = new Buffer({\n      data: placeHolderBufferData,\n      label: \"attribute-batch-buffer\",\n      usage: BufferUsage.VERTEX | BufferUsage.COPY_DST,\n      shrinkToFit: false\n    });\n    const indexBuffer = new Buffer({\n      data: placeHolderIndexData,\n      label: \"index-batch-buffer\",\n      usage: BufferUsage.INDEX | BufferUsage.COPY_DST,\n      // | BufferUsage.STATIC,\n      shrinkToFit: false\n    });\n    const stride = vertexSize * 4;\n    super({\n      attributes: {\n        aPosition: {\n          buffer: attributeBuffer,\n          format: \"float32x2\",\n          stride,\n          offset: 0\n        },\n        aUV: {\n          buffer: attributeBuffer,\n          format: \"float32x2\",\n          stride,\n          offset: 2 * 4\n        },\n        aColor: {\n          buffer: attributeBuffer,\n          format: \"unorm8x4\",\n          stride,\n          offset: 4 * 4\n        },\n        aTextureIdAndRound: {\n          buffer: attributeBuffer,\n          format: \"uint16x2\",\n          stride,\n          offset: 5 * 4\n        }\n      },\n      indexBuffer\n    });\n  }\n}\n\nexport { BatchGeometry };\n//# sourceMappingURL=BatchGeometry.mjs.map\n","import { warn } from '../../../../utils/logging/warn.mjs';\n\n\"use strict\";\nfunction addBits(srcParts, parts, name) {\n  if (srcParts) {\n    for (const i in srcParts) {\n      const id = i.toLocaleLowerCase();\n      const part = parts[id];\n      if (part) {\n        let sanitisedPart = srcParts[i];\n        if (i === \"header\") {\n          sanitisedPart = sanitisedPart.replace(/@in\\s+[^;]+;\\s*/g, \"\").replace(/@out\\s+[^;]+;\\s*/g, \"\");\n        }\n        if (name) {\n          part.push(`//----${name}----//`);\n        }\n        part.push(sanitisedPart);\n      } else {\n        warn(`${i} placement hook does not exist in shader`);\n      }\n    }\n  }\n}\n\nexport { addBits };\n//# sourceMappingURL=addBits.mjs.map\n","\"use strict\";\nconst findHooksRx = /\\{\\{(.*?)\\}\\}/g;\nfunction compileHooks(programSrc) {\n  const parts = {};\n  const partMatches = programSrc.match(findHooksRx)?.map((hook) => hook.replace(/[{()}]/g, \"\")) ?? [];\n  partMatches.forEach((hook) => {\n    parts[hook] = [];\n  });\n  return parts;\n}\n\nexport { compileHooks };\n//# sourceMappingURL=compileHooks.mjs.map\n","\"use strict\";\nfunction extractInputs(fragmentSource, out) {\n  let match;\n  const regex = /@in\\s+([^;]+);/g;\n  while ((match = regex.exec(fragmentSource)) !== null) {\n    out.push(match[1]);\n  }\n}\nfunction compileInputs(fragments, template, sort = false) {\n  const results = [];\n  extractInputs(template, results);\n  fragments.forEach((fragment) => {\n    if (fragment.header) {\n      extractInputs(fragment.header, results);\n    }\n  });\n  const mainInput = results;\n  if (sort) {\n    mainInput.sort();\n  }\n  const finalString = mainInput.map((inValue, i) => `       @location(${i}) ${inValue},`).join(\"\\n\");\n  let cleanedString = template.replace(/@in\\s+[^;]+;\\s*/g, \"\");\n  cleanedString = cleanedString.replace(\"{{in}}\", `\n${finalString}\n`);\n  return cleanedString;\n}\n\nexport { compileInputs };\n//# sourceMappingURL=compileInputs.mjs.map\n","\"use strict\";\nfunction extractOutputs(fragmentSource, out) {\n  let match;\n  const regex = /@out\\s+([^;]+);/g;\n  while ((match = regex.exec(fragmentSource)) !== null) {\n    out.push(match[1]);\n  }\n}\nfunction extractVariableName(value) {\n  const regex = /\\b(\\w+)\\s*:/g;\n  const match = regex.exec(value);\n  return match ? match[1] : \"\";\n}\nfunction stripVariable(value) {\n  const regex = /@.*?\\s+/g;\n  return value.replace(regex, \"\");\n}\nfunction compileOutputs(fragments, template) {\n  const results = [];\n  extractOutputs(template, results);\n  fragments.forEach((fragment) => {\n    if (fragment.header) {\n      extractOutputs(fragment.header, results);\n    }\n  });\n  let index = 0;\n  const mainStruct = results.sort().map((inValue) => {\n    if (inValue.indexOf(\"builtin\") > -1) {\n      return inValue;\n    }\n    return `@location(${index++}) ${inValue}`;\n  }).join(\",\\n\");\n  const mainStart = results.sort().map((inValue) => `       var ${stripVariable(inValue)};`).join(\"\\n\");\n  const mainEnd = `return VSOutput(\n            ${results.sort().map((inValue) => ` ${extractVariableName(inValue)}`).join(\",\\n\")});`;\n  let compiledCode = template.replace(/@out\\s+[^;]+;\\s*/g, \"\");\n  compiledCode = compiledCode.replace(\"{{struct}}\", `\n${mainStruct}\n`);\n  compiledCode = compiledCode.replace(\"{{start}}\", `\n${mainStart}\n`);\n  compiledCode = compiledCode.replace(\"{{return}}\", `\n${mainEnd}\n`);\n  return compiledCode;\n}\n\nexport { compileOutputs };\n//# sourceMappingURL=compileOutputs.mjs.map\n","\"use strict\";\nfunction injectBits(templateSrc, fragmentParts) {\n  let out = templateSrc;\n  for (const i in fragmentParts) {\n    const parts = fragmentParts[i];\n    const toInject = parts.join(\"\\n\");\n    if (toInject.length) {\n      out = out.replace(`{{${i}}}`, `//-----${i} START-----//\n${parts.join(\"\\n\")}\n//----${i} FINISH----//`);\n    } else {\n      out = out.replace(`{{${i}}}`, \"\");\n    }\n  }\n  return out;\n}\n\nexport { injectBits };\n//# sourceMappingURL=injectBits.mjs.map\n","import { addBits } from './utils/addBits.mjs';\nimport { compileHooks } from './utils/compileHooks.mjs';\nimport { compileInputs } from './utils/compileInputs.mjs';\nimport { compileOutputs } from './utils/compileOutputs.mjs';\nimport { injectBits } from './utils/injectBits.mjs';\n\n\"use strict\";\nconst cacheMap = /* @__PURE__ */ Object.create(null);\nconst bitCacheMap = /* @__PURE__ */ new Map();\nlet CACHE_UID = 0;\nfunction compileHighShader({\n  template,\n  bits\n}) {\n  const cacheId = generateCacheId(template, bits);\n  if (cacheMap[cacheId])\n    return cacheMap[cacheId];\n  const { vertex, fragment } = compileInputsAndOutputs(template, bits);\n  cacheMap[cacheId] = compileBits(vertex, fragment, bits);\n  return cacheMap[cacheId];\n}\nfunction compileHighShaderGl({\n  template,\n  bits\n}) {\n  const cacheId = generateCacheId(template, bits);\n  if (cacheMap[cacheId])\n    return cacheMap[cacheId];\n  cacheMap[cacheId] = compileBits(template.vertex, template.fragment, bits);\n  return cacheMap[cacheId];\n}\nfunction compileInputsAndOutputs(template, bits) {\n  const vertexFragments = bits.map((shaderBit) => shaderBit.vertex).filter((v) => !!v);\n  const fragmentFragments = bits.map((shaderBit) => shaderBit.fragment).filter((v) => !!v);\n  let compiledVertex = compileInputs(vertexFragments, template.vertex, true);\n  compiledVertex = compileOutputs(vertexFragments, compiledVertex);\n  const compiledFragment = compileInputs(fragmentFragments, template.fragment, true);\n  return {\n    vertex: compiledVertex,\n    fragment: compiledFragment\n  };\n}\nfunction generateCacheId(template, bits) {\n  return bits.map((highFragment) => {\n    if (!bitCacheMap.has(highFragment)) {\n      bitCacheMap.set(highFragment, CACHE_UID++);\n    }\n    return bitCacheMap.get(highFragment);\n  }).sort((a, b) => a - b).join(\"-\") + template.vertex + template.fragment;\n}\nfunction compileBits(vertex, fragment, bits) {\n  const vertexParts = compileHooks(vertex);\n  const fragmentParts = compileHooks(fragment);\n  bits.forEach((shaderBit) => {\n    addBits(shaderBit.vertex, vertexParts, shaderBit.name);\n    addBits(shaderBit.fragment, fragmentParts, shaderBit.name);\n  });\n  return {\n    vertex: injectBits(vertex, vertexParts),\n    fragment: injectBits(fragment, fragmentParts)\n  };\n}\n\nexport { compileHighShader, compileHighShaderGl };\n//# sourceMappingURL=compileHighShader.mjs.map\n","\"use strict\";\nconst vertexGPUTemplate = (\n  /* wgsl */\n  `\n    @in aPosition: vec2<f32>;\n    @in aUV: vec2<f32>;\n\n    @out @builtin(position) vPosition: vec4<f32>;\n    @out vUV : vec2<f32>;\n    @out vColor : vec4<f32>;\n\n    {{header}}\n\n    struct VSOutput {\n        {{struct}}\n    };\n\n    @vertex\n    fn main( {{in}} ) -> VSOutput {\n\n        var worldTransformMatrix = globalUniforms.uWorldTransformMatrix;\n        var modelMatrix = mat3x3<f32>(\n            1.0, 0.0, 0.0,\n            0.0, 1.0, 0.0,\n            0.0, 0.0, 1.0\n          );\n        var position = aPosition;\n        var uv = aUV;\n\n        {{start}}\n\n        vColor = vec4<f32>(1., 1., 1., 1.);\n\n        {{main}}\n\n        vUV = uv;\n\n        var modelViewProjectionMatrix = globalUniforms.uProjectionMatrix * worldTransformMatrix * modelMatrix;\n\n        vPosition =  vec4<f32>((modelViewProjectionMatrix *  vec3<f32>(position, 1.0)).xy, 0.0, 1.0);\n\n        vColor *= globalUniforms.uWorldColorAlpha;\n\n        {{end}}\n\n        {{return}}\n    };\n`\n);\nconst fragmentGPUTemplate = (\n  /* wgsl */\n  `\n    @in vUV : vec2<f32>;\n    @in vColor : vec4<f32>;\n\n    {{header}}\n\n    @fragment\n    fn main(\n        {{in}}\n      ) -> @location(0) vec4<f32> {\n\n        {{start}}\n\n        var outColor:vec4<f32>;\n\n        {{main}}\n\n        var finalColor:vec4<f32> = outColor * vColor;\n\n        {{end}}\n\n        return finalColor;\n      };\n`\n);\nconst vertexGlTemplate = (\n  /* glsl */\n  `\n    in vec2 aPosition;\n    in vec2 aUV;\n\n    out vec4 vColor;\n    out vec2 vUV;\n\n    {{header}}\n\n    void main(void){\n\n        mat3 worldTransformMatrix = uWorldTransformMatrix;\n        mat3 modelMatrix = mat3(\n            1.0, 0.0, 0.0,\n            0.0, 1.0, 0.0,\n            0.0, 0.0, 1.0\n          );\n        vec2 position = aPosition;\n        vec2 uv = aUV;\n\n        {{start}}\n\n        vColor = vec4(1.);\n\n        {{main}}\n\n        vUV = uv;\n\n        mat3 modelViewProjectionMatrix = uProjectionMatrix * worldTransformMatrix * modelMatrix;\n\n        gl_Position = vec4((modelViewProjectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\n\n        vColor *= uWorldColorAlpha;\n\n        {{end}}\n    }\n`\n);\nconst fragmentGlTemplate = (\n  /* glsl */\n  `\n\n    in vec4 vColor;\n    in vec2 vUV;\n\n    out vec4 finalColor;\n\n    {{header}}\n\n    void main(void) {\n\n        {{start}}\n\n        vec4 outColor;\n\n        {{main}}\n\n        finalColor = outColor * vColor;\n\n        {{end}}\n    }\n`\n);\n\nexport { fragmentGPUTemplate, fragmentGlTemplate, vertexGPUTemplate, vertexGlTemplate };\n//# sourceMappingURL=defaultProgramTemplate.mjs.map\n","\"use strict\";\nconst globalUniformsBit = {\n  name: \"global-uniforms-bit\",\n  vertex: {\n    header: (\n      /* wgsl */\n      `\n        struct GlobalUniforms {\n            uProjectionMatrix:mat3x3<f32>,\n            uWorldTransformMatrix:mat3x3<f32>,\n            uWorldColorAlpha: vec4<f32>,\n            uResolution: vec2<f32>,\n        }\n\n        @group(0) @binding(0) var<uniform> globalUniforms : GlobalUniforms;\n        `\n    )\n  }\n};\nconst globalUniformsUBOBitGl = {\n  name: \"global-uniforms-ubo-bit\",\n  vertex: {\n    header: (\n      /* glsl */\n      `\n          uniform globalUniforms {\n            mat3 uProjectionMatrix;\n            mat3 uWorldTransformMatrix;\n            vec4 uWorldColorAlpha;\n            vec2 uResolution;\n          };\n        `\n    )\n  }\n};\nconst globalUniformsBitGl = {\n  name: \"global-uniforms-bit\",\n  vertex: {\n    header: (\n      /* glsl */\n      `\n          uniform mat3 uProjectionMatrix;\n          uniform mat3 uWorldTransformMatrix;\n          uniform vec4 uWorldColorAlpha;\n          uniform vec2 uResolution;\n        `\n    )\n  }\n};\n\nexport { globalUniformsBit, globalUniformsBitGl, globalUniformsUBOBitGl };\n//# sourceMappingURL=globalUniformsBit.mjs.map\n","import { GlProgram } from '../renderers/gl/shader/GlProgram.mjs';\nimport { GpuProgram } from '../renderers/gpu/shader/GpuProgram.mjs';\nimport { compileHighShader, compileHighShaderGl } from './compiler/compileHighShader.mjs';\nimport { fragmentGPUTemplate, vertexGPUTemplate, vertexGlTemplate, fragmentGlTemplate } from './defaultProgramTemplate.mjs';\nimport { globalUniformsBit, globalUniformsBitGl } from './shader-bits/globalUniformsBit.mjs';\n\n\"use strict\";\nfunction compileHighShaderGpuProgram({ bits, name }) {\n  const source = compileHighShader({\n    template: {\n      fragment: fragmentGPUTemplate,\n      vertex: vertexGPUTemplate\n    },\n    bits: [\n      globalUniformsBit,\n      ...bits\n    ]\n  });\n  return GpuProgram.from({\n    name,\n    vertex: {\n      source: source.vertex,\n      entryPoint: \"main\"\n    },\n    fragment: {\n      source: source.fragment,\n      entryPoint: \"main\"\n    }\n  });\n}\nfunction compileHighShaderGlProgram({ bits, name }) {\n  return new GlProgram({\n    name,\n    ...compileHighShaderGl({\n      template: {\n        vertex: vertexGlTemplate,\n        fragment: fragmentGlTemplate\n      },\n      bits: [\n        globalUniformsBitGl,\n        ...bits\n      ]\n    })\n  });\n}\n\nexport { compileHighShaderGlProgram, compileHighShaderGpuProgram };\n//# sourceMappingURL=compileHighShaderToProgram.mjs.map\n","\"use strict\";\nconst colorBit = {\n  name: \"color-bit\",\n  vertex: {\n    header: (\n      /* wgsl */\n      `\n            @in aColor: vec4<f32>;\n        `\n    ),\n    main: (\n      /* wgsl */\n      `\n            vColor *= vec4<f32>(aColor.rgb * aColor.a, aColor.a);\n        `\n    )\n  }\n};\nconst colorBitGl = {\n  name: \"color-bit\",\n  vertex: {\n    header: (\n      /* glsl */\n      `\n            in vec4 aColor;\n        `\n    ),\n    main: (\n      /* glsl */\n      `\n            vColor *= vec4(aColor.rgb * aColor.a, aColor.a);\n        `\n    )\n  }\n};\n\nexport { colorBit, colorBitGl };\n//# sourceMappingURL=colorBit.mjs.map\n","\"use strict\";\nconst textureBatchBitGpuCache = {};\nfunction generateBindingSrc(maxTextures) {\n  const src = [];\n  if (maxTextures === 1) {\n    src.push(\"@group(1) @binding(0) var textureSource1: texture_2d<f32>;\");\n    src.push(\"@group(1) @binding(1) var textureSampler1: sampler;\");\n  } else {\n    let bindingIndex = 0;\n    for (let i = 0; i < maxTextures; i++) {\n      src.push(`@group(1) @binding(${bindingIndex++}) var textureSource${i + 1}: texture_2d<f32>;`);\n      src.push(`@group(1) @binding(${bindingIndex++}) var textureSampler${i + 1}: sampler;`);\n    }\n  }\n  return src.join(\"\\n\");\n}\nfunction generateSampleSrc(maxTextures) {\n  const src = [];\n  if (maxTextures === 1) {\n    src.push(\"outColor = textureSampleGrad(textureSource1, textureSampler1, vUV, uvDx, uvDy);\");\n  } else {\n    src.push(\"switch vTextureId {\");\n    for (let i = 0; i < maxTextures; i++) {\n      if (i === maxTextures - 1) {\n        src.push(`  default:{`);\n      } else {\n        src.push(`  case ${i}:{`);\n      }\n      src.push(`      outColor = textureSampleGrad(textureSource${i + 1}, textureSampler${i + 1}, vUV, uvDx, uvDy);`);\n      src.push(`      break;}`);\n    }\n    src.push(`}`);\n  }\n  return src.join(\"\\n\");\n}\nfunction generateTextureBatchBit(maxTextures) {\n  if (!textureBatchBitGpuCache[maxTextures]) {\n    textureBatchBitGpuCache[maxTextures] = {\n      name: \"texture-batch-bit\",\n      vertex: {\n        header: `\n                @in aTextureIdAndRound: vec2<u32>;\n                @out @interpolate(flat) vTextureId : u32;\n            `,\n        main: `\n                vTextureId = aTextureIdAndRound.y;\n            `,\n        end: `\n                if(aTextureIdAndRound.x == 1)\n                {\n                    vPosition = vec4<f32>(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);\n                }\n            `\n      },\n      fragment: {\n        header: `\n                @in @interpolate(flat) vTextureId: u32;\n\n                ${generateBindingSrc(maxTextures)}\n            `,\n        main: `\n                var uvDx = dpdx(vUV);\n                var uvDy = dpdy(vUV);\n\n                ${generateSampleSrc(maxTextures)}\n            `\n      }\n    };\n  }\n  return textureBatchBitGpuCache[maxTextures];\n}\nconst textureBatchBitGlCache = {};\nfunction generateSampleGlSrc(maxTextures) {\n  const src = [];\n  for (let i = 0; i < maxTextures; i++) {\n    if (i > 0) {\n      src.push(\"else\");\n    }\n    if (i < maxTextures - 1) {\n      src.push(`if(vTextureId < ${i}.5)`);\n    }\n    src.push(\"{\");\n    src.push(`\toutColor = texture(uTextures[${i}], vUV);`);\n    src.push(\"}\");\n  }\n  return src.join(\"\\n\");\n}\nfunction generateTextureBatchBitGl(maxTextures) {\n  if (!textureBatchBitGlCache[maxTextures]) {\n    textureBatchBitGlCache[maxTextures] = {\n      name: \"texture-batch-bit\",\n      vertex: {\n        header: `\n                in vec2 aTextureIdAndRound;\n                out float vTextureId;\n\n            `,\n        main: `\n                vTextureId = aTextureIdAndRound.y;\n            `,\n        end: `\n                if(aTextureIdAndRound.x == 1.)\n                {\n                    gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n                }\n            `\n      },\n      fragment: {\n        header: `\n                in float vTextureId;\n\n                uniform sampler2D uTextures[${maxTextures}];\n\n            `,\n        main: `\n\n                ${generateSampleGlSrc(maxTextures)}\n            `\n      }\n    };\n  }\n  return textureBatchBitGlCache[maxTextures];\n}\n\nexport { generateTextureBatchBit, generateTextureBatchBitGl };\n//# sourceMappingURL=generateTextureBatchBit.mjs.map\n","\"use strict\";\nconst roundPixelsBit = {\n  name: \"round-pixels-bit\",\n  vertex: {\n    header: (\n      /* wgsl */\n      `\n            fn roundPixels(position: vec2<f32>, targetSize: vec2<f32>) -> vec2<f32>\n            {\n                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n            }\n        `\n    )\n  }\n};\nconst roundPixelsBitGl = {\n  name: \"round-pixels-bit\",\n  vertex: {\n    header: (\n      /* glsl */\n      `\n            vec2 roundPixels(vec2 position, vec2 targetSize)\n            {\n                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n            }\n        `\n    )\n  }\n};\n\nexport { roundPixelsBit, roundPixelsBitGl };\n//# sourceMappingURL=roundPixelsBit.mjs.map\n","import { UniformGroup } from '../../shared/shader/UniformGroup.mjs';\n\n\"use strict\";\nconst batchSamplersUniformGroupHash = {};\nfunction getBatchSamplersUniformGroup(maxTextures) {\n  let batchSamplersUniformGroup = batchSamplersUniformGroupHash[maxTextures];\n  if (batchSamplersUniformGroup)\n    return batchSamplersUniformGroup;\n  const sampleValues = new Int32Array(maxTextures);\n  for (let i = 0; i < maxTextures; i++) {\n    sampleValues[i] = i;\n  }\n  batchSamplersUniformGroup = batchSamplersUniformGroupHash[maxTextures] = new UniformGroup({\n    uTextures: { value: sampleValues, type: `i32`, size: maxTextures }\n  }, { isStatic: true });\n  return batchSamplersUniformGroup;\n}\n\nexport { getBatchSamplersUniformGroup };\n//# sourceMappingURL=getBatchSamplersUniformGroup.mjs.map\n","import { compileHighShaderGlProgram, compileHighShaderGpuProgram } from '../../high-shader/compileHighShaderToProgram.mjs';\nimport { colorBitGl, colorBit } from '../../high-shader/shader-bits/colorBit.mjs';\nimport { generateTextureBatchBitGl, generateTextureBatchBit } from '../../high-shader/shader-bits/generateTextureBatchBit.mjs';\nimport { roundPixelsBitGl, roundPixelsBit } from '../../high-shader/shader-bits/roundPixelsBit.mjs';\nimport { getBatchSamplersUniformGroup } from '../../renderers/gl/shader/getBatchSamplersUniformGroup.mjs';\nimport { Shader } from '../../renderers/shared/shader/Shader.mjs';\n\n\"use strict\";\nclass DefaultShader extends Shader {\n  constructor(maxTextures) {\n    const glProgram = compileHighShaderGlProgram({\n      name: \"batch\",\n      bits: [\n        colorBitGl,\n        generateTextureBatchBitGl(maxTextures),\n        roundPixelsBitGl\n      ]\n    });\n    const gpuProgram = compileHighShaderGpuProgram({\n      name: \"batch\",\n      bits: [\n        colorBit,\n        generateTextureBatchBit(maxTextures),\n        roundPixelsBit\n      ]\n    });\n    super({\n      glProgram,\n      gpuProgram,\n      resources: {\n        batchSamplers: getBatchSamplersUniformGroup(maxTextures)\n      }\n    });\n  }\n}\n\nexport { DefaultShader };\n//# sourceMappingURL=DefaultShader.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { Batcher } from './Batcher.mjs';\nimport { BatchGeometry } from './BatchGeometry.mjs';\nimport { DefaultShader } from './DefaultShader.mjs';\n\n\"use strict\";\nlet defaultShader = null;\nconst _DefaultBatcher = class _DefaultBatcher extends Batcher {\n  constructor(options) {\n    super(options);\n    this.geometry = new BatchGeometry();\n    this.name = _DefaultBatcher.extension.name;\n    /** The size of one attribute. 1 = 32 bit. x, y, u, v, color, textureIdAndRound -> total = 6 */\n    this.vertexSize = 6;\n    defaultShader ?? (defaultShader = new DefaultShader(options.maxTextures));\n    this.shader = defaultShader;\n  }\n  /**\n   * Packs the attributes of a DefaultBatchableMeshElement into the provided views.\n   * @param element - The DefaultBatchableMeshElement to pack.\n   * @param float32View - The Float32Array view to pack into.\n   * @param uint32View - The Uint32Array view to pack into.\n   * @param index - The starting index in the views.\n   * @param textureId - The texture ID to use.\n   */\n  packAttributes(element, float32View, uint32View, index, textureId) {\n    const textureIdAndRound = textureId << 16 | element.roundPixels & 65535;\n    const wt = element.transform;\n    const a = wt.a;\n    const b = wt.b;\n    const c = wt.c;\n    const d = wt.d;\n    const tx = wt.tx;\n    const ty = wt.ty;\n    const { positions, uvs } = element;\n    const argb = element.color;\n    const offset = element.attributeOffset;\n    const end = offset + element.attributeSize;\n    for (let i = offset; i < end; i++) {\n      const i2 = i * 2;\n      const x = positions[i2];\n      const y = positions[i2 + 1];\n      float32View[index++] = a * x + c * y + tx;\n      float32View[index++] = d * y + b * x + ty;\n      float32View[index++] = uvs[i2];\n      float32View[index++] = uvs[i2 + 1];\n      uint32View[index++] = argb;\n      uint32View[index++] = textureIdAndRound;\n    }\n  }\n  /**\n   * Packs the attributes of a DefaultBatchableQuadElement into the provided views.\n   * @param element - The DefaultBatchableQuadElement to pack.\n   * @param float32View - The Float32Array view to pack into.\n   * @param uint32View - The Uint32Array view to pack into.\n   * @param index - The starting index in the views.\n   * @param textureId - The texture ID to use.\n   */\n  packQuadAttributes(element, float32View, uint32View, index, textureId) {\n    const texture = element.texture;\n    const wt = element.transform;\n    const a = wt.a;\n    const b = wt.b;\n    const c = wt.c;\n    const d = wt.d;\n    const tx = wt.tx;\n    const ty = wt.ty;\n    const bounds = element.bounds;\n    const w0 = bounds.maxX;\n    const w1 = bounds.minX;\n    const h0 = bounds.maxY;\n    const h1 = bounds.minY;\n    const uvs = texture.uvs;\n    const argb = element.color;\n    const textureIdAndRound = textureId << 16 | element.roundPixels & 65535;\n    float32View[index + 0] = a * w1 + c * h1 + tx;\n    float32View[index + 1] = d * h1 + b * w1 + ty;\n    float32View[index + 2] = uvs.x0;\n    float32View[index + 3] = uvs.y0;\n    uint32View[index + 4] = argb;\n    uint32View[index + 5] = textureIdAndRound;\n    float32View[index + 6] = a * w0 + c * h1 + tx;\n    float32View[index + 7] = d * h1 + b * w0 + ty;\n    float32View[index + 8] = uvs.x1;\n    float32View[index + 9] = uvs.y1;\n    uint32View[index + 10] = argb;\n    uint32View[index + 11] = textureIdAndRound;\n    float32View[index + 12] = a * w0 + c * h0 + tx;\n    float32View[index + 13] = d * h0 + b * w0 + ty;\n    float32View[index + 14] = uvs.x2;\n    float32View[index + 15] = uvs.y2;\n    uint32View[index + 16] = argb;\n    uint32View[index + 17] = textureIdAndRound;\n    float32View[index + 18] = a * w1 + c * h0 + tx;\n    float32View[index + 19] = d * h0 + b * w1 + ty;\n    float32View[index + 20] = uvs.x3;\n    float32View[index + 21] = uvs.y3;\n    uint32View[index + 22] = argb;\n    uint32View[index + 23] = textureIdAndRound;\n  }\n};\n/** @ignore */\n_DefaultBatcher.extension = {\n  type: [\n    ExtensionType.Batcher\n  ],\n  name: \"default\"\n};\nlet DefaultBatcher = _DefaultBatcher;\n\nexport { DefaultBatcher };\n//# sourceMappingURL=DefaultBatcher.mjs.map\n","\"use strict\";\nfunction buildUvs(vertices, verticesStride, verticesOffset, uvs, uvsOffset, uvsStride, size, matrix = null) {\n  let index = 0;\n  verticesOffset *= verticesStride;\n  uvsOffset *= uvsStride;\n  const a = matrix.a;\n  const b = matrix.b;\n  const c = matrix.c;\n  const d = matrix.d;\n  const tx = matrix.tx;\n  const ty = matrix.ty;\n  while (index < size) {\n    const x = vertices[verticesOffset];\n    const y = vertices[verticesOffset + 1];\n    uvs[uvsOffset] = a * x + c * y + tx;\n    uvs[uvsOffset + 1] = b * x + d * y + ty;\n    uvsOffset += uvsStride;\n    verticesOffset += verticesStride;\n    index++;\n  }\n}\nfunction buildSimpleUvs(uvs, uvsOffset, uvsStride, size) {\n  let index = 0;\n  uvsOffset *= uvsStride;\n  while (index < size) {\n    uvs[uvsOffset] = 0;\n    uvs[uvsOffset + 1] = 0;\n    uvsOffset += uvsStride;\n    index++;\n  }\n}\n\nexport { buildSimpleUvs, buildUvs };\n//# sourceMappingURL=buildUvs.mjs.map\n","\"use strict\";\nfunction transformVertices(vertices, m, offset, stride, size) {\n  const a = m.a;\n  const b = m.b;\n  const c = m.c;\n  const d = m.d;\n  const tx = m.tx;\n  const ty = m.ty;\n  offset || (offset = 0);\n  stride || (stride = 2);\n  size || (size = vertices.length / stride - offset);\n  let index = offset * stride;\n  for (let i = 0; i < size; i++) {\n    const x = vertices[index];\n    const y = vertices[index + 1];\n    vertices[index] = a * x + c * y + tx;\n    vertices[index + 1] = b * x + d * y + ty;\n    index += stride;\n  }\n}\n\nexport { transformVertices };\n//# sourceMappingURL=transformVertices.mjs.map\n","import { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { multiplyHexColors } from '../../container/utils/multiplyHexColors.mjs';\n\n\"use strict\";\nconst identityMatrix = new Matrix();\nclass BatchableGraphics {\n  constructor() {\n    this.packAsQuad = false;\n    this.batcherName = \"default\";\n    this.topology = \"triangle-list\";\n    this.applyTransform = true;\n    this.roundPixels = 0;\n    this._batcher = null;\n    this._batch = null;\n  }\n  get uvs() {\n    return this.geometryData.uvs;\n  }\n  get positions() {\n    return this.geometryData.vertices;\n  }\n  get indices() {\n    return this.geometryData.indices;\n  }\n  get blendMode() {\n    if (this.renderable && this.applyTransform) {\n      return this.renderable.groupBlendMode;\n    }\n    return \"normal\";\n  }\n  get color() {\n    const rgb = this.baseColor;\n    const bgr = rgb >> 16 | rgb & 65280 | (rgb & 255) << 16;\n    const renderable = this.renderable;\n    if (renderable) {\n      return multiplyHexColors(bgr, renderable.groupColor) + (this.alpha * renderable.groupAlpha * 255 << 24);\n    }\n    return bgr + (this.alpha * 255 << 24);\n  }\n  get transform() {\n    return this.renderable?.groupTransform || identityMatrix;\n  }\n  copyTo(gpuBuffer) {\n    gpuBuffer.indexOffset = this.indexOffset;\n    gpuBuffer.indexSize = this.indexSize;\n    gpuBuffer.attributeOffset = this.attributeOffset;\n    gpuBuffer.attributeSize = this.attributeSize;\n    gpuBuffer.baseColor = this.baseColor;\n    gpuBuffer.alpha = this.alpha;\n    gpuBuffer.texture = this.texture;\n    gpuBuffer.geometryData = this.geometryData;\n    gpuBuffer.topology = this.topology;\n  }\n  reset() {\n    this.applyTransform = true;\n    this.renderable = null;\n    this.topology = \"triangle-list\";\n  }\n  destroy() {\n    this.renderable = null;\n    this.texture = null;\n    this.geometryData = null;\n    this._batcher = null;\n    this._batch = null;\n  }\n}\n\nexport { BatchableGraphics };\n//# sourceMappingURL=BatchableGraphics.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\n\n\"use strict\";\nconst buildCircle = {\n  extension: {\n    type: ExtensionType.ShapeBuilder,\n    name: \"circle\"\n  },\n  build(shape, points) {\n    let x;\n    let y;\n    let dx;\n    let dy;\n    let rx;\n    let ry;\n    if (shape.type === \"circle\") {\n      const circle = shape;\n      rx = ry = circle.radius;\n      if (rx <= 0) {\n        return false;\n      }\n      x = circle.x;\n      y = circle.y;\n      dx = dy = 0;\n    } else if (shape.type === \"ellipse\") {\n      const ellipse = shape;\n      rx = ellipse.halfWidth;\n      ry = ellipse.halfHeight;\n      if (rx <= 0 || ry <= 0) {\n        return false;\n      }\n      x = ellipse.x;\n      y = ellipse.y;\n      dx = dy = 0;\n    } else {\n      const roundedRect = shape;\n      const halfWidth = roundedRect.width / 2;\n      const halfHeight = roundedRect.height / 2;\n      x = roundedRect.x + halfWidth;\n      y = roundedRect.y + halfHeight;\n      rx = ry = Math.max(0, Math.min(roundedRect.radius, Math.min(halfWidth, halfHeight)));\n      dx = halfWidth - rx;\n      dy = halfHeight - ry;\n    }\n    if (dx < 0 || dy < 0) {\n      return false;\n    }\n    const n = Math.ceil(2.3 * Math.sqrt(rx + ry));\n    const m = n * 8 + (dx ? 4 : 0) + (dy ? 4 : 0);\n    if (m === 0) {\n      return false;\n    }\n    if (n === 0) {\n      points[0] = points[6] = x + dx;\n      points[1] = points[3] = y + dy;\n      points[2] = points[4] = x - dx;\n      points[5] = points[7] = y - dy;\n      return true;\n    }\n    let j1 = 0;\n    let j2 = n * 4 + (dx ? 2 : 0) + 2;\n    let j3 = j2;\n    let j4 = m;\n    let x0 = dx + rx;\n    let y0 = dy;\n    let x1 = x + x0;\n    let x2 = x - x0;\n    let y1 = y + y0;\n    points[j1++] = x1;\n    points[j1++] = y1;\n    points[--j2] = y1;\n    points[--j2] = x2;\n    if (dy) {\n      const y22 = y - y0;\n      points[j3++] = x2;\n      points[j3++] = y22;\n      points[--j4] = y22;\n      points[--j4] = x1;\n    }\n    for (let i = 1; i < n; i++) {\n      const a = Math.PI / 2 * (i / n);\n      const x02 = dx + Math.cos(a) * rx;\n      const y02 = dy + Math.sin(a) * ry;\n      const x12 = x + x02;\n      const x22 = x - x02;\n      const y12 = y + y02;\n      const y22 = y - y02;\n      points[j1++] = x12;\n      points[j1++] = y12;\n      points[--j2] = y12;\n      points[--j2] = x22;\n      points[j3++] = x22;\n      points[j3++] = y22;\n      points[--j4] = y22;\n      points[--j4] = x12;\n    }\n    x0 = dx;\n    y0 = dy + ry;\n    x1 = x + x0;\n    x2 = x - x0;\n    y1 = y + y0;\n    const y2 = y - y0;\n    points[j1++] = x1;\n    points[j1++] = y1;\n    points[--j4] = y2;\n    points[--j4] = x1;\n    if (dx) {\n      points[j1++] = x2;\n      points[j1++] = y1;\n      points[--j4] = y2;\n      points[--j4] = x2;\n    }\n    return true;\n  },\n  triangulate(points, vertices, verticesStride, verticesOffset, indices, indicesOffset) {\n    if (points.length === 0) {\n      return;\n    }\n    let centerX = 0;\n    let centerY = 0;\n    for (let i = 0; i < points.length; i += 2) {\n      centerX += points[i];\n      centerY += points[i + 1];\n    }\n    centerX /= points.length / 2;\n    centerY /= points.length / 2;\n    let count = verticesOffset;\n    vertices[count * verticesStride] = centerX;\n    vertices[count * verticesStride + 1] = centerY;\n    const centerIndex = count++;\n    for (let i = 0; i < points.length; i += 2) {\n      vertices[count * verticesStride] = points[i];\n      vertices[count * verticesStride + 1] = points[i + 1];\n      if (i > 0) {\n        indices[indicesOffset++] = count;\n        indices[indicesOffset++] = centerIndex;\n        indices[indicesOffset++] = count - 1;\n      }\n      count++;\n    }\n    indices[indicesOffset++] = centerIndex + 1;\n    indices[indicesOffset++] = centerIndex;\n    indices[indicesOffset++] = count - 1;\n  }\n};\nconst buildEllipse = { ...buildCircle, extension: { ...buildCircle.extension, name: \"ellipse\" } };\nconst buildRoundedRectangle = { ...buildCircle, extension: { ...buildCircle.extension, name: \"roundedRectangle\" } };\n\nexport { buildCircle, buildEllipse, buildRoundedRectangle };\n//# sourceMappingURL=buildCircle.mjs.map\n","\"use strict\";\nconst closePointEps = 1e-4;\nconst curveEps = 1e-4;\n\nexport { closePointEps, curveEps };\n//# sourceMappingURL=const.mjs.map\n","\"use strict\";\nfunction getOrientationOfPoints(points) {\n  const m = points.length;\n  if (m < 6) {\n    return 1;\n  }\n  let area = 0;\n  for (let i = 0, x1 = points[m - 2], y1 = points[m - 1]; i < m; i += 2) {\n    const x2 = points[i];\n    const y2 = points[i + 1];\n    area += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  if (area < 0) {\n    return -1;\n  }\n  return 1;\n}\n\nexport { getOrientationOfPoints };\n//# sourceMappingURL=getOrientationOfPoints.mjs.map\n","import { Point } from '../../../../maths/point/Point.mjs';\nimport { closePointEps, curveEps } from '../const.mjs';\nimport { getOrientationOfPoints } from '../utils/getOrientationOfPoints.mjs';\n\n\"use strict\";\nfunction square(x, y, nx, ny, innerWeight, outerWeight, clockwise, verts) {\n  const ix = x - nx * innerWeight;\n  const iy = y - ny * innerWeight;\n  const ox = x + nx * outerWeight;\n  const oy = y + ny * outerWeight;\n  let exx;\n  let eyy;\n  if (clockwise) {\n    exx = ny;\n    eyy = -nx;\n  } else {\n    exx = -ny;\n    eyy = nx;\n  }\n  const eix = ix + exx;\n  const eiy = iy + eyy;\n  const eox = ox + exx;\n  const eoy = oy + eyy;\n  verts.push(eix, eiy);\n  verts.push(eox, eoy);\n  return 2;\n}\nfunction round(cx, cy, sx, sy, ex, ey, verts, clockwise) {\n  const cx2p0x = sx - cx;\n  const cy2p0y = sy - cy;\n  let angle0 = Math.atan2(cx2p0x, cy2p0y);\n  let angle1 = Math.atan2(ex - cx, ey - cy);\n  if (clockwise && angle0 < angle1) {\n    angle0 += Math.PI * 2;\n  } else if (!clockwise && angle0 > angle1) {\n    angle1 += Math.PI * 2;\n  }\n  let startAngle = angle0;\n  const angleDiff = angle1 - angle0;\n  const absAngleDiff = Math.abs(angleDiff);\n  const radius = Math.sqrt(cx2p0x * cx2p0x + cy2p0y * cy2p0y);\n  const segCount = (15 * absAngleDiff * Math.sqrt(radius) / Math.PI >> 0) + 1;\n  const angleInc = angleDiff / segCount;\n  startAngle += angleInc;\n  if (clockwise) {\n    verts.push(cx, cy);\n    verts.push(sx, sy);\n    for (let i = 1, angle = startAngle; i < segCount; i++, angle += angleInc) {\n      verts.push(cx, cy);\n      verts.push(\n        cx + Math.sin(angle) * radius,\n        cy + Math.cos(angle) * radius\n      );\n    }\n    verts.push(cx, cy);\n    verts.push(ex, ey);\n  } else {\n    verts.push(sx, sy);\n    verts.push(cx, cy);\n    for (let i = 1, angle = startAngle; i < segCount; i++, angle += angleInc) {\n      verts.push(\n        cx + Math.sin(angle) * radius,\n        cy + Math.cos(angle) * radius\n      );\n      verts.push(cx, cy);\n    }\n    verts.push(ex, ey);\n    verts.push(cx, cy);\n  }\n  return segCount * 2;\n}\nfunction buildLine(points, lineStyle, flipAlignment, closed, vertices, indices) {\n  const eps = closePointEps;\n  if (points.length === 0) {\n    return;\n  }\n  const style = lineStyle;\n  let alignment = style.alignment;\n  if (lineStyle.alignment !== 0.5) {\n    let orientation = getOrientationOfPoints(points);\n    if (flipAlignment)\n      orientation *= -1;\n    alignment = (alignment - 0.5) * orientation + 0.5;\n  }\n  const firstPoint = new Point(points[0], points[1]);\n  const lastPoint = new Point(points[points.length - 2], points[points.length - 1]);\n  const closedShape = closed;\n  const closedPath = Math.abs(firstPoint.x - lastPoint.x) < eps && Math.abs(firstPoint.y - lastPoint.y) < eps;\n  if (closedShape) {\n    points = points.slice();\n    if (closedPath) {\n      points.pop();\n      points.pop();\n      lastPoint.set(points[points.length - 2], points[points.length - 1]);\n    }\n    const midPointX = (firstPoint.x + lastPoint.x) * 0.5;\n    const midPointY = (lastPoint.y + firstPoint.y) * 0.5;\n    points.unshift(midPointX, midPointY);\n    points.push(midPointX, midPointY);\n  }\n  const verts = vertices;\n  const length = points.length / 2;\n  let indexCount = points.length;\n  const indexStart = verts.length / 2;\n  const width = style.width / 2;\n  const widthSquared = width * width;\n  const miterLimitSquared = style.miterLimit * style.miterLimit;\n  let x0 = points[0];\n  let y0 = points[1];\n  let x1 = points[2];\n  let y1 = points[3];\n  let x2 = 0;\n  let y2 = 0;\n  let perpX = -(y0 - y1);\n  let perpY = x0 - x1;\n  let perp1x = 0;\n  let perp1y = 0;\n  let dist = Math.sqrt(perpX * perpX + perpY * perpY);\n  perpX /= dist;\n  perpY /= dist;\n  perpX *= width;\n  perpY *= width;\n  const ratio = alignment;\n  const innerWeight = (1 - ratio) * 2;\n  const outerWeight = ratio * 2;\n  if (!closedShape) {\n    if (style.cap === \"round\") {\n      indexCount += round(\n        x0 - perpX * (innerWeight - outerWeight) * 0.5,\n        y0 - perpY * (innerWeight - outerWeight) * 0.5,\n        x0 - perpX * innerWeight,\n        y0 - perpY * innerWeight,\n        x0 + perpX * outerWeight,\n        y0 + perpY * outerWeight,\n        verts,\n        true\n      ) + 2;\n    } else if (style.cap === \"square\") {\n      indexCount += square(x0, y0, perpX, perpY, innerWeight, outerWeight, true, verts);\n    }\n  }\n  verts.push(\n    x0 - perpX * innerWeight,\n    y0 - perpY * innerWeight\n  );\n  verts.push(\n    x0 + perpX * outerWeight,\n    y0 + perpY * outerWeight\n  );\n  for (let i = 1; i < length - 1; ++i) {\n    x0 = points[(i - 1) * 2];\n    y0 = points[(i - 1) * 2 + 1];\n    x1 = points[i * 2];\n    y1 = points[i * 2 + 1];\n    x2 = points[(i + 1) * 2];\n    y2 = points[(i + 1) * 2 + 1];\n    perpX = -(y0 - y1);\n    perpY = x0 - x1;\n    dist = Math.sqrt(perpX * perpX + perpY * perpY);\n    perpX /= dist;\n    perpY /= dist;\n    perpX *= width;\n    perpY *= width;\n    perp1x = -(y1 - y2);\n    perp1y = x1 - x2;\n    dist = Math.sqrt(perp1x * perp1x + perp1y * perp1y);\n    perp1x /= dist;\n    perp1y /= dist;\n    perp1x *= width;\n    perp1y *= width;\n    const dx0 = x1 - x0;\n    const dy0 = y0 - y1;\n    const dx1 = x1 - x2;\n    const dy1 = y2 - y1;\n    const dot = dx0 * dx1 + dy0 * dy1;\n    const cross = dy0 * dx1 - dy1 * dx0;\n    const clockwise = cross < 0;\n    if (Math.abs(cross) < 1e-3 * Math.abs(dot)) {\n      verts.push(\n        x1 - perpX * innerWeight,\n        y1 - perpY * innerWeight\n      );\n      verts.push(\n        x1 + perpX * outerWeight,\n        y1 + perpY * outerWeight\n      );\n      if (dot >= 0) {\n        if (style.join === \"round\") {\n          indexCount += round(\n            x1,\n            y1,\n            x1 - perpX * innerWeight,\n            y1 - perpY * innerWeight,\n            x1 - perp1x * innerWeight,\n            y1 - perp1y * innerWeight,\n            verts,\n            false\n          ) + 4;\n        } else {\n          indexCount += 2;\n        }\n        verts.push(\n          x1 - perp1x * outerWeight,\n          y1 - perp1y * outerWeight\n        );\n        verts.push(\n          x1 + perp1x * innerWeight,\n          y1 + perp1y * innerWeight\n        );\n      }\n      continue;\n    }\n    const c1 = (-perpX + x0) * (-perpY + y1) - (-perpX + x1) * (-perpY + y0);\n    const c2 = (-perp1x + x2) * (-perp1y + y1) - (-perp1x + x1) * (-perp1y + y2);\n    const px = (dx0 * c2 - dx1 * c1) / cross;\n    const py = (dy1 * c1 - dy0 * c2) / cross;\n    const pDist = (px - x1) * (px - x1) + (py - y1) * (py - y1);\n    const imx = x1 + (px - x1) * innerWeight;\n    const imy = y1 + (py - y1) * innerWeight;\n    const omx = x1 - (px - x1) * outerWeight;\n    const omy = y1 - (py - y1) * outerWeight;\n    const smallerInsideSegmentSq = Math.min(dx0 * dx0 + dy0 * dy0, dx1 * dx1 + dy1 * dy1);\n    const insideWeight = clockwise ? innerWeight : outerWeight;\n    const smallerInsideDiagonalSq = smallerInsideSegmentSq + insideWeight * insideWeight * widthSquared;\n    const insideMiterOk = pDist <= smallerInsideDiagonalSq;\n    if (insideMiterOk) {\n      if (style.join === \"bevel\" || pDist / widthSquared > miterLimitSquared) {\n        if (clockwise) {\n          verts.push(imx, imy);\n          verts.push(x1 + perpX * outerWeight, y1 + perpY * outerWeight);\n          verts.push(imx, imy);\n          verts.push(x1 + perp1x * outerWeight, y1 + perp1y * outerWeight);\n        } else {\n          verts.push(x1 - perpX * innerWeight, y1 - perpY * innerWeight);\n          verts.push(omx, omy);\n          verts.push(x1 - perp1x * innerWeight, y1 - perp1y * innerWeight);\n          verts.push(omx, omy);\n        }\n        indexCount += 2;\n      } else if (style.join === \"round\") {\n        if (clockwise) {\n          verts.push(imx, imy);\n          verts.push(x1 + perpX * outerWeight, y1 + perpY * outerWeight);\n          indexCount += round(\n            x1,\n            y1,\n            x1 + perpX * outerWeight,\n            y1 + perpY * outerWeight,\n            x1 + perp1x * outerWeight,\n            y1 + perp1y * outerWeight,\n            verts,\n            true\n          ) + 4;\n          verts.push(imx, imy);\n          verts.push(x1 + perp1x * outerWeight, y1 + perp1y * outerWeight);\n        } else {\n          verts.push(x1 - perpX * innerWeight, y1 - perpY * innerWeight);\n          verts.push(omx, omy);\n          indexCount += round(\n            x1,\n            y1,\n            x1 - perpX * innerWeight,\n            y1 - perpY * innerWeight,\n            x1 - perp1x * innerWeight,\n            y1 - perp1y * innerWeight,\n            verts,\n            false\n          ) + 4;\n          verts.push(x1 - perp1x * innerWeight, y1 - perp1y * innerWeight);\n          verts.push(omx, omy);\n        }\n      } else {\n        verts.push(imx, imy);\n        verts.push(omx, omy);\n      }\n    } else {\n      verts.push(x1 - perpX * innerWeight, y1 - perpY * innerWeight);\n      verts.push(x1 + perpX * outerWeight, y1 + perpY * outerWeight);\n      if (style.join === \"round\") {\n        if (clockwise) {\n          indexCount += round(\n            x1,\n            y1,\n            x1 + perpX * outerWeight,\n            y1 + perpY * outerWeight,\n            x1 + perp1x * outerWeight,\n            y1 + perp1y * outerWeight,\n            verts,\n            true\n          ) + 2;\n        } else {\n          indexCount += round(\n            x1,\n            y1,\n            x1 - perpX * innerWeight,\n            y1 - perpY * innerWeight,\n            x1 - perp1x * innerWeight,\n            y1 - perp1y * innerWeight,\n            verts,\n            false\n          ) + 2;\n        }\n      } else if (style.join === \"miter\" && pDist / widthSquared <= miterLimitSquared) {\n        if (clockwise) {\n          verts.push(omx, omy);\n          verts.push(omx, omy);\n        } else {\n          verts.push(imx, imy);\n          verts.push(imx, imy);\n        }\n        indexCount += 2;\n      }\n      verts.push(x1 - perp1x * innerWeight, y1 - perp1y * innerWeight);\n      verts.push(x1 + perp1x * outerWeight, y1 + perp1y * outerWeight);\n      indexCount += 2;\n    }\n  }\n  x0 = points[(length - 2) * 2];\n  y0 = points[(length - 2) * 2 + 1];\n  x1 = points[(length - 1) * 2];\n  y1 = points[(length - 1) * 2 + 1];\n  perpX = -(y0 - y1);\n  perpY = x0 - x1;\n  dist = Math.sqrt(perpX * perpX + perpY * perpY);\n  perpX /= dist;\n  perpY /= dist;\n  perpX *= width;\n  perpY *= width;\n  verts.push(x1 - perpX * innerWeight, y1 - perpY * innerWeight);\n  verts.push(x1 + perpX * outerWeight, y1 + perpY * outerWeight);\n  if (!closedShape) {\n    if (style.cap === \"round\") {\n      indexCount += round(\n        x1 - perpX * (innerWeight - outerWeight) * 0.5,\n        y1 - perpY * (innerWeight - outerWeight) * 0.5,\n        x1 - perpX * innerWeight,\n        y1 - perpY * innerWeight,\n        x1 + perpX * outerWeight,\n        y1 + perpY * outerWeight,\n        verts,\n        false\n      ) + 2;\n    } else if (style.cap === \"square\") {\n      indexCount += square(x1, y1, perpX, perpY, innerWeight, outerWeight, false, verts);\n    }\n  }\n  const eps2 = curveEps * curveEps;\n  for (let i = indexStart; i < indexCount + indexStart - 2; ++i) {\n    x0 = verts[i * 2];\n    y0 = verts[i * 2 + 1];\n    x1 = verts[(i + 1) * 2];\n    y1 = verts[(i + 1) * 2 + 1];\n    x2 = verts[(i + 2) * 2];\n    y2 = verts[(i + 2) * 2 + 1];\n    if (Math.abs(x0 * (y1 - y2) + x1 * (y2 - y0) + x2 * (y0 - y1)) < eps2) {\n      continue;\n    }\n    indices.push(i, i + 1, i + 2);\n  }\n}\n\nexport { buildLine };\n//# sourceMappingURL=buildLine.mjs.map\n","import { closePointEps } from '../const.mjs';\n\n\"use strict\";\nfunction buildPixelLine(points, closed, vertices, indices) {\n  const eps = closePointEps;\n  if (points.length === 0) {\n    return;\n  }\n  const fx = points[0];\n  const fy = points[1];\n  const lx = points[points.length - 2];\n  const ly = points[points.length - 1];\n  const closePath = closed || Math.abs(fx - lx) < eps && Math.abs(fy - ly) < eps;\n  const verts = vertices;\n  const length = points.length / 2;\n  const indexStart = verts.length / 2;\n  for (let i = 0; i < length; i++) {\n    verts.push(points[i * 2]);\n    verts.push(points[i * 2 + 1]);\n  }\n  for (let i = 0; i < length - 1; i++) {\n    indices.push(indexStart + i, indexStart + i + 1);\n  }\n  if (closePath) {\n    indices.push(indexStart + length - 1, indexStart);\n  }\n}\n\nexport { buildPixelLine };\n//# sourceMappingURL=buildPixelLine.mjs.map\n","import { earcut } from '../../../../utils/utils.mjs';\n\n\"use strict\";\nfunction triangulateWithHoles(points, holes, vertices, verticesStride, verticesOffset, indices, indicesOffset) {\n  const triangles = earcut(points, holes, 2);\n  if (!triangles) {\n    return;\n  }\n  for (let i = 0; i < triangles.length; i += 3) {\n    indices[indicesOffset++] = triangles[i] + verticesOffset;\n    indices[indicesOffset++] = triangles[i + 1] + verticesOffset;\n    indices[indicesOffset++] = triangles[i + 2] + verticesOffset;\n  }\n  let index = verticesOffset * verticesStride;\n  for (let i = 0; i < points.length; i += 2) {\n    vertices[index] = points[i];\n    vertices[index + 1] = points[i + 1];\n    index += verticesStride;\n  }\n}\n\nexport { triangulateWithHoles };\n//# sourceMappingURL=triangulateWithHoles.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { triangulateWithHoles } from '../utils/triangulateWithHoles.mjs';\n\n\"use strict\";\nconst emptyArray = [];\nconst buildPolygon = {\n  extension: {\n    type: ExtensionType.ShapeBuilder,\n    name: \"polygon\"\n  },\n  build(shape, points) {\n    for (let i = 0; i < shape.points.length; i++) {\n      points[i] = shape.points[i];\n    }\n    return true;\n  },\n  triangulate(points, vertices, verticesStride, verticesOffset, indices, indicesOffset) {\n    triangulateWithHoles(points, emptyArray, vertices, verticesStride, verticesOffset, indices, indicesOffset);\n  }\n};\n\nexport { buildPolygon };\n//# sourceMappingURL=buildPolygon.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\n\n\"use strict\";\nconst buildRectangle = {\n  extension: {\n    type: ExtensionType.ShapeBuilder,\n    name: \"rectangle\"\n  },\n  build(shape, points) {\n    const rectData = shape;\n    const x = rectData.x;\n    const y = rectData.y;\n    const width = rectData.width;\n    const height = rectData.height;\n    if (!(width > 0 && height > 0)) {\n      return false;\n    }\n    points[0] = x;\n    points[1] = y;\n    points[2] = x + width;\n    points[3] = y;\n    points[4] = x + width;\n    points[5] = y + height;\n    points[6] = x;\n    points[7] = y + height;\n    return true;\n  },\n  triangulate(points, vertices, verticesStride, verticesOffset, indices, indicesOffset) {\n    let count = 0;\n    verticesOffset *= verticesStride;\n    vertices[verticesOffset + count] = points[0];\n    vertices[verticesOffset + count + 1] = points[1];\n    count += verticesStride;\n    vertices[verticesOffset + count] = points[2];\n    vertices[verticesOffset + count + 1] = points[3];\n    count += verticesStride;\n    vertices[verticesOffset + count] = points[6];\n    vertices[verticesOffset + count + 1] = points[7];\n    count += verticesStride;\n    vertices[verticesOffset + count] = points[4];\n    vertices[verticesOffset + count + 1] = points[5];\n    count += verticesStride;\n    const verticesIndex = verticesOffset / verticesStride;\n    indices[indicesOffset++] = verticesIndex;\n    indices[indicesOffset++] = verticesIndex + 1;\n    indices[indicesOffset++] = verticesIndex + 2;\n    indices[indicesOffset++] = verticesIndex + 1;\n    indices[indicesOffset++] = verticesIndex + 3;\n    indices[indicesOffset++] = verticesIndex + 2;\n  }\n};\n\nexport { buildRectangle };\n//# sourceMappingURL=buildRectangle.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\n\n\"use strict\";\nconst buildTriangle = {\n  extension: {\n    type: ExtensionType.ShapeBuilder,\n    name: \"triangle\"\n  },\n  build(shape, points) {\n    points[0] = shape.x;\n    points[1] = shape.y;\n    points[2] = shape.x2;\n    points[3] = shape.y2;\n    points[4] = shape.x3;\n    points[5] = shape.y3;\n    return true;\n  },\n  triangulate(points, vertices, verticesStride, verticesOffset, indices, indicesOffset) {\n    let count = 0;\n    verticesOffset *= verticesStride;\n    vertices[verticesOffset + count] = points[0];\n    vertices[verticesOffset + count + 1] = points[1];\n    count += verticesStride;\n    vertices[verticesOffset + count] = points[2];\n    vertices[verticesOffset + count + 1] = points[3];\n    count += verticesStride;\n    vertices[verticesOffset + count] = points[4];\n    vertices[verticesOffset + count + 1] = points[5];\n    const verticesIndex = verticesOffset / verticesStride;\n    indices[indicesOffset++] = verticesIndex;\n    indices[indicesOffset++] = verticesIndex + 1;\n    indices[indicesOffset++] = verticesIndex + 2;\n  }\n};\n\nexport { buildTriangle };\n//# sourceMappingURL=buildTriangle.mjs.map\n","import { Matrix } from '../../../../maths/matrix/Matrix.mjs';\nimport { Rectangle } from '../../../../maths/shapes/Rectangle.mjs';\nimport { FillGradient } from '../fill/FillGradient.mjs';\n\n\"use strict\";\nconst tempTextureMatrix = new Matrix();\nconst tempRect = new Rectangle();\nfunction generateTextureMatrix(out, style, shape, matrix) {\n  const textureMatrix = style.matrix ? out.copyFrom(style.matrix).invert() : out.identity();\n  if (style.textureSpace === \"local\") {\n    const bounds = shape.getBounds(tempRect);\n    if (style.width) {\n      bounds.pad(style.width);\n    }\n    const { x: tx, y: ty } = bounds;\n    const sx = 1 / bounds.width;\n    const sy = 1 / bounds.height;\n    const mTx = -tx * sx;\n    const mTy = -ty * sy;\n    const a1 = textureMatrix.a;\n    const b1 = textureMatrix.b;\n    const c1 = textureMatrix.c;\n    const d1 = textureMatrix.d;\n    textureMatrix.a *= sx;\n    textureMatrix.b *= sx;\n    textureMatrix.c *= sy;\n    textureMatrix.d *= sy;\n    textureMatrix.tx = mTx * a1 + mTy * c1 + textureMatrix.tx;\n    textureMatrix.ty = mTx * b1 + mTy * d1 + textureMatrix.ty;\n  } else {\n    textureMatrix.translate(style.texture.frame.x, style.texture.frame.y);\n    textureMatrix.scale(1 / style.texture.source.width, 1 / style.texture.source.height);\n  }\n  const sourceStyle = style.texture.source.style;\n  if (!(style.fill instanceof FillGradient) && sourceStyle.addressMode === \"clamp-to-edge\") {\n    sourceStyle.addressMode = \"repeat\";\n    sourceStyle.update();\n  }\n  if (matrix) {\n    textureMatrix.append(tempTextureMatrix.copyFrom(matrix).invert());\n  }\n  return textureMatrix;\n}\n\nexport { generateTextureMatrix };\n//# sourceMappingURL=generateTextureFillMatrix.mjs.map\n","import { extensions, ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { Matrix } from '../../../../maths/matrix/Matrix.mjs';\nimport { Rectangle } from '../../../../maths/shapes/Rectangle.mjs';\nimport { buildUvs, buildSimpleUvs } from '../../../../rendering/renderers/shared/geometry/utils/buildUvs.mjs';\nimport { transformVertices } from '../../../../rendering/renderers/shared/geometry/utils/transformVertices.mjs';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { BigPool } from '../../../../utils/pool/PoolGroup.mjs';\nimport { BatchableGraphics } from '../BatchableGraphics.mjs';\nimport { buildCircle, buildEllipse, buildRoundedRectangle } from '../buildCommands/buildCircle.mjs';\nimport { buildLine } from '../buildCommands/buildLine.mjs';\nimport { buildPixelLine } from '../buildCommands/buildPixelLine.mjs';\nimport { buildPolygon } from '../buildCommands/buildPolygon.mjs';\nimport { buildRectangle } from '../buildCommands/buildRectangle.mjs';\nimport { buildTriangle } from '../buildCommands/buildTriangle.mjs';\nimport { generateTextureMatrix } from './generateTextureFillMatrix.mjs';\nimport { triangulateWithHoles } from './triangulateWithHoles.mjs';\n\n\"use strict\";\nconst shapeBuilders = {};\nextensions.handleByMap(ExtensionType.ShapeBuilder, shapeBuilders);\nextensions.add(buildRectangle, buildPolygon, buildTriangle, buildCircle, buildEllipse, buildRoundedRectangle);\nconst tempRect = new Rectangle();\nconst tempTextureMatrix = new Matrix();\nfunction buildContextBatches(context, gpuContext) {\n  const { geometryData, batches } = gpuContext;\n  batches.length = 0;\n  geometryData.indices.length = 0;\n  geometryData.vertices.length = 0;\n  geometryData.uvs.length = 0;\n  for (let i = 0; i < context.instructions.length; i++) {\n    const instruction = context.instructions[i];\n    if (instruction.action === \"texture\") {\n      addTextureToGeometryData(instruction.data, batches, geometryData);\n    } else if (instruction.action === \"fill\" || instruction.action === \"stroke\") {\n      const isStroke = instruction.action === \"stroke\";\n      const shapePath = instruction.data.path.shapePath;\n      const style = instruction.data.style;\n      const hole = instruction.data.hole;\n      if (isStroke && hole) {\n        addShapePathToGeometryData(hole.shapePath, style, true, batches, geometryData);\n      }\n      if (hole) {\n        shapePath.shapePrimitives[shapePath.shapePrimitives.length - 1].holes = hole.shapePath.shapePrimitives;\n      }\n      addShapePathToGeometryData(shapePath, style, isStroke, batches, geometryData);\n    }\n  }\n}\nfunction addTextureToGeometryData(data, batches, geometryData) {\n  const points = [];\n  const build = shapeBuilders.rectangle;\n  const rect = tempRect;\n  rect.x = data.dx;\n  rect.y = data.dy;\n  rect.width = data.dw;\n  rect.height = data.dh;\n  const matrix = data.transform;\n  if (!build.build(rect, points)) {\n    return;\n  }\n  const { vertices, uvs, indices } = geometryData;\n  const indexOffset = indices.length;\n  const vertOffset = vertices.length / 2;\n  if (matrix) {\n    transformVertices(points, matrix);\n  }\n  build.triangulate(points, vertices, 2, vertOffset, indices, indexOffset);\n  const texture = data.image;\n  const textureUvs = texture.uvs;\n  uvs.push(\n    textureUvs.x0,\n    textureUvs.y0,\n    textureUvs.x1,\n    textureUvs.y1,\n    textureUvs.x3,\n    textureUvs.y3,\n    textureUvs.x2,\n    textureUvs.y2\n  );\n  const graphicsBatch = BigPool.get(BatchableGraphics);\n  graphicsBatch.indexOffset = indexOffset;\n  graphicsBatch.indexSize = indices.length - indexOffset;\n  graphicsBatch.attributeOffset = vertOffset;\n  graphicsBatch.attributeSize = vertices.length / 2 - vertOffset;\n  graphicsBatch.baseColor = data.style;\n  graphicsBatch.alpha = data.alpha;\n  graphicsBatch.texture = texture;\n  graphicsBatch.geometryData = geometryData;\n  batches.push(graphicsBatch);\n}\nfunction addShapePathToGeometryData(shapePath, style, isStroke, batches, geometryData) {\n  const { vertices, uvs, indices } = geometryData;\n  shapePath.shapePrimitives.forEach(({ shape, transform: matrix, holes }) => {\n    const points = [];\n    const build = shapeBuilders[shape.type];\n    if (!build.build(shape, points)) {\n      return;\n    }\n    const indexOffset = indices.length;\n    const vertOffset = vertices.length / 2;\n    let topology = \"triangle-list\";\n    if (matrix) {\n      transformVertices(points, matrix);\n    }\n    if (!isStroke) {\n      if (holes) {\n        const holeIndices = [];\n        const otherPoints = points.slice();\n        const holeArrays = getHoleArrays(holes);\n        holeArrays.forEach((holePoints) => {\n          holeIndices.push(otherPoints.length / 2);\n          otherPoints.push(...holePoints);\n        });\n        triangulateWithHoles(otherPoints, holeIndices, vertices, 2, vertOffset, indices, indexOffset);\n      } else {\n        build.triangulate(points, vertices, 2, vertOffset, indices, indexOffset);\n      }\n    } else {\n      const close = shape.closePath ?? true;\n      const lineStyle = style;\n      if (!lineStyle.pixelLine) {\n        buildLine(points, lineStyle, false, close, vertices, indices);\n      } else {\n        buildPixelLine(points, close, vertices, indices);\n        topology = \"line-list\";\n      }\n    }\n    const uvsOffset = uvs.length / 2;\n    const texture = style.texture;\n    if (texture !== Texture.WHITE) {\n      const textureMatrix = generateTextureMatrix(tempTextureMatrix, style, shape, matrix);\n      buildUvs(vertices, 2, vertOffset, uvs, uvsOffset, 2, vertices.length / 2 - vertOffset, textureMatrix);\n    } else {\n      buildSimpleUvs(uvs, uvsOffset, 2, vertices.length / 2 - vertOffset);\n    }\n    const graphicsBatch = BigPool.get(BatchableGraphics);\n    graphicsBatch.indexOffset = indexOffset;\n    graphicsBatch.indexSize = indices.length - indexOffset;\n    graphicsBatch.attributeOffset = vertOffset;\n    graphicsBatch.attributeSize = vertices.length / 2 - vertOffset;\n    graphicsBatch.baseColor = style.color;\n    graphicsBatch.alpha = style.alpha;\n    graphicsBatch.texture = texture;\n    graphicsBatch.geometryData = geometryData;\n    graphicsBatch.topology = topology;\n    batches.push(graphicsBatch);\n  });\n}\nfunction getHoleArrays(holePrimitives) {\n  const holeArrays = [];\n  for (let k = 0; k < holePrimitives.length; k++) {\n    const holePrimitive = holePrimitives[k].shape;\n    const holePoints = [];\n    const holeBuilder = shapeBuilders[holePrimitive.type];\n    if (holeBuilder.build(holePrimitive, holePoints)) {\n      holeArrays.push(holePoints);\n    }\n  }\n  return holeArrays;\n}\n\nexport { buildContextBatches, shapeBuilders };\n//# sourceMappingURL=buildContextBatches.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { getTextureBatchBindGroup } from '../../../rendering/batcher/gpu/getTextureBatchBindGroup.mjs';\nimport { DefaultBatcher } from '../../../rendering/batcher/shared/DefaultBatcher.mjs';\nimport { InstructionSet } from '../../../rendering/renderers/shared/instructions/InstructionSet.mjs';\nimport { deprecation, v8_3_4 } from '../../../utils/logging/deprecation.mjs';\nimport { BigPool } from '../../../utils/pool/PoolGroup.mjs';\nimport { buildContextBatches } from './utils/buildContextBatches.mjs';\n\n\"use strict\";\nclass GpuGraphicsContext {\n  constructor() {\n    this.batches = [];\n    this.geometryData = {\n      vertices: [],\n      uvs: [],\n      indices: []\n    };\n  }\n}\nclass GraphicsContextRenderData {\n  constructor() {\n    this.instructions = new InstructionSet();\n  }\n  init(maxTextures) {\n    this.batcher = new DefaultBatcher({\n      maxTextures\n    });\n    this.instructions.reset();\n  }\n  /**\n   * @deprecated since version 8.0.0\n   * Use `batcher.geometry` instead.\n   * @see {Batcher#geometry}\n   */\n  get geometry() {\n    deprecation(v8_3_4, \"GraphicsContextRenderData#geometry is deprecated, please use batcher.geometry instead.\");\n    return this.batcher.geometry;\n  }\n  destroy() {\n    this.batcher.destroy();\n    this.instructions.destroy();\n    this.batcher = null;\n    this.instructions = null;\n  }\n}\nconst _GraphicsContextSystem = class _GraphicsContextSystem {\n  constructor(renderer) {\n    // the root context batches, used to either make a batch or geometry\n    // all graphics use this as a base\n    this._gpuContextHash = {};\n    // used for non-batchable graphics\n    this._graphicsDataContextHash = /* @__PURE__ */ Object.create(null);\n    this._renderer = renderer;\n    renderer.renderableGC.addManagedHash(this, \"_gpuContextHash\");\n    renderer.renderableGC.addManagedHash(this, \"_graphicsDataContextHash\");\n  }\n  /**\n   * Runner init called, update the default options\n   * @ignore\n   */\n  init(options) {\n    _GraphicsContextSystem.defaultOptions.bezierSmoothness = options?.bezierSmoothness ?? _GraphicsContextSystem.defaultOptions.bezierSmoothness;\n  }\n  /**\n   * Returns the render data for a given GraphicsContext.\n   * @param context - The GraphicsContext to get the render data for.\n   * @internal\n   */\n  getContextRenderData(context) {\n    return this._graphicsDataContextHash[context.uid] || this._initContextRenderData(context);\n  }\n  /**\n   * Updates the GPU context for a given GraphicsContext.\n   * If the context is dirty, it will rebuild the batches and geometry data.\n   * @param context - The GraphicsContext to update.\n   * @returns The updated GpuGraphicsContext.\n   * @internal\n   */\n  updateGpuContext(context) {\n    let gpuContext = this._gpuContextHash[context.uid] || this._initContext(context);\n    if (context.dirty) {\n      if (gpuContext) {\n        this._cleanGraphicsContextData(context);\n      } else {\n        gpuContext = this._initContext(context);\n      }\n      buildContextBatches(context, gpuContext);\n      const batchMode = context.batchMode;\n      if (context.customShader || batchMode === \"no-batch\") {\n        gpuContext.isBatchable = false;\n      } else if (batchMode === \"auto\") {\n        gpuContext.isBatchable = gpuContext.geometryData.vertices.length < 400;\n      } else {\n        gpuContext.isBatchable = true;\n      }\n      context.dirty = false;\n    }\n    return gpuContext;\n  }\n  /**\n   * Returns the GpuGraphicsContext for a given GraphicsContext.\n   * If it does not exist, it will initialize a new one.\n   * @param context - The GraphicsContext to get the GpuGraphicsContext for.\n   * @returns The GpuGraphicsContext for the given GraphicsContext.\n   * @internal\n   */\n  getGpuContext(context) {\n    return this._gpuContextHash[context.uid] || this._initContext(context);\n  }\n  _initContextRenderData(context) {\n    const graphicsData = BigPool.get(GraphicsContextRenderData, {\n      maxTextures: this._renderer.limits.maxBatchableTextures\n    });\n    const { batches, geometryData } = this._gpuContextHash[context.uid];\n    const vertexSize = geometryData.vertices.length;\n    const indexSize = geometryData.indices.length;\n    for (let i = 0; i < batches.length; i++) {\n      batches[i].applyTransform = false;\n    }\n    const batcher = graphicsData.batcher;\n    batcher.ensureAttributeBuffer(vertexSize);\n    batcher.ensureIndexBuffer(indexSize);\n    batcher.begin();\n    for (let i = 0; i < batches.length; i++) {\n      const batch = batches[i];\n      batcher.add(batch);\n    }\n    batcher.finish(graphicsData.instructions);\n    const geometry = batcher.geometry;\n    geometry.indexBuffer.setDataWithSize(batcher.indexBuffer, batcher.indexSize, true);\n    geometry.buffers[0].setDataWithSize(batcher.attributeBuffer.float32View, batcher.attributeSize, true);\n    const drawBatches = batcher.batches;\n    for (let i = 0; i < drawBatches.length; i++) {\n      const batch = drawBatches[i];\n      batch.bindGroup = getTextureBatchBindGroup(\n        batch.textures.textures,\n        batch.textures.count,\n        this._renderer.limits.maxBatchableTextures\n      );\n    }\n    this._graphicsDataContextHash[context.uid] = graphicsData;\n    return graphicsData;\n  }\n  _initContext(context) {\n    const gpuContext = new GpuGraphicsContext();\n    gpuContext.context = context;\n    this._gpuContextHash[context.uid] = gpuContext;\n    context.on(\"destroy\", this.onGraphicsContextDestroy, this);\n    return this._gpuContextHash[context.uid];\n  }\n  onGraphicsContextDestroy(context) {\n    this._cleanGraphicsContextData(context);\n    context.off(\"destroy\", this.onGraphicsContextDestroy, this);\n    this._gpuContextHash[context.uid] = null;\n  }\n  _cleanGraphicsContextData(context) {\n    const gpuContext = this._gpuContextHash[context.uid];\n    if (!gpuContext.isBatchable) {\n      if (this._graphicsDataContextHash[context.uid]) {\n        BigPool.return(this.getContextRenderData(context));\n        this._graphicsDataContextHash[context.uid] = null;\n      }\n    }\n    if (gpuContext.batches) {\n      gpuContext.batches.forEach((batch) => {\n        BigPool.return(batch);\n      });\n    }\n  }\n  destroy() {\n    for (const i in this._gpuContextHash) {\n      if (this._gpuContextHash[i]) {\n        this.onGraphicsContextDestroy(this._gpuContextHash[i].context);\n      }\n    }\n  }\n};\n/** @ignore */\n_GraphicsContextSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.WebGPUSystem,\n    ExtensionType.CanvasSystem\n  ],\n  name: \"graphicsContext\"\n};\n/** The default options for the GraphicsContextSystem. */\n_GraphicsContextSystem.defaultOptions = {\n  /**\n   * A value from 0 to 1 that controls the smoothness of bezier curves (the higher the smoother)\n   * @default 0.5\n   */\n  bezierSmoothness: 0.5\n};\nlet GraphicsContextSystem = _GraphicsContextSystem;\n\nexport { GpuGraphicsContext, GraphicsContextRenderData, GraphicsContextSystem };\n//# sourceMappingURL=GraphicsContextSystem.mjs.map\n","import { GraphicsContextSystem } from '../GraphicsContextSystem.mjs';\n\n\"use strict\";\nconst RECURSION_LIMIT = 8;\nconst FLT_EPSILON = 11920929e-14;\nconst PATH_DISTANCE_EPSILON = 1;\nconst curveAngleToleranceEpsilon = 0.01;\nconst mAngleTolerance = 0;\nconst mCuspLimit = 0;\nfunction buildAdaptiveBezier(points, sX, sY, cp1x, cp1y, cp2x, cp2y, eX, eY, smoothness) {\n  const scale = 1;\n  const smoothing = Math.min(\n    0.99,\n    // a value of 1.0 actually inverts smoothing, so we cap it at 0.99\n    Math.max(0, smoothness ?? GraphicsContextSystem.defaultOptions.bezierSmoothness)\n  );\n  let distanceTolerance = (PATH_DISTANCE_EPSILON - smoothing) / scale;\n  distanceTolerance *= distanceTolerance;\n  begin(sX, sY, cp1x, cp1y, cp2x, cp2y, eX, eY, points, distanceTolerance);\n  return points;\n}\nfunction begin(sX, sY, cp1x, cp1y, cp2x, cp2y, eX, eY, points, distanceTolerance) {\n  recursive(sX, sY, cp1x, cp1y, cp2x, cp2y, eX, eY, points, distanceTolerance, 0);\n  points.push(eX, eY);\n}\nfunction recursive(x1, y1, x2, y2, x3, y3, x4, y4, points, distanceTolerance, level) {\n  if (level > RECURSION_LIMIT) {\n    return;\n  }\n  const pi = Math.PI;\n  const x12 = (x1 + x2) / 2;\n  const y12 = (y1 + y2) / 2;\n  const x23 = (x2 + x3) / 2;\n  const y23 = (y2 + y3) / 2;\n  const x34 = (x3 + x4) / 2;\n  const y34 = (y3 + y4) / 2;\n  const x123 = (x12 + x23) / 2;\n  const y123 = (y12 + y23) / 2;\n  const x234 = (x23 + x34) / 2;\n  const y234 = (y23 + y34) / 2;\n  const x1234 = (x123 + x234) / 2;\n  const y1234 = (y123 + y234) / 2;\n  if (level > 0) {\n    let dx = x4 - x1;\n    let dy = y4 - y1;\n    const d2 = Math.abs((x2 - x4) * dy - (y2 - y4) * dx);\n    const d3 = Math.abs((x3 - x4) * dy - (y3 - y4) * dx);\n    let da1;\n    let da2;\n    if (d2 > FLT_EPSILON && d3 > FLT_EPSILON) {\n      if ((d2 + d3) * (d2 + d3) <= distanceTolerance * (dx * dx + dy * dy)) {\n        if (mAngleTolerance < curveAngleToleranceEpsilon) {\n          points.push(x1234, y1234);\n          return;\n        }\n        const a23 = Math.atan2(y3 - y2, x3 - x2);\n        da1 = Math.abs(a23 - Math.atan2(y2 - y1, x2 - x1));\n        da2 = Math.abs(Math.atan2(y4 - y3, x4 - x3) - a23);\n        if (da1 >= pi)\n          da1 = 2 * pi - da1;\n        if (da2 >= pi)\n          da2 = 2 * pi - da2;\n        if (da1 + da2 < mAngleTolerance) {\n          points.push(x1234, y1234);\n          return;\n        }\n        if (mCuspLimit !== 0) {\n          if (da1 > mCuspLimit) {\n            points.push(x2, y2);\n            return;\n          }\n          if (da2 > mCuspLimit) {\n            points.push(x3, y3);\n            return;\n          }\n        }\n      }\n    } else if (d2 > FLT_EPSILON) {\n      if (d2 * d2 <= distanceTolerance * (dx * dx + dy * dy)) {\n        if (mAngleTolerance < curveAngleToleranceEpsilon) {\n          points.push(x1234, y1234);\n          return;\n        }\n        da1 = Math.abs(Math.atan2(y3 - y2, x3 - x2) - Math.atan2(y2 - y1, x2 - x1));\n        if (da1 >= pi)\n          da1 = 2 * pi - da1;\n        if (da1 < mAngleTolerance) {\n          points.push(x2, y2);\n          points.push(x3, y3);\n          return;\n        }\n        if (mCuspLimit !== 0) {\n          if (da1 > mCuspLimit) {\n            points.push(x2, y2);\n            return;\n          }\n        }\n      }\n    } else if (d3 > FLT_EPSILON) {\n      if (d3 * d3 <= distanceTolerance * (dx * dx + dy * dy)) {\n        if (mAngleTolerance < curveAngleToleranceEpsilon) {\n          points.push(x1234, y1234);\n          return;\n        }\n        da1 = Math.abs(Math.atan2(y4 - y3, x4 - x3) - Math.atan2(y3 - y2, x3 - x2));\n        if (da1 >= pi)\n          da1 = 2 * pi - da1;\n        if (da1 < mAngleTolerance) {\n          points.push(x2, y2);\n          points.push(x3, y3);\n          return;\n        }\n        if (mCuspLimit !== 0) {\n          if (da1 > mCuspLimit) {\n            points.push(x3, y3);\n            return;\n          }\n        }\n      }\n    } else {\n      dx = x1234 - (x1 + x4) / 2;\n      dy = y1234 - (y1 + y4) / 2;\n      if (dx * dx + dy * dy <= distanceTolerance) {\n        points.push(x1234, y1234);\n        return;\n      }\n    }\n  }\n  recursive(x1, y1, x12, y12, x123, y123, x1234, y1234, points, distanceTolerance, level + 1);\n  recursive(x1234, y1234, x234, y234, x34, y34, x4, y4, points, distanceTolerance, level + 1);\n}\n\nexport { buildAdaptiveBezier };\n//# sourceMappingURL=buildAdaptiveBezier.mjs.map\n","import { GraphicsContextSystem } from '../GraphicsContextSystem.mjs';\n\n\"use strict\";\nconst RECURSION_LIMIT = 8;\nconst FLT_EPSILON = 11920929e-14;\nconst PATH_DISTANCE_EPSILON = 1;\nconst curveAngleToleranceEpsilon = 0.01;\nconst mAngleTolerance = 0;\nfunction buildAdaptiveQuadratic(points, sX, sY, cp1x, cp1y, eX, eY, smoothness) {\n  const scale = 1;\n  const smoothing = Math.min(\n    0.99,\n    // a value of 1.0 actually inverts smoothing, so we cap it at 0.99\n    Math.max(0, smoothness ?? GraphicsContextSystem.defaultOptions.bezierSmoothness)\n  );\n  let distanceTolerance = (PATH_DISTANCE_EPSILON - smoothing) / scale;\n  distanceTolerance *= distanceTolerance;\n  begin(sX, sY, cp1x, cp1y, eX, eY, points, distanceTolerance);\n  return points;\n}\nfunction begin(sX, sY, cp1x, cp1y, eX, eY, points, distanceTolerance) {\n  recursive(points, sX, sY, cp1x, cp1y, eX, eY, distanceTolerance, 0);\n  points.push(eX, eY);\n}\nfunction recursive(points, x1, y1, x2, y2, x3, y3, distanceTolerance, level) {\n  if (level > RECURSION_LIMIT) {\n    return;\n  }\n  const pi = Math.PI;\n  const x12 = (x1 + x2) / 2;\n  const y12 = (y1 + y2) / 2;\n  const x23 = (x2 + x3) / 2;\n  const y23 = (y2 + y3) / 2;\n  const x123 = (x12 + x23) / 2;\n  const y123 = (y12 + y23) / 2;\n  let dx = x3 - x1;\n  let dy = y3 - y1;\n  const d = Math.abs((x2 - x3) * dy - (y2 - y3) * dx);\n  if (d > FLT_EPSILON) {\n    if (d * d <= distanceTolerance * (dx * dx + dy * dy)) {\n      if (mAngleTolerance < curveAngleToleranceEpsilon) {\n        points.push(x123, y123);\n        return;\n      }\n      let da = Math.abs(Math.atan2(y3 - y2, x3 - x2) - Math.atan2(y2 - y1, x2 - x1));\n      if (da >= pi)\n        da = 2 * pi - da;\n      if (da < mAngleTolerance) {\n        points.push(x123, y123);\n        return;\n      }\n    }\n  } else {\n    dx = x123 - (x1 + x3) / 2;\n    dy = y123 - (y1 + y3) / 2;\n    if (dx * dx + dy * dy <= distanceTolerance) {\n      points.push(x123, y123);\n      return;\n    }\n  }\n  recursive(points, x1, y1, x12, y12, x123, y123, distanceTolerance, level + 1);\n  recursive(points, x123, y123, x23, y23, x3, y3, distanceTolerance, level + 1);\n}\n\nexport { buildAdaptiveQuadratic };\n//# sourceMappingURL=buildAdaptiveQuadratic.mjs.map\n","\"use strict\";\nfunction buildArc(points, x, y, radius, start, end, clockwise, steps) {\n  let dist = Math.abs(start - end);\n  if (!clockwise && start > end) {\n    dist = 2 * Math.PI - dist;\n  } else if (clockwise && end > start) {\n    dist = 2 * Math.PI - dist;\n  }\n  steps || (steps = Math.max(6, Math.floor(6 * Math.pow(radius, 1 / 3) * (dist / Math.PI))));\n  steps = Math.max(steps, 3);\n  let f = dist / steps;\n  let t = start;\n  f *= clockwise ? -1 : 1;\n  for (let i = 0; i < steps + 1; i++) {\n    const cs = Math.cos(t);\n    const sn = Math.sin(t);\n    const nx = x + cs * radius;\n    const ny = y + sn * radius;\n    points.push(nx, ny);\n    t += f;\n  }\n}\n\nexport { buildArc };\n//# sourceMappingURL=buildArc.mjs.map\n","import { buildArc } from './buildArc.mjs';\n\n\"use strict\";\nfunction buildArcTo(points, x1, y1, x2, y2, radius) {\n  const fromX = points[points.length - 2];\n  const fromY = points[points.length - 1];\n  const a1 = fromY - y1;\n  const b1 = fromX - x1;\n  const a2 = y2 - y1;\n  const b2 = x2 - x1;\n  const mm = Math.abs(a1 * b2 - b1 * a2);\n  if (mm < 1e-8 || radius === 0) {\n    if (points[points.length - 2] !== x1 || points[points.length - 1] !== y1) {\n      points.push(x1, y1);\n    }\n    return;\n  }\n  const dd = a1 * a1 + b1 * b1;\n  const cc = a2 * a2 + b2 * b2;\n  const tt = a1 * a2 + b1 * b2;\n  const k1 = radius * Math.sqrt(dd) / mm;\n  const k2 = radius * Math.sqrt(cc) / mm;\n  const j1 = k1 * tt / dd;\n  const j2 = k2 * tt / cc;\n  const cx = k1 * b2 + k2 * b1;\n  const cy = k1 * a2 + k2 * a1;\n  const px = b1 * (k2 + j1);\n  const py = a1 * (k2 + j1);\n  const qx = b2 * (k1 + j2);\n  const qy = a2 * (k1 + j2);\n  const startAngle = Math.atan2(py - cy, px - cx);\n  const endAngle = Math.atan2(qy - cy, qx - cx);\n  buildArc(\n    points,\n    cx + x1,\n    cy + y1,\n    radius,\n    startAngle,\n    endAngle,\n    b1 * a2 > b2 * a1\n  );\n}\n\nexport { buildArcTo };\n//# sourceMappingURL=buildArcTo.mjs.map\n","import { buildAdaptiveBezier } from './buildAdaptiveBezier.mjs';\n\n\"use strict\";\nconst TAU = Math.PI * 2;\nconst out = {\n  centerX: 0,\n  centerY: 0,\n  ang1: 0,\n  ang2: 0\n};\nconst mapToEllipse = ({ x, y }, rx, ry, cosPhi, sinPhi, centerX, centerY, out2) => {\n  x *= rx;\n  y *= ry;\n  const xp = cosPhi * x - sinPhi * y;\n  const yp = sinPhi * x + cosPhi * y;\n  out2.x = xp + centerX;\n  out2.y = yp + centerY;\n  return out2;\n};\nfunction approxUnitArc(ang1, ang2) {\n  const a1 = ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\n  const a = ang2 === 1.5707963267948966 ? 0.551915024494 : a1;\n  const x1 = Math.cos(ang1);\n  const y1 = Math.sin(ang1);\n  const x2 = Math.cos(ang1 + ang2);\n  const y2 = Math.sin(ang1 + ang2);\n  return [\n    {\n      x: x1 - y1 * a,\n      y: y1 + x1 * a\n    },\n    {\n      x: x2 + y2 * a,\n      y: y2 - x2 * a\n    },\n    {\n      x: x2,\n      y: y2\n    }\n  ];\n}\nconst vectorAngle = (ux, uy, vx, vy) => {\n  const sign = ux * vy - uy * vx < 0 ? -1 : 1;\n  let dot = ux * vx + uy * vy;\n  if (dot > 1) {\n    dot = 1;\n  }\n  if (dot < -1) {\n    dot = -1;\n  }\n  return sign * Math.acos(dot);\n};\nconst getArcCenter = (px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinPhi, cosPhi, pxp, pyp, out2) => {\n  const rxSq = Math.pow(rx, 2);\n  const rySq = Math.pow(ry, 2);\n  const pxpSq = Math.pow(pxp, 2);\n  const pypSq = Math.pow(pyp, 2);\n  let radicant = rxSq * rySq - rxSq * pypSq - rySq * pxpSq;\n  if (radicant < 0) {\n    radicant = 0;\n  }\n  radicant /= rxSq * pypSq + rySq * pxpSq;\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n  const centerXp = radicant * rx / ry * pyp;\n  const centerYp = radicant * -ry / rx * pxp;\n  const centerX = cosPhi * centerXp - sinPhi * centerYp + (px + cx) / 2;\n  const centerY = sinPhi * centerXp + cosPhi * centerYp + (py + cy) / 2;\n  const vx1 = (pxp - centerXp) / rx;\n  const vy1 = (pyp - centerYp) / ry;\n  const vx2 = (-pxp - centerXp) / rx;\n  const vy2 = (-pyp - centerYp) / ry;\n  const ang1 = vectorAngle(1, 0, vx1, vy1);\n  let ang2 = vectorAngle(vx1, vy1, vx2, vy2);\n  if (sweepFlag === 0 && ang2 > 0) {\n    ang2 -= TAU;\n  }\n  if (sweepFlag === 1 && ang2 < 0) {\n    ang2 += TAU;\n  }\n  out2.centerX = centerX;\n  out2.centerY = centerY;\n  out2.ang1 = ang1;\n  out2.ang2 = ang2;\n};\nfunction buildArcToSvg(points, px, py, cx, cy, rx, ry, xAxisRotation = 0, largeArcFlag = 0, sweepFlag = 0) {\n  if (rx === 0 || ry === 0) {\n    return;\n  }\n  const sinPhi = Math.sin(xAxisRotation * TAU / 360);\n  const cosPhi = Math.cos(xAxisRotation * TAU / 360);\n  const pxp = cosPhi * (px - cx) / 2 + sinPhi * (py - cy) / 2;\n  const pyp = -sinPhi * (px - cx) / 2 + cosPhi * (py - cy) / 2;\n  if (pxp === 0 && pyp === 0) {\n    return;\n  }\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  const lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n  getArcCenter(\n    px,\n    py,\n    cx,\n    cy,\n    rx,\n    ry,\n    largeArcFlag,\n    sweepFlag,\n    sinPhi,\n    cosPhi,\n    pxp,\n    pyp,\n    out\n  );\n  let { ang1, ang2 } = out;\n  const { centerX, centerY } = out;\n  let ratio = Math.abs(ang2) / (TAU / 4);\n  if (Math.abs(1 - ratio) < 1e-7) {\n    ratio = 1;\n  }\n  const segments = Math.max(Math.ceil(ratio), 1);\n  ang2 /= segments;\n  let lastX = points[points.length - 2];\n  let lastY = points[points.length - 1];\n  const outCurvePoint = { x: 0, y: 0 };\n  for (let i = 0; i < segments; i++) {\n    const curve = approxUnitArc(ang1, ang2);\n    const { x: x1, y: y1 } = mapToEllipse(curve[0], rx, ry, cosPhi, sinPhi, centerX, centerY, outCurvePoint);\n    const { x: x2, y: y2 } = mapToEllipse(curve[1], rx, ry, cosPhi, sinPhi, centerX, centerY, outCurvePoint);\n    const { x, y } = mapToEllipse(curve[2], rx, ry, cosPhi, sinPhi, centerX, centerY, outCurvePoint);\n    buildAdaptiveBezier(\n      points,\n      lastX,\n      lastY,\n      x1,\n      y1,\n      x2,\n      y2,\n      x,\n      y\n    );\n    lastX = x;\n    lastY = y;\n    ang1 += ang2;\n  }\n}\n\nexport { buildArcToSvg };\n//# sourceMappingURL=buildArcToSvg.mjs.map\n","\"use strict\";\nfunction roundedShapeArc(g, points, radius) {\n  const vecFrom = (p, pp) => {\n    const x = pp.x - p.x;\n    const y = pp.y - p.y;\n    const len = Math.sqrt(x * x + y * y);\n    const nx = x / len;\n    const ny = y / len;\n    return { len, nx, ny };\n  };\n  const sharpCorner = (i, p) => {\n    if (i === 0) {\n      g.moveTo(p.x, p.y);\n    } else {\n      g.lineTo(p.x, p.y);\n    }\n  };\n  let p1 = points[points.length - 1];\n  for (let i = 0; i < points.length; i++) {\n    const p2 = points[i % points.length];\n    const pRadius = p2.radius ?? radius;\n    if (pRadius <= 0) {\n      sharpCorner(i, p2);\n      p1 = p2;\n      continue;\n    }\n    const p3 = points[(i + 1) % points.length];\n    const v1 = vecFrom(p2, p1);\n    const v2 = vecFrom(p2, p3);\n    if (v1.len < 1e-4 || v2.len < 1e-4) {\n      sharpCorner(i, p2);\n      p1 = p2;\n      continue;\n    }\n    let angle = Math.asin(v1.nx * v2.ny - v1.ny * v2.nx);\n    let radDirection = 1;\n    let drawDirection = false;\n    if (v1.nx * v2.nx - v1.ny * -v2.ny < 0) {\n      if (angle < 0) {\n        angle = Math.PI + angle;\n      } else {\n        angle = Math.PI - angle;\n        radDirection = -1;\n        drawDirection = true;\n      }\n    } else if (angle > 0) {\n      radDirection = -1;\n      drawDirection = true;\n    }\n    const halfAngle = angle / 2;\n    let cRadius;\n    let lenOut = Math.abs(\n      Math.cos(halfAngle) * pRadius / Math.sin(halfAngle)\n    );\n    if (lenOut > Math.min(v1.len / 2, v2.len / 2)) {\n      lenOut = Math.min(v1.len / 2, v2.len / 2);\n      cRadius = Math.abs(lenOut * Math.sin(halfAngle) / Math.cos(halfAngle));\n    } else {\n      cRadius = pRadius;\n    }\n    const cX = p2.x + v2.nx * lenOut + -v2.ny * cRadius * radDirection;\n    const cY = p2.y + v2.ny * lenOut + v2.nx * cRadius * radDirection;\n    const startAngle = Math.atan2(v1.ny, v1.nx) + Math.PI / 2 * radDirection;\n    const endAngle = Math.atan2(v2.ny, v2.nx) - Math.PI / 2 * radDirection;\n    if (i === 0) {\n      g.moveTo(\n        cX + Math.cos(startAngle) * cRadius,\n        cY + Math.sin(startAngle) * cRadius\n      );\n    }\n    g.arc(cX, cY, cRadius, startAngle, endAngle, drawDirection);\n    p1 = p2;\n  }\n}\nfunction roundedShapeQuadraticCurve(g, points, radius, smoothness) {\n  const distance = (p1, p2) => Math.sqrt((p1.x - p2.x) ** 2 + (p1.y - p2.y) ** 2);\n  const pointLerp = (p1, p2, t) => ({\n    x: p1.x + (p2.x - p1.x) * t,\n    y: p1.y + (p2.y - p1.y) * t\n  });\n  const numPoints = points.length;\n  for (let i = 0; i < numPoints; i++) {\n    const thisPoint = points[(i + 1) % numPoints];\n    const pRadius = thisPoint.radius ?? radius;\n    if (pRadius <= 0) {\n      if (i === 0) {\n        g.moveTo(thisPoint.x, thisPoint.y);\n      } else {\n        g.lineTo(thisPoint.x, thisPoint.y);\n      }\n      continue;\n    }\n    const lastPoint = points[i];\n    const nextPoint = points[(i + 2) % numPoints];\n    const lastEdgeLength = distance(lastPoint, thisPoint);\n    let start;\n    if (lastEdgeLength < 1e-4) {\n      start = thisPoint;\n    } else {\n      const lastOffsetDistance = Math.min(lastEdgeLength / 2, pRadius);\n      start = pointLerp(\n        thisPoint,\n        lastPoint,\n        lastOffsetDistance / lastEdgeLength\n      );\n    }\n    const nextEdgeLength = distance(nextPoint, thisPoint);\n    let end;\n    if (nextEdgeLength < 1e-4) {\n      end = thisPoint;\n    } else {\n      const nextOffsetDistance = Math.min(nextEdgeLength / 2, pRadius);\n      end = pointLerp(\n        thisPoint,\n        nextPoint,\n        nextOffsetDistance / nextEdgeLength\n      );\n    }\n    if (i === 0) {\n      g.moveTo(start.x, start.y);\n    } else {\n      g.lineTo(start.x, start.y);\n    }\n    g.quadraticCurveTo(thisPoint.x, thisPoint.y, end.x, end.y, smoothness);\n  }\n}\n\nexport { roundedShapeArc, roundedShapeQuadraticCurve };\n//# sourceMappingURL=roundShape.mjs.map\n","import { Circle } from '../../../../maths/shapes/Circle.mjs';\nimport { Ellipse } from '../../../../maths/shapes/Ellipse.mjs';\nimport { Polygon } from '../../../../maths/shapes/Polygon.mjs';\nimport { Rectangle } from '../../../../maths/shapes/Rectangle.mjs';\nimport { RoundedRectangle } from '../../../../maths/shapes/RoundedRectangle.mjs';\nimport { Bounds } from '../../../container/bounds/Bounds.mjs';\nimport { buildAdaptiveBezier } from '../buildCommands/buildAdaptiveBezier.mjs';\nimport { buildAdaptiveQuadratic } from '../buildCommands/buildAdaptiveQuadratic.mjs';\nimport { buildArc } from '../buildCommands/buildArc.mjs';\nimport { buildArcTo } from '../buildCommands/buildArcTo.mjs';\nimport { buildArcToSvg } from '../buildCommands/buildArcToSvg.mjs';\nimport { roundedShapeQuadraticCurve, roundedShapeArc } from './roundShape.mjs';\n\n\"use strict\";\nconst tempRectangle = new Rectangle();\nclass ShapePath {\n  constructor(graphicsPath2D) {\n    /** The list of shape primitives that make up the path. */\n    this.shapePrimitives = [];\n    this._currentPoly = null;\n    this._bounds = new Bounds();\n    this._graphicsPath2D = graphicsPath2D;\n    this.signed = graphicsPath2D.checkForHoles;\n  }\n  /**\n   * Sets the starting point for a new sub-path. Any subsequent drawing commands are considered part of this path.\n   * @param x - The x-coordinate for the starting point.\n   * @param y - The y-coordinate for the starting point.\n   * @returns The instance of the current object for chaining.\n   */\n  moveTo(x, y) {\n    this.startPoly(x, y);\n    return this;\n  }\n  /**\n   * Connects the current point to a new point with a straight line. This method updates the current path.\n   * @param x - The x-coordinate of the new point to connect to.\n   * @param y - The y-coordinate of the new point to connect to.\n   * @returns The instance of the current object for chaining.\n   */\n  lineTo(x, y) {\n    this._ensurePoly();\n    const points = this._currentPoly.points;\n    const fromX = points[points.length - 2];\n    const fromY = points[points.length - 1];\n    if (fromX !== x || fromY !== y) {\n      points.push(x, y);\n    }\n    return this;\n  }\n  /**\n   * Adds an arc to the path. The arc is centered at (x, y)\n   *  position with radius `radius` starting at `startAngle` and ending at `endAngle`.\n   * @param x - The x-coordinate of the arc's center.\n   * @param y - The y-coordinate of the arc's center.\n   * @param radius - The radius of the arc.\n   * @param startAngle - The starting angle of the arc, in radians.\n   * @param endAngle - The ending angle of the arc, in radians.\n   * @param counterclockwise - Specifies whether the arc should be drawn in the anticlockwise direction. False by default.\n   * @returns The instance of the current object for chaining.\n   */\n  arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n    this._ensurePoly(false);\n    const points = this._currentPoly.points;\n    buildArc(points, x, y, radius, startAngle, endAngle, counterclockwise);\n    return this;\n  }\n  /**\n   * Adds an arc to the path with the arc tangent to the line joining two specified points.\n   * The arc radius is specified by `radius`.\n   * @param x1 - The x-coordinate of the first point.\n   * @param y1 - The y-coordinate of the first point.\n   * @param x2 - The x-coordinate of the second point.\n   * @param y2 - The y-coordinate of the second point.\n   * @param radius - The radius of the arc.\n   * @returns The instance of the current object for chaining.\n   */\n  arcTo(x1, y1, x2, y2, radius) {\n    this._ensurePoly();\n    const points = this._currentPoly.points;\n    buildArcTo(points, x1, y1, x2, y2, radius);\n    return this;\n  }\n  /**\n   * Adds an SVG-style arc to the path, allowing for elliptical arcs based on the SVG spec.\n   * @param rx - The x-radius of the ellipse.\n   * @param ry - The y-radius of the ellipse.\n   * @param xAxisRotation - The rotation of the ellipse's x-axis relative\n   * to the x-axis of the coordinate system, in degrees.\n   * @param largeArcFlag - Determines if the arc should be greater than or less than 180 degrees.\n   * @param sweepFlag - Determines if the arc should be swept in a positive angle direction.\n   * @param x - The x-coordinate of the arc's end point.\n   * @param y - The y-coordinate of the arc's end point.\n   * @returns The instance of the current object for chaining.\n   */\n  arcToSvg(rx, ry, xAxisRotation, largeArcFlag, sweepFlag, x, y) {\n    const points = this._currentPoly.points;\n    buildArcToSvg(\n      points,\n      this._currentPoly.lastX,\n      this._currentPoly.lastY,\n      x,\n      y,\n      rx,\n      ry,\n      xAxisRotation,\n      largeArcFlag,\n      sweepFlag\n    );\n    return this;\n  }\n  /**\n   * Adds a cubic Bezier curve to the path.\n   * It requires three points: the first two are control points and the third one is the end point.\n   * The starting point is the last point in the current path.\n   * @param cp1x - The x-coordinate of the first control point.\n   * @param cp1y - The y-coordinate of the first control point.\n   * @param cp2x - The x-coordinate of the second control point.\n   * @param cp2y - The y-coordinate of the second control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y, smoothness) {\n    this._ensurePoly();\n    const currentPoly = this._currentPoly;\n    buildAdaptiveBezier(\n      this._currentPoly.points,\n      currentPoly.lastX,\n      currentPoly.lastY,\n      cp1x,\n      cp1y,\n      cp2x,\n      cp2y,\n      x,\n      y,\n      smoothness\n    );\n    return this;\n  }\n  /**\n   * Adds a quadratic curve to the path. It requires two points: the control point and the end point.\n   * The starting point is the last point in the current path.\n   * @param cp1x - The x-coordinate of the control point.\n   * @param cp1y - The y-coordinate of the control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothing - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  quadraticCurveTo(cp1x, cp1y, x, y, smoothing) {\n    this._ensurePoly();\n    const currentPoly = this._currentPoly;\n    buildAdaptiveQuadratic(\n      this._currentPoly.points,\n      currentPoly.lastX,\n      currentPoly.lastY,\n      cp1x,\n      cp1y,\n      x,\n      y,\n      smoothing\n    );\n    return this;\n  }\n  /**\n   * Closes the current path by drawing a straight line back to the start.\n   * If the shape is already closed or there are no points in the path, this method does nothing.\n   * @returns The instance of the current object for chaining.\n   */\n  closePath() {\n    this.endPoly(true);\n    return this;\n  }\n  /**\n   * Adds another path to the current path. This method allows for the combination of multiple paths into one.\n   * @param path - The `GraphicsPath` object representing the path to add.\n   * @param transform - An optional `Matrix` object to apply a transformation to the path before adding it.\n   * @returns The instance of the current object for chaining.\n   */\n  addPath(path, transform) {\n    this.endPoly();\n    if (transform && !transform.isIdentity()) {\n      path = path.clone(true);\n      path.transform(transform);\n    }\n    const shapePrimitives = this.shapePrimitives;\n    const start = shapePrimitives.length;\n    for (let i = 0; i < path.instructions.length; i++) {\n      const instruction = path.instructions[i];\n      this[instruction.action](...instruction.data);\n    }\n    if (path.checkForHoles && shapePrimitives.length - start > 1) {\n      let mainShape = null;\n      for (let i = start; i < shapePrimitives.length; i++) {\n        const shapePrimitive = shapePrimitives[i];\n        if (shapePrimitive.shape.type === \"polygon\") {\n          const polygon = shapePrimitive.shape;\n          const mainPolygon = mainShape?.shape;\n          if (mainPolygon && mainPolygon.containsPolygon(polygon)) {\n            mainShape.holes || (mainShape.holes = []);\n            mainShape.holes.push(shapePrimitive);\n            shapePrimitives.copyWithin(i, i + 1);\n            shapePrimitives.length--;\n            i--;\n          } else {\n            mainShape = shapePrimitive;\n          }\n        }\n      }\n    }\n    return this;\n  }\n  /**\n   * Finalizes the drawing of the current path. Optionally, it can close the path.\n   * @param closePath - A boolean indicating whether to close the path after finishing. False by default.\n   */\n  finish(closePath = false) {\n    this.endPoly(closePath);\n  }\n  /**\n   * Draws a rectangle shape. This method adds a new rectangle path to the current drawing.\n   * @param x - The x-coordinate of the top-left corner of the rectangle.\n   * @param y - The y-coordinate of the top-left corner of the rectangle.\n   * @param w - The width of the rectangle.\n   * @param h - The height of the rectangle.\n   * @param transform - An optional `Matrix` object to apply a transformation to the rectangle.\n   * @returns The instance of the current object for chaining.\n   */\n  rect(x, y, w, h, transform) {\n    this.drawShape(new Rectangle(x, y, w, h), transform);\n    return this;\n  }\n  /**\n   * Draws a circle shape. This method adds a new circle path to the current drawing.\n   * @param x - The x-coordinate of the center of the circle.\n   * @param y - The y-coordinate of the center of the circle.\n   * @param radius - The radius of the circle.\n   * @param transform - An optional `Matrix` object to apply a transformation to the circle.\n   * @returns The instance of the current object for chaining.\n   */\n  circle(x, y, radius, transform) {\n    this.drawShape(new Circle(x, y, radius), transform);\n    return this;\n  }\n  /**\n   * Draws a polygon shape. This method allows for the creation of complex polygons by specifying a sequence of points.\n   * @param points - An array of numbers, or or an array of PointData objects eg [{x,y}, {x,y}, {x,y}]\n   * representing the x and y coordinates of the polygon's vertices, in sequence.\n   * @param close - A boolean indicating whether to close the polygon path. True by default.\n   * @param transform - An optional `Matrix` object to apply a transformation to the polygon.\n   * @returns The instance of the current object for chaining.\n   */\n  poly(points, close, transform) {\n    const polygon = new Polygon(points);\n    polygon.closePath = close;\n    this.drawShape(polygon, transform);\n    return this;\n  }\n  /**\n   * Draws a regular polygon with a specified number of sides. All sides and angles are equal.\n   * @param x - The x-coordinate of the center of the polygon.\n   * @param y - The y-coordinate of the center of the polygon.\n   * @param radius - The radius of the circumscribed circle of the polygon.\n   * @param sides - The number of sides of the polygon. Must be 3 or more.\n   * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n   * @param transform - An optional `Matrix` object to apply a transformation to the polygon.\n   * @returns The instance of the current object for chaining.\n   */\n  regularPoly(x, y, radius, sides, rotation = 0, transform) {\n    sides = Math.max(sides | 0, 3);\n    const startAngle = -1 * Math.PI / 2 + rotation;\n    const delta = Math.PI * 2 / sides;\n    const polygon = [];\n    for (let i = 0; i < sides; i++) {\n      const angle = startAngle - i * delta;\n      polygon.push(\n        x + radius * Math.cos(angle),\n        y + radius * Math.sin(angle)\n      );\n    }\n    this.poly(polygon, true, transform);\n    return this;\n  }\n  /**\n   * Draws a polygon with rounded corners.\n   * Similar to `regularPoly` but with the ability to round the corners of the polygon.\n   * @param x - The x-coordinate of the center of the polygon.\n   * @param y - The y-coordinate of the center of the polygon.\n   * @param radius - The radius of the circumscribed circle of the polygon.\n   * @param sides - The number of sides of the polygon. Must be 3 or more.\n   * @param corner - The radius of the rounding of the corners.\n   * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n   * @param smoothness - Optional parameter to adjust the smoothness of the rounding.\n   * @returns The instance of the current object for chaining.\n   */\n  roundPoly(x, y, radius, sides, corner, rotation = 0, smoothness) {\n    sides = Math.max(sides | 0, 3);\n    if (corner <= 0) {\n      return this.regularPoly(x, y, radius, sides, rotation);\n    }\n    const sideLength = radius * Math.sin(Math.PI / sides) - 1e-3;\n    corner = Math.min(corner, sideLength);\n    const startAngle = -1 * Math.PI / 2 + rotation;\n    const delta = Math.PI * 2 / sides;\n    const internalAngle = (sides - 2) * Math.PI / sides / 2;\n    for (let i = 0; i < sides; i++) {\n      const angle = i * delta + startAngle;\n      const x0 = x + radius * Math.cos(angle);\n      const y0 = y + radius * Math.sin(angle);\n      const a1 = angle + Math.PI + internalAngle;\n      const a2 = angle - Math.PI - internalAngle;\n      const x1 = x0 + corner * Math.cos(a1);\n      const y1 = y0 + corner * Math.sin(a1);\n      const x3 = x0 + corner * Math.cos(a2);\n      const y3 = y0 + corner * Math.sin(a2);\n      if (i === 0) {\n        this.moveTo(x1, y1);\n      } else {\n        this.lineTo(x1, y1);\n      }\n      this.quadraticCurveTo(x0, y0, x3, y3, smoothness);\n    }\n    return this.closePath();\n  }\n  /**\n   * Draws a shape with rounded corners. This function supports custom radius for each corner of the shape.\n   * Optionally, corners can be rounded using a quadratic curve instead of an arc, providing a different aesthetic.\n   * @param points - An array of `RoundedPoint` representing the corners of the shape to draw.\n   * A minimum of 3 points is required.\n   * @param radius - The default radius for the corners.\n   * This radius is applied to all corners unless overridden in `points`.\n   * @param useQuadratic - If set to true, rounded corners are drawn using a quadraticCurve\n   *  method instead of an arc method. Defaults to false.\n   * @param smoothness - Specifies the smoothness of the curve when `useQuadratic` is true.\n   * Higher values make the curve smoother.\n   * @returns The instance of the current object for chaining.\n   */\n  roundShape(points, radius, useQuadratic = false, smoothness) {\n    if (points.length < 3) {\n      return this;\n    }\n    if (useQuadratic) {\n      roundedShapeQuadraticCurve(this, points, radius, smoothness);\n    } else {\n      roundedShapeArc(this, points, radius);\n    }\n    return this.closePath();\n  }\n  /**\n   * Draw Rectangle with fillet corners. This is much like rounded rectangle\n   * however it support negative numbers as well for the corner radius.\n   * @param x - Upper left corner of rect\n   * @param y - Upper right corner of rect\n   * @param width - Width of rect\n   * @param height - Height of rect\n   * @param fillet - accept negative or positive values\n   */\n  filletRect(x, y, width, height, fillet) {\n    if (fillet === 0) {\n      return this.rect(x, y, width, height);\n    }\n    const maxFillet = Math.min(width, height) / 2;\n    const inset = Math.min(maxFillet, Math.max(-maxFillet, fillet));\n    const right = x + width;\n    const bottom = y + height;\n    const dir = inset < 0 ? -inset : 0;\n    const size = Math.abs(inset);\n    return this.moveTo(x, y + size).arcTo(x + dir, y + dir, x + size, y, size).lineTo(right - size, y).arcTo(right - dir, y + dir, right, y + size, size).lineTo(right, bottom - size).arcTo(right - dir, bottom - dir, x + width - size, bottom, size).lineTo(x + size, bottom).arcTo(x + dir, bottom - dir, x, bottom - size, size).closePath();\n  }\n  /**\n   * Draw Rectangle with chamfer corners. These are angled corners.\n   * @param x - Upper left corner of rect\n   * @param y - Upper right corner of rect\n   * @param width - Width of rect\n   * @param height - Height of rect\n   * @param chamfer - non-zero real number, size of corner cutout\n   * @param transform\n   */\n  chamferRect(x, y, width, height, chamfer, transform) {\n    if (chamfer <= 0) {\n      return this.rect(x, y, width, height);\n    }\n    const inset = Math.min(chamfer, Math.min(width, height) / 2);\n    const right = x + width;\n    const bottom = y + height;\n    const points = [\n      x + inset,\n      y,\n      right - inset,\n      y,\n      right,\n      y + inset,\n      right,\n      bottom - inset,\n      right - inset,\n      bottom,\n      x + inset,\n      bottom,\n      x,\n      bottom - inset,\n      x,\n      y + inset\n    ];\n    for (let i = points.length - 1; i >= 2; i -= 2) {\n      if (points[i] === points[i - 2] && points[i - 1] === points[i - 3]) {\n        points.splice(i - 1, 2);\n      }\n    }\n    return this.poly(points, true, transform);\n  }\n  /**\n   * Draws an ellipse at the specified location and with the given x and y radii.\n   * An optional transformation can be applied, allowing for rotation, scaling, and translation.\n   * @param x - The x-coordinate of the center of the ellipse.\n   * @param y - The y-coordinate of the center of the ellipse.\n   * @param radiusX - The horizontal radius of the ellipse.\n   * @param radiusY - The vertical radius of the ellipse.\n   * @param transform - An optional `Matrix` object to apply a transformation to the ellipse. This can include rotations.\n   * @returns The instance of the current object for chaining.\n   */\n  ellipse(x, y, radiusX, radiusY, transform) {\n    this.drawShape(new Ellipse(x, y, radiusX, radiusY), transform);\n    return this;\n  }\n  /**\n   * Draws a rectangle with rounded corners.\n   * The corner radius can be specified to determine how rounded the corners should be.\n   * An optional transformation can be applied, which allows for rotation, scaling, and translation of the rectangle.\n   * @param x - The x-coordinate of the top-left corner of the rectangle.\n   * @param y - The y-coordinate of the top-left corner of the rectangle.\n   * @param w - The width of the rectangle.\n   * @param h - The height of the rectangle.\n   * @param radius - The radius of the rectangle's corners. If not specified, corners will be sharp.\n   * @param transform - An optional `Matrix` object to apply a transformation to the rectangle.\n   * @returns The instance of the current object for chaining.\n   */\n  roundRect(x, y, w, h, radius, transform) {\n    this.drawShape(new RoundedRectangle(x, y, w, h, radius), transform);\n    return this;\n  }\n  /**\n   * Draws a given shape on the canvas.\n   * This is a generic method that can draw any type of shape specified by the `ShapePrimitive` parameter.\n   * An optional transformation matrix can be applied to the shape, allowing for complex transformations.\n   * @param shape - The shape to draw, defined as a `ShapePrimitive` object.\n   * @param matrix - An optional `Matrix` for transforming the shape. This can include rotations,\n   * scaling, and translations.\n   * @returns The instance of the current object for chaining.\n   */\n  drawShape(shape, matrix) {\n    this.endPoly();\n    this.shapePrimitives.push({ shape, transform: matrix });\n    return this;\n  }\n  /**\n   * Starts a new polygon path from the specified starting point.\n   * This method initializes a new polygon or ends the current one if it exists.\n   * @param x - The x-coordinate of the starting point of the new polygon.\n   * @param y - The y-coordinate of the starting point of the new polygon.\n   * @returns The instance of the current object for chaining.\n   */\n  startPoly(x, y) {\n    let currentPoly = this._currentPoly;\n    if (currentPoly) {\n      this.endPoly();\n    }\n    currentPoly = new Polygon();\n    currentPoly.points.push(x, y);\n    this._currentPoly = currentPoly;\n    return this;\n  }\n  /**\n   * Ends the current polygon path. If `closePath` is set to true,\n   * the path is closed by connecting the last point to the first one.\n   * This method finalizes the current polygon and prepares it for drawing or adding to the shape primitives.\n   * @param closePath - A boolean indicating whether to close the polygon by connecting the last point\n   *  back to the starting point. False by default.\n   * @returns The instance of the current object for chaining.\n   */\n  endPoly(closePath = false) {\n    const shape = this._currentPoly;\n    if (shape && shape.points.length > 2) {\n      shape.closePath = closePath;\n      this.shapePrimitives.push({ shape });\n    }\n    this._currentPoly = null;\n    return this;\n  }\n  _ensurePoly(start = true) {\n    if (this._currentPoly)\n      return;\n    this._currentPoly = new Polygon();\n    if (start) {\n      const lastShape = this.shapePrimitives[this.shapePrimitives.length - 1];\n      if (lastShape) {\n        let lx = lastShape.shape.x;\n        let ly = lastShape.shape.y;\n        if (lastShape.transform && !lastShape.transform.isIdentity()) {\n          const t = lastShape.transform;\n          const tempX = lx;\n          lx = t.a * lx + t.c * ly + t.tx;\n          ly = t.b * tempX + t.d * ly + t.ty;\n        }\n        this._currentPoly.points.push(lx, ly);\n      } else {\n        this._currentPoly.points.push(0, 0);\n      }\n    }\n  }\n  /** Builds the path. */\n  buildPath() {\n    const path = this._graphicsPath2D;\n    this.shapePrimitives.length = 0;\n    this._currentPoly = null;\n    for (let i = 0; i < path.instructions.length; i++) {\n      const instruction = path.instructions[i];\n      this[instruction.action](...instruction.data);\n    }\n    this.finish();\n  }\n  /** Gets the bounds of the path. */\n  get bounds() {\n    const bounds = this._bounds;\n    bounds.clear();\n    const shapePrimitives = this.shapePrimitives;\n    for (let i = 0; i < shapePrimitives.length; i++) {\n      const shapePrimitive = shapePrimitives[i];\n      const boundsRect = shapePrimitive.shape.getBounds(tempRectangle);\n      if (shapePrimitive.transform) {\n        bounds.addRect(boundsRect, shapePrimitive.transform);\n      } else {\n        bounds.addRect(boundsRect);\n      }\n    }\n    return bounds;\n  }\n}\n\nexport { ShapePath };\n//# sourceMappingURL=ShapePath.mjs.map\n","import { Point } from '../../../../maths/point/Point.mjs';\nimport { uid } from '../../../../utils/data/uid.mjs';\nimport { warn } from '../../../../utils/logging/warn.mjs';\nimport { parseSVGPath } from '../svg/parseSVGPath.mjs';\nimport { ShapePath } from './ShapePath.mjs';\n\n\"use strict\";\nclass GraphicsPath {\n  /**\n   * Creates a `GraphicsPath` instance optionally from an SVG path string or an array of `PathInstruction`.\n   * @param instructions - An SVG path string or an array of `PathInstruction` objects.\n   * @param signed\n   */\n  constructor(instructions, signed = false) {\n    this.instructions = [];\n    /** unique id for this graphics path */\n    this.uid = uid(\"graphicsPath\");\n    this._dirty = true;\n    this.checkForHoles = signed;\n    if (typeof instructions === \"string\") {\n      parseSVGPath(instructions, this);\n    } else {\n      this.instructions = instructions?.slice() ?? [];\n    }\n  }\n  /**\n   * Provides access to the internal shape path, ensuring it is up-to-date with the current instructions.\n   * @returns The `ShapePath` instance associated with this `GraphicsPath`.\n   */\n  get shapePath() {\n    if (!this._shapePath) {\n      this._shapePath = new ShapePath(this);\n    }\n    if (this._dirty) {\n      this._dirty = false;\n      this._shapePath.buildPath();\n    }\n    return this._shapePath;\n  }\n  /**\n   * Adds another `GraphicsPath` to this path, optionally applying a transformation.\n   * @param path - The `GraphicsPath` to add.\n   * @param transform - An optional transformation to apply to the added path.\n   * @returns The instance of the current object for chaining.\n   */\n  addPath(path, transform) {\n    path = path.clone();\n    this.instructions.push({ action: \"addPath\", data: [path, transform] });\n    this._dirty = true;\n    return this;\n  }\n  arc(...args) {\n    this.instructions.push({ action: \"arc\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  arcTo(...args) {\n    this.instructions.push({ action: \"arcTo\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  arcToSvg(...args) {\n    this.instructions.push({ action: \"arcToSvg\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  bezierCurveTo(...args) {\n    this.instructions.push({ action: \"bezierCurveTo\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Adds a cubic Bezier curve to the path.\n   * It requires two points: the second control point and the end point. The first control point is assumed to be\n   * The starting point is the last point in the current path.\n   * @param cp2x - The x-coordinate of the second control point.\n   * @param cp2y - The y-coordinate of the second control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  bezierCurveToShort(cp2x, cp2y, x, y, smoothness) {\n    const last = this.instructions[this.instructions.length - 1];\n    const lastPoint = this.getLastPoint(Point.shared);\n    let cp1x = 0;\n    let cp1y = 0;\n    if (!last || last.action !== \"bezierCurveTo\") {\n      cp1x = lastPoint.x;\n      cp1y = lastPoint.y;\n    } else {\n      cp1x = last.data[2];\n      cp1y = last.data[3];\n      const currentX = lastPoint.x;\n      const currentY = lastPoint.y;\n      cp1x = currentX + (currentX - cp1x);\n      cp1y = currentY + (currentY - cp1y);\n    }\n    this.instructions.push({ action: \"bezierCurveTo\", data: [cp1x, cp1y, cp2x, cp2y, x, y, smoothness] });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Closes the current path by drawing a straight line back to the start.\n   * If the shape is already closed or there are no points in the path, this method does nothing.\n   * @returns The instance of the current object for chaining.\n   */\n  closePath() {\n    this.instructions.push({ action: \"closePath\", data: [] });\n    this._dirty = true;\n    return this;\n  }\n  ellipse(...args) {\n    this.instructions.push({ action: \"ellipse\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  lineTo(...args) {\n    this.instructions.push({ action: \"lineTo\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  moveTo(...args) {\n    this.instructions.push({ action: \"moveTo\", data: args });\n    return this;\n  }\n  quadraticCurveTo(...args) {\n    this.instructions.push({ action: \"quadraticCurveTo\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Adds a quadratic curve to the path. It uses the previous point as the control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  quadraticCurveToShort(x, y, smoothness) {\n    const last = this.instructions[this.instructions.length - 1];\n    const lastPoint = this.getLastPoint(Point.shared);\n    let cpx1 = 0;\n    let cpy1 = 0;\n    if (!last || last.action !== \"quadraticCurveTo\") {\n      cpx1 = lastPoint.x;\n      cpy1 = lastPoint.y;\n    } else {\n      cpx1 = last.data[0];\n      cpy1 = last.data[1];\n      const currentX = lastPoint.x;\n      const currentY = lastPoint.y;\n      cpx1 = currentX + (currentX - cpx1);\n      cpy1 = currentY + (currentY - cpy1);\n    }\n    this.instructions.push({ action: \"quadraticCurveTo\", data: [cpx1, cpy1, x, y, smoothness] });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Draws a rectangle shape. This method adds a new rectangle path to the current drawing.\n   * @param x - The x-coordinate of the top-left corner of the rectangle.\n   * @param y - The y-coordinate of the top-left corner of the rectangle.\n   * @param w - The width of the rectangle.\n   * @param h - The height of the rectangle.\n   * @param transform - An optional `Matrix` object to apply a transformation to the rectangle.\n   * @returns The instance of the current object for chaining.\n   */\n  rect(x, y, w, h, transform) {\n    this.instructions.push({ action: \"rect\", data: [x, y, w, h, transform] });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Draws a circle shape. This method adds a new circle path to the current drawing.\n   * @param x - The x-coordinate of the center of the circle.\n   * @param y - The y-coordinate of the center of the circle.\n   * @param radius - The radius of the circle.\n   * @param transform - An optional `Matrix` object to apply a transformation to the circle.\n   * @returns The instance of the current object for chaining.\n   */\n  circle(x, y, radius, transform) {\n    this.instructions.push({ action: \"circle\", data: [x, y, radius, transform] });\n    this._dirty = true;\n    return this;\n  }\n  roundRect(...args) {\n    this.instructions.push({ action: \"roundRect\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  poly(...args) {\n    this.instructions.push({ action: \"poly\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  regularPoly(...args) {\n    this.instructions.push({ action: \"regularPoly\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  roundPoly(...args) {\n    this.instructions.push({ action: \"roundPoly\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  roundShape(...args) {\n    this.instructions.push({ action: \"roundShape\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  filletRect(...args) {\n    this.instructions.push({ action: \"filletRect\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  chamferRect(...args) {\n    this.instructions.push({ action: \"chamferRect\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Draws a star shape centered at a specified location. This method allows for the creation\n   *  of stars with a variable number of points, outer radius, optional inner radius, and rotation.\n   * The star is drawn as a closed polygon with alternating outer and inner vertices to create the star's points.\n   * An optional transformation can be applied to scale, rotate, or translate the star as needed.\n   * @param x - The x-coordinate of the center of the star.\n   * @param y - The y-coordinate of the center of the star.\n   * @param points - The number of points of the star.\n   * @param radius - The outer radius of the star (distance from the center to the outer points).\n   * @param innerRadius - Optional. The inner radius of the star\n   * (distance from the center to the inner points between the outer points).\n   * If not provided, defaults to half of the `radius`.\n   * @param rotation - Optional. The rotation of the star in radians, where 0 is aligned with the y-axis.\n   * Defaults to 0, meaning one point is directly upward.\n   * @param transform - An optional `Matrix` object to apply a transformation to the star.\n   * This can include rotations, scaling, and translations.\n   * @returns The instance of the current object for chaining further drawing commands.\n   */\n  // eslint-disable-next-line max-len\n  star(x, y, points, radius, innerRadius, rotation, transform) {\n    innerRadius || (innerRadius = radius / 2);\n    const startAngle = -1 * Math.PI / 2 + rotation;\n    const len = points * 2;\n    const delta = Math.PI * 2 / len;\n    const polygon = [];\n    for (let i = 0; i < len; i++) {\n      const r = i % 2 ? innerRadius : radius;\n      const angle = i * delta + startAngle;\n      polygon.push(\n        x + r * Math.cos(angle),\n        y + r * Math.sin(angle)\n      );\n    }\n    this.poly(polygon, true, transform);\n    return this;\n  }\n  /**\n   * Creates a copy of the current `GraphicsPath` instance. This method supports both shallow and deep cloning.\n   * A shallow clone copies the reference of the instructions array, while a deep clone creates a new array and\n   * copies each instruction individually, ensuring that modifications to the instructions of the cloned `GraphicsPath`\n   * do not affect the original `GraphicsPath` and vice versa.\n   * @param deep - A boolean flag indicating whether the clone should be deep.\n   * @returns A new `GraphicsPath` instance that is a clone of the current instance.\n   */\n  clone(deep = false) {\n    const newGraphicsPath2D = new GraphicsPath();\n    newGraphicsPath2D.checkForHoles = this.checkForHoles;\n    if (!deep) {\n      newGraphicsPath2D.instructions = this.instructions.slice();\n    } else {\n      for (let i = 0; i < this.instructions.length; i++) {\n        const instruction = this.instructions[i];\n        newGraphicsPath2D.instructions.push({ action: instruction.action, data: instruction.data.slice() });\n      }\n    }\n    return newGraphicsPath2D;\n  }\n  clear() {\n    this.instructions.length = 0;\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Applies a transformation matrix to all drawing instructions within the `GraphicsPath`.\n   * This method enables the modification of the path's geometry according to the provided\n   * transformation matrix, which can include translations, rotations, scaling, and skewing.\n   *\n   * Each drawing instruction in the path is updated to reflect the transformation,\n   * ensuring the visual representation of the path is consistent with the applied matrix.\n   *\n   * Note: The transformation is applied directly to the coordinates and control points of the drawing instructions,\n   * not to the path as a whole. This means the transformation's effects are baked into the individual instructions,\n   * allowing for fine-grained control over the path's appearance.\n   * @param matrix - A `Matrix` object representing the transformation to apply.\n   * @returns The instance of the current object for chaining further operations.\n   */\n  transform(matrix) {\n    if (matrix.isIdentity())\n      return this;\n    const a = matrix.a;\n    const b = matrix.b;\n    const c = matrix.c;\n    const d = matrix.d;\n    const tx = matrix.tx;\n    const ty = matrix.ty;\n    let x = 0;\n    let y = 0;\n    let cpx1 = 0;\n    let cpy1 = 0;\n    let cpx2 = 0;\n    let cpy2 = 0;\n    let rx = 0;\n    let ry = 0;\n    for (let i = 0; i < this.instructions.length; i++) {\n      const instruction = this.instructions[i];\n      const data = instruction.data;\n      switch (instruction.action) {\n        case \"moveTo\":\n        case \"lineTo\":\n          x = data[0];\n          y = data[1];\n          data[0] = a * x + c * y + tx;\n          data[1] = b * x + d * y + ty;\n          break;\n        case \"bezierCurveTo\":\n          cpx1 = data[0];\n          cpy1 = data[1];\n          cpx2 = data[2];\n          cpy2 = data[3];\n          x = data[4];\n          y = data[5];\n          data[0] = a * cpx1 + c * cpy1 + tx;\n          data[1] = b * cpx1 + d * cpy1 + ty;\n          data[2] = a * cpx2 + c * cpy2 + tx;\n          data[3] = b * cpx2 + d * cpy2 + ty;\n          data[4] = a * x + c * y + tx;\n          data[5] = b * x + d * y + ty;\n          break;\n        case \"quadraticCurveTo\":\n          cpx1 = data[0];\n          cpy1 = data[1];\n          x = data[2];\n          y = data[3];\n          data[0] = a * cpx1 + c * cpy1 + tx;\n          data[1] = b * cpx1 + d * cpy1 + ty;\n          data[2] = a * x + c * y + tx;\n          data[3] = b * x + d * y + ty;\n          break;\n        case \"arcToSvg\":\n          x = data[5];\n          y = data[6];\n          rx = data[0];\n          ry = data[1];\n          data[0] = a * rx + c * ry;\n          data[1] = b * rx + d * ry;\n          data[5] = a * x + c * y + tx;\n          data[6] = b * x + d * y + ty;\n          break;\n        case \"circle\":\n          data[4] = adjustTransform(data[3], matrix);\n          break;\n        case \"rect\":\n          data[4] = adjustTransform(data[4], matrix);\n          break;\n        case \"ellipse\":\n          data[8] = adjustTransform(data[8], matrix);\n          break;\n        case \"roundRect\":\n          data[5] = adjustTransform(data[5], matrix);\n          break;\n        case \"addPath\":\n          data[0].transform(matrix);\n          break;\n        case \"poly\":\n          data[2] = adjustTransform(data[2], matrix);\n          break;\n        default:\n          warn(\"unknown transform action\", instruction.action);\n          break;\n      }\n    }\n    this._dirty = true;\n    return this;\n  }\n  get bounds() {\n    return this.shapePath.bounds;\n  }\n  /**\n   * Retrieves the last point from the current drawing instructions in the `GraphicsPath`.\n   * This method is useful for operations that depend on the path's current endpoint,\n   * such as connecting subsequent shapes or paths. It supports various drawing instructions,\n   * ensuring the last point's position is accurately determined regardless of the path's complexity.\n   *\n   * If the last instruction is a `closePath`, the method iterates backward through the instructions\n   *  until it finds an actionable instruction that defines a point (e.g., `moveTo`, `lineTo`,\n   * `quadraticCurveTo`, etc.). For compound paths added via `addPath`, it recursively retrieves\n   * the last point from the nested path.\n   * @param out - A `Point` object where the last point's coordinates will be stored.\n   * This object is modified directly to contain the result.\n   * @returns The `Point` object containing the last point's coordinates.\n   */\n  getLastPoint(out) {\n    let index = this.instructions.length - 1;\n    let lastInstruction = this.instructions[index];\n    if (!lastInstruction) {\n      out.x = 0;\n      out.y = 0;\n      return out;\n    }\n    while (lastInstruction.action === \"closePath\") {\n      index--;\n      if (index < 0) {\n        out.x = 0;\n        out.y = 0;\n        return out;\n      }\n      lastInstruction = this.instructions[index];\n    }\n    switch (lastInstruction.action) {\n      case \"moveTo\":\n      case \"lineTo\":\n        out.x = lastInstruction.data[0];\n        out.y = lastInstruction.data[1];\n        break;\n      case \"quadraticCurveTo\":\n        out.x = lastInstruction.data[2];\n        out.y = lastInstruction.data[3];\n        break;\n      case \"bezierCurveTo\":\n        out.x = lastInstruction.data[4];\n        out.y = lastInstruction.data[5];\n        break;\n      case \"arc\":\n      case \"arcToSvg\":\n        out.x = lastInstruction.data[5];\n        out.y = lastInstruction.data[6];\n        break;\n      case \"addPath\":\n        lastInstruction.data[0].getLastPoint(out);\n        break;\n    }\n    return out;\n  }\n}\nfunction adjustTransform(currentMatrix, transform) {\n  if (currentMatrix) {\n    return currentMatrix.prepend(transform);\n  }\n  return transform.clone();\n}\n\nexport { GraphicsPath };\n//# sourceMappingURL=GraphicsPath.mjs.map\n","\"use strict\";\nfunction parseSVGFloatAttribute(svg, id, defaultValue) {\n  const value = svg.getAttribute(id);\n  return value ? Number(value) : defaultValue;\n}\n\nexport { parseSVGFloatAttribute };\n//# sourceMappingURL=parseSVGFloatAttribute.mjs.map\n","import { Color } from '../../../../color/Color.mjs';\nimport { warn } from '../../../../utils/logging/warn.mjs';\nimport { FillGradient } from '../fill/FillGradient.mjs';\nimport { parseSVGFloatAttribute } from './parseSVGFloatAttribute.mjs';\n\n\"use strict\";\nfunction parseSVGDefinitions(svg, session) {\n  const definitions = svg.querySelectorAll(\"defs\");\n  for (let i = 0; i < definitions.length; i++) {\n    const definition = definitions[i];\n    for (let j = 0; j < definition.children.length; j++) {\n      const child = definition.children[j];\n      switch (child.nodeName.toLowerCase()) {\n        case \"lineargradient\":\n          session.defs[child.id] = parseLinearGradient(child);\n          break;\n        case \"radialgradient\":\n          session.defs[child.id] = parseRadialGradient(child);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n}\nfunction parseLinearGradient(child) {\n  const x0 = parseSVGFloatAttribute(child, \"x1\", 0);\n  const y0 = parseSVGFloatAttribute(child, \"y1\", 0);\n  const x1 = parseSVGFloatAttribute(child, \"x2\", 1);\n  const y1 = parseSVGFloatAttribute(child, \"y2\", 0);\n  const gradientUnit = child.getAttribute(\"gradientUnits\") || \"objectBoundingBox\";\n  const gradient = new FillGradient(\n    x0,\n    y0,\n    x1,\n    y1,\n    gradientUnit === \"objectBoundingBox\" ? \"local\" : \"global\"\n  );\n  for (let k = 0; k < child.children.length; k++) {\n    const stop = child.children[k];\n    const offset = parseSVGFloatAttribute(stop, \"offset\", 0);\n    const color = Color.shared.setValue(stop.getAttribute(\"stop-color\")).toNumber();\n    gradient.addColorStop(offset, color);\n  }\n  return gradient;\n}\nfunction parseRadialGradient(_child) {\n  warn(\"[SVG Parser] Radial gradients are not yet supported\");\n  return new FillGradient(0, 0, 1, 0);\n}\n\nexport { parseSVGDefinitions };\n//# sourceMappingURL=parseSVGDefinitions.mjs.map\n","\"use strict\";\nfunction extractSvgUrlId(url) {\n  const match = url.match(/url\\s*\\(\\s*['\"]?\\s*#([^'\"\\s)]+)\\s*['\"]?\\s*\\)/i);\n  return match ? match[1] : \"\";\n}\n\nexport { extractSvgUrlId };\n//# sourceMappingURL=extractSvgUrlId.mjs.map\n","import { Color } from '../../../../color/Color.mjs';\nimport { extractSvgUrlId } from './utils/extractSvgUrlId.mjs';\n\n\"use strict\";\nconst styleAttributes = {\n  // Fill properties\n  fill: { type: \"paint\", default: 0 },\n  // Fill color/gradient\n  \"fill-opacity\": { type: \"number\", default: 1 },\n  // Fill transparency\n  // Stroke properties\n  stroke: { type: \"paint\", default: 0 },\n  // Stroke color/gradient\n  \"stroke-width\": { type: \"number\", default: 1 },\n  // Width of stroke\n  \"stroke-opacity\": { type: \"number\", default: 1 },\n  // Stroke transparency\n  \"stroke-linecap\": { type: \"string\", default: \"butt\" },\n  // End cap style: butt, round, square\n  \"stroke-linejoin\": { type: \"string\", default: \"miter\" },\n  // Join style: miter, round, bevel\n  \"stroke-miterlimit\": { type: \"number\", default: 10 },\n  // Limit on miter join sharpness\n  \"stroke-dasharray\": { type: \"string\", default: \"none\" },\n  // Dash pattern\n  \"stroke-dashoffset\": { type: \"number\", default: 0 },\n  // Offset for dash pattern\n  // Global properties\n  opacity: { type: \"number\", default: 1 }\n  // Overall opacity\n};\nfunction parseSVGStyle(svg, session) {\n  const style = svg.getAttribute(\"style\");\n  const strokeStyle = {};\n  const fillStyle = {};\n  const result = {\n    strokeStyle,\n    fillStyle,\n    useFill: false,\n    useStroke: false\n  };\n  for (const key in styleAttributes) {\n    const attribute = svg.getAttribute(key);\n    if (attribute) {\n      parseAttribute(session, result, key, attribute.trim());\n    }\n  }\n  if (style) {\n    const styleParts = style.split(\";\");\n    for (let i = 0; i < styleParts.length; i++) {\n      const stylePart = styleParts[i].trim();\n      const [key, value] = stylePart.split(\":\");\n      if (styleAttributes[key]) {\n        parseAttribute(session, result, key, value.trim());\n      }\n    }\n  }\n  return {\n    strokeStyle: result.useStroke ? strokeStyle : null,\n    fillStyle: result.useFill ? fillStyle : null,\n    useFill: result.useFill,\n    useStroke: result.useStroke\n  };\n}\nfunction parseAttribute(session, result, id, value) {\n  switch (id) {\n    case \"stroke\":\n      if (value !== \"none\") {\n        if (value.startsWith(\"url(\")) {\n          const id2 = extractSvgUrlId(value);\n          result.strokeStyle.fill = session.defs[id2];\n        } else {\n          result.strokeStyle.color = Color.shared.setValue(value).toNumber();\n        }\n        result.useStroke = true;\n      }\n      break;\n    case \"stroke-width\":\n      result.strokeStyle.width = Number(value);\n      break;\n    case \"fill\":\n      if (value !== \"none\") {\n        if (value.startsWith(\"url(\")) {\n          const id2 = extractSvgUrlId(value);\n          result.fillStyle.fill = session.defs[id2];\n        } else {\n          result.fillStyle.color = Color.shared.setValue(value).toNumber();\n        }\n        result.useFill = true;\n      }\n      break;\n    case \"fill-opacity\":\n      result.fillStyle.alpha = Number(value);\n      break;\n    case \"stroke-opacity\":\n      result.strokeStyle.alpha = Number(value);\n      break;\n    case \"opacity\":\n      result.fillStyle.alpha = Number(value);\n      result.strokeStyle.alpha = Number(value);\n      break;\n  }\n}\n\nexport { parseSVGStyle, styleAttributes };\n//# sourceMappingURL=parseSVGStyle.mjs.map\n","\"use strict\";\nfunction checkForNestedPattern(subpathsWithArea) {\n  if (subpathsWithArea.length <= 2) {\n    return true;\n  }\n  const areas = subpathsWithArea.map((s) => s.area).sort((a, b) => b - a);\n  const [largestArea, secondArea] = areas;\n  const smallestArea = areas[areas.length - 1];\n  const largestToSecondRatio = largestArea / secondArea;\n  const secondToSmallestRatio = secondArea / smallestArea;\n  if (largestToSecondRatio > 3 && secondToSmallestRatio < 2) {\n    return false;\n  }\n  return true;\n}\nfunction getFillInstructionData(context, index = 0) {\n  const instruction = context.instructions[index];\n  if (!instruction || instruction.action !== \"fill\") {\n    throw new Error(`Expected fill instruction at index ${index}, got ${instruction?.action || \"undefined\"}`);\n  }\n  return instruction.data;\n}\n\nexport { checkForNestedPattern, getFillInstructionData };\n//# sourceMappingURL=fillOperations.mjs.map\n","import { GraphicsPath } from '../../path/GraphicsPath.mjs';\n\n\"use strict\";\nfunction extractSubpaths(pathData) {\n  const parts = pathData.split(/(?=[Mm])/);\n  const subpaths = parts.filter((part) => part.trim().length > 0);\n  return subpaths;\n}\nfunction calculatePathArea(pathData) {\n  const coords = pathData.match(/[-+]?[0-9]*\\.?[0-9]+/g);\n  if (!coords || coords.length < 4)\n    return 0;\n  const numbers = coords.map(Number);\n  const xs = [];\n  const ys = [];\n  for (let i = 0; i < numbers.length; i += 2) {\n    if (i + 1 < numbers.length) {\n      xs.push(numbers[i]);\n      ys.push(numbers[i + 1]);\n    }\n  }\n  if (xs.length === 0 || ys.length === 0)\n    return 0;\n  const minX = Math.min(...xs);\n  const maxX = Math.max(...xs);\n  const minY = Math.min(...ys);\n  const maxY = Math.max(...ys);\n  const area = (maxX - minX) * (maxY - minY);\n  return area;\n}\nfunction appendSVGPath(pathData, graphicsPath) {\n  const tempPath = new GraphicsPath(pathData, false);\n  for (const instruction of tempPath.instructions) {\n    graphicsPath.instructions.push(instruction);\n  }\n}\n\nexport { appendSVGPath, calculatePathArea, extractSubpaths };\n//# sourceMappingURL=pathOperations.mjs.map\n","import { warn } from '../../../../utils/logging/warn.mjs';\nimport { GraphicsPath } from '../path/GraphicsPath.mjs';\nimport { parseSVGDefinitions } from './parseSVGDefinitions.mjs';\nimport { parseSVGFloatAttribute } from './parseSVGFloatAttribute.mjs';\nimport { parseSVGStyle } from './parseSVGStyle.mjs';\nimport { checkForNestedPattern } from './utils/fillOperations.mjs';\nimport { extractSubpaths, calculatePathArea, appendSVGPath } from './utils/pathOperations.mjs';\n\n\"use strict\";\nfunction SVGParser(svg, graphicsContext) {\n  if (typeof svg === \"string\") {\n    const div = document.createElement(\"div\");\n    div.innerHTML = svg.trim();\n    svg = div.querySelector(\"svg\");\n  }\n  const session = {\n    context: graphicsContext,\n    defs: {},\n    path: new GraphicsPath()\n  };\n  parseSVGDefinitions(svg, session);\n  const children = svg.children;\n  const { fillStyle, strokeStyle } = parseSVGStyle(svg, session);\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (child.nodeName.toLowerCase() === \"defs\")\n      continue;\n    renderChildren(child, session, fillStyle, strokeStyle);\n  }\n  return graphicsContext;\n}\nfunction renderChildren(svg, session, fillStyle, strokeStyle) {\n  const children = svg.children;\n  const { fillStyle: f1, strokeStyle: s1 } = parseSVGStyle(svg, session);\n  if (f1 && fillStyle) {\n    fillStyle = { ...fillStyle, ...f1 };\n  } else if (f1) {\n    fillStyle = f1;\n  }\n  if (s1 && strokeStyle) {\n    strokeStyle = { ...strokeStyle, ...s1 };\n  } else if (s1) {\n    strokeStyle = s1;\n  }\n  const noStyle = !fillStyle && !strokeStyle;\n  if (noStyle) {\n    fillStyle = { color: 0 };\n  }\n  let x;\n  let y;\n  let x1;\n  let y1;\n  let x2;\n  let y2;\n  let cx;\n  let cy;\n  let r;\n  let rx;\n  let ry;\n  let points;\n  let pointsString;\n  let d;\n  let graphicsPath;\n  let width;\n  let height;\n  switch (svg.nodeName.toLowerCase()) {\n    case \"path\": {\n      d = svg.getAttribute(\"d\");\n      const fillRule = svg.getAttribute(\"fill-rule\");\n      const subpaths = extractSubpaths(d);\n      const hasExplicitEvenodd = fillRule === \"evenodd\";\n      const hasMultipleSubpaths = subpaths.length > 1;\n      const shouldProcessHoles = hasExplicitEvenodd && hasMultipleSubpaths;\n      if (shouldProcessHoles) {\n        const subpathsWithArea = subpaths.map((subpath) => ({\n          path: subpath,\n          area: calculatePathArea(subpath)\n        }));\n        subpathsWithArea.sort((a, b) => b.area - a.area);\n        const useMultipleHolesApproach = subpaths.length > 3 || !checkForNestedPattern(subpathsWithArea);\n        if (useMultipleHolesApproach) {\n          for (let i = 0; i < subpathsWithArea.length; i++) {\n            const subpath = subpathsWithArea[i];\n            const isMainShape = i === 0;\n            session.context.beginPath();\n            const newPath = new GraphicsPath(void 0, true);\n            appendSVGPath(subpath.path, newPath);\n            session.context.path(newPath);\n            if (isMainShape) {\n              if (fillStyle)\n                session.context.fill(fillStyle);\n              if (strokeStyle)\n                session.context.stroke(strokeStyle);\n            } else {\n              session.context.cut();\n            }\n          }\n        } else {\n          for (let i = 0; i < subpathsWithArea.length; i++) {\n            const subpath = subpathsWithArea[i];\n            const isHole = i % 2 === 1;\n            session.context.beginPath();\n            const newPath = new GraphicsPath(void 0, true);\n            appendSVGPath(subpath.path, newPath);\n            session.context.path(newPath);\n            if (isHole) {\n              session.context.cut();\n            } else {\n              if (fillStyle)\n                session.context.fill(fillStyle);\n              if (strokeStyle)\n                session.context.stroke(strokeStyle);\n            }\n          }\n        }\n      } else {\n        const useEvenoddForGraphicsPath = fillRule ? fillRule === \"evenodd\" : true;\n        graphicsPath = new GraphicsPath(d, useEvenoddForGraphicsPath);\n        session.context.path(graphicsPath);\n        if (fillStyle)\n          session.context.fill(fillStyle);\n        if (strokeStyle)\n          session.context.stroke(strokeStyle);\n      }\n      break;\n    }\n    case \"circle\":\n      cx = parseSVGFloatAttribute(svg, \"cx\", 0);\n      cy = parseSVGFloatAttribute(svg, \"cy\", 0);\n      r = parseSVGFloatAttribute(svg, \"r\", 0);\n      session.context.ellipse(cx, cy, r, r);\n      if (fillStyle)\n        session.context.fill(fillStyle);\n      if (strokeStyle)\n        session.context.stroke(strokeStyle);\n      break;\n    case \"rect\":\n      x = parseSVGFloatAttribute(svg, \"x\", 0);\n      y = parseSVGFloatAttribute(svg, \"y\", 0);\n      width = parseSVGFloatAttribute(svg, \"width\", 0);\n      height = parseSVGFloatAttribute(svg, \"height\", 0);\n      rx = parseSVGFloatAttribute(svg, \"rx\", 0);\n      ry = parseSVGFloatAttribute(svg, \"ry\", 0);\n      if (rx || ry) {\n        session.context.roundRect(x, y, width, height, rx || ry);\n      } else {\n        session.context.rect(x, y, width, height);\n      }\n      if (fillStyle)\n        session.context.fill(fillStyle);\n      if (strokeStyle)\n        session.context.stroke(strokeStyle);\n      break;\n    case \"ellipse\":\n      cx = parseSVGFloatAttribute(svg, \"cx\", 0);\n      cy = parseSVGFloatAttribute(svg, \"cy\", 0);\n      rx = parseSVGFloatAttribute(svg, \"rx\", 0);\n      ry = parseSVGFloatAttribute(svg, \"ry\", 0);\n      session.context.beginPath();\n      session.context.ellipse(cx, cy, rx, ry);\n      if (fillStyle)\n        session.context.fill(fillStyle);\n      if (strokeStyle)\n        session.context.stroke(strokeStyle);\n      break;\n    case \"line\":\n      x1 = parseSVGFloatAttribute(svg, \"x1\", 0);\n      y1 = parseSVGFloatAttribute(svg, \"y1\", 0);\n      x2 = parseSVGFloatAttribute(svg, \"x2\", 0);\n      y2 = parseSVGFloatAttribute(svg, \"y2\", 0);\n      session.context.beginPath();\n      session.context.moveTo(x1, y1);\n      session.context.lineTo(x2, y2);\n      if (strokeStyle)\n        session.context.stroke(strokeStyle);\n      break;\n    case \"polygon\":\n      pointsString = svg.getAttribute(\"points\");\n      points = pointsString.match(/\\d+/g).map((n) => parseInt(n, 10));\n      session.context.poly(points, true);\n      if (fillStyle)\n        session.context.fill(fillStyle);\n      if (strokeStyle)\n        session.context.stroke(strokeStyle);\n      break;\n    case \"polyline\":\n      pointsString = svg.getAttribute(\"points\");\n      points = pointsString.match(/\\d+/g).map((n) => parseInt(n, 10));\n      session.context.poly(points, false);\n      if (strokeStyle)\n        session.context.stroke(strokeStyle);\n      break;\n    case \"g\":\n    case \"svg\":\n      break;\n    default: {\n      warn(`[SVG parser] <${svg.nodeName}> elements unsupported`);\n      break;\n    }\n  }\n  if (noStyle) {\n    fillStyle = null;\n  }\n  for (let i = 0; i < children.length; i++) {\n    renderChildren(children[i], session, fillStyle, strokeStyle);\n  }\n}\n\nexport { SVGParser };\n//# sourceMappingURL=SVGParser.mjs.map\n","import { Color } from '../../../../color/Color.mjs';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { FillGradient } from '../fill/FillGradient.mjs';\nimport { FillPattern } from '../fill/FillPattern.mjs';\n\n\"use strict\";\nfunction isColorLike(value) {\n  return Color.isColorLike(value);\n}\nfunction isFillPattern(value) {\n  return value instanceof FillPattern;\n}\nfunction isFillGradient(value) {\n  return value instanceof FillGradient;\n}\nfunction isTexture(value) {\n  return value instanceof Texture;\n}\nfunction handleColorLike(fill, value, defaultStyle) {\n  const temp = Color.shared.setValue(value ?? 0);\n  fill.color = temp.toNumber();\n  fill.alpha = temp.alpha === 1 ? defaultStyle.alpha : temp.alpha;\n  fill.texture = Texture.WHITE;\n  return { ...defaultStyle, ...fill };\n}\nfunction handleTexture(fill, value, defaultStyle) {\n  fill.texture = value;\n  return { ...defaultStyle, ...fill };\n}\nfunction handleFillPattern(fill, value, defaultStyle) {\n  fill.fill = value;\n  fill.color = 16777215;\n  fill.texture = value.texture;\n  fill.matrix = value.transform;\n  return { ...defaultStyle, ...fill };\n}\nfunction handleFillGradient(fill, value, defaultStyle) {\n  value.buildGradient();\n  fill.fill = value;\n  fill.color = 16777215;\n  fill.texture = value.texture;\n  fill.matrix = value.transform;\n  fill.textureSpace = value.textureSpace;\n  return { ...defaultStyle, ...fill };\n}\nfunction handleFillObject(value, defaultStyle) {\n  const style = { ...defaultStyle, ...value };\n  const color = Color.shared.setValue(style.color);\n  style.alpha *= color.alpha;\n  style.color = color.toNumber();\n  return style;\n}\nfunction toFillStyle(value, defaultStyle) {\n  if (value === void 0 || value === null) {\n    return null;\n  }\n  const fill = {};\n  const objectStyle = value;\n  if (isColorLike(value)) {\n    return handleColorLike(fill, value, defaultStyle);\n  } else if (isTexture(value)) {\n    return handleTexture(fill, value, defaultStyle);\n  } else if (isFillPattern(value)) {\n    return handleFillPattern(fill, value, defaultStyle);\n  } else if (isFillGradient(value)) {\n    return handleFillGradient(fill, value, defaultStyle);\n  } else if (objectStyle.fill && isFillPattern(objectStyle.fill)) {\n    return handleFillPattern(objectStyle, objectStyle.fill, defaultStyle);\n  } else if (objectStyle.fill && isFillGradient(objectStyle.fill)) {\n    return handleFillGradient(objectStyle, objectStyle.fill, defaultStyle);\n  }\n  return handleFillObject(objectStyle, defaultStyle);\n}\nfunction toStrokeStyle(value, defaultStyle) {\n  const { width, alignment, miterLimit, cap, join, pixelLine, ...rest } = defaultStyle;\n  const fill = toFillStyle(value, rest);\n  if (!fill) {\n    return null;\n  }\n  return {\n    width,\n    alignment,\n    miterLimit,\n    cap,\n    join,\n    pixelLine,\n    ...fill\n  };\n}\n\nexport { toFillStyle, toStrokeStyle };\n//# sourceMappingURL=convertFillInputToFillStyle.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { Color } from '../../../color/Color.mjs';\nimport { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { Point } from '../../../maths/point/Point.mjs';\nimport { Texture } from '../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { uid } from '../../../utils/data/uid.mjs';\nimport { deprecation, v8_0_0 } from '../../../utils/logging/deprecation.mjs';\nimport { Bounds } from '../../container/bounds/Bounds.mjs';\nimport { GraphicsPath } from './path/GraphicsPath.mjs';\nimport { SVGParser } from './svg/SVGParser.mjs';\nimport { toFillStyle, toStrokeStyle } from './utils/convertFillInputToFillStyle.mjs';\n\n\"use strict\";\nconst tmpPoint = new Point();\nconst tempMatrix = new Matrix();\nconst _GraphicsContext = class _GraphicsContext extends EventEmitter {\n  constructor() {\n    super(...arguments);\n    /**\n     * unique id for this graphics context\n     * @internal\n     */\n    this.uid = uid(\"graphicsContext\");\n    /**\n     * Indicates whether content is updated and have to be re-rendered.\n     * @internal\n     */\n    this.dirty = true;\n    /** The batch mode for this graphics context. It can be 'auto', 'batch', or 'no-batch'. */\n    this.batchMode = \"auto\";\n    /** @internal */\n    this.instructions = [];\n    this._activePath = new GraphicsPath();\n    this._transform = new Matrix();\n    this._fillStyle = { ..._GraphicsContext.defaultFillStyle };\n    this._strokeStyle = { ..._GraphicsContext.defaultStrokeStyle };\n    this._stateStack = [];\n    this._tick = 0;\n    this._bounds = new Bounds();\n    this._boundsDirty = true;\n  }\n  /**\n   * Creates a new GraphicsContext object that is a clone of this instance, copying all properties,\n   * including the current drawing state, transformations, styles, and instructions.\n   * @returns A new GraphicsContext instance with the same properties and state as this one.\n   */\n  clone() {\n    const clone = new _GraphicsContext();\n    clone.batchMode = this.batchMode;\n    clone.instructions = this.instructions.slice();\n    clone._activePath = this._activePath.clone();\n    clone._transform = this._transform.clone();\n    clone._fillStyle = { ...this._fillStyle };\n    clone._strokeStyle = { ...this._strokeStyle };\n    clone._stateStack = this._stateStack.slice();\n    clone._bounds = this._bounds.clone();\n    clone._boundsDirty = true;\n    return clone;\n  }\n  /**\n   * The current fill style of the graphics context. This can be a color, gradient, pattern, or a more complex style defined by a FillStyle object.\n   */\n  get fillStyle() {\n    return this._fillStyle;\n  }\n  set fillStyle(value) {\n    this._fillStyle = toFillStyle(value, _GraphicsContext.defaultFillStyle);\n  }\n  /**\n   * The current stroke style of the graphics context. Similar to fill styles, stroke styles can encompass colors, gradients, patterns, or more detailed configurations via a StrokeStyle object.\n   */\n  get strokeStyle() {\n    return this._strokeStyle;\n  }\n  set strokeStyle(value) {\n    this._strokeStyle = toStrokeStyle(value, _GraphicsContext.defaultStrokeStyle);\n  }\n  /**\n   * Sets the current fill style of the graphics context. The fill style can be a color, gradient,\n   * pattern, or a more complex style defined by a FillStyle object.\n   * @param style - The fill style to apply. This can be a simple color, a gradient or pattern object,\n   *                or a FillStyle or ConvertedFillStyle object.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  setFillStyle(style) {\n    this._fillStyle = toFillStyle(style, _GraphicsContext.defaultFillStyle);\n    return this;\n  }\n  /**\n   * Sets the current stroke style of the graphics context. Similar to fill styles, stroke styles can\n   * encompass colors, gradients, patterns, or more detailed configurations via a StrokeStyle object.\n   * @param style - The stroke style to apply. Can be defined as a color, a gradient or pattern,\n   *                or a StrokeStyle or ConvertedStrokeStyle object.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  setStrokeStyle(style) {\n    this._strokeStyle = toFillStyle(style, _GraphicsContext.defaultStrokeStyle);\n    return this;\n  }\n  texture(texture, tint, dx, dy, dw, dh) {\n    this.instructions.push({\n      action: \"texture\",\n      data: {\n        image: texture,\n        dx: dx || 0,\n        dy: dy || 0,\n        dw: dw || texture.frame.width,\n        dh: dh || texture.frame.height,\n        transform: this._transform.clone(),\n        alpha: this._fillStyle.alpha,\n        style: tint ? Color.shared.setValue(tint).toNumber() : 16777215\n      }\n    });\n    this.onUpdate();\n    return this;\n  }\n  /**\n   * Resets the current path. Any previous path and its commands are discarded and a new path is\n   * started. This is typically called before beginning a new shape or series of drawing commands.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  beginPath() {\n    this._activePath = new GraphicsPath();\n    return this;\n  }\n  fill(style, alpha) {\n    let path;\n    const lastInstruction = this.instructions[this.instructions.length - 1];\n    if (this._tick === 0 && lastInstruction && lastInstruction.action === \"stroke\") {\n      path = lastInstruction.data.path;\n    } else {\n      path = this._activePath.clone();\n    }\n    if (!path)\n      return this;\n    if (style != null) {\n      if (alpha !== void 0 && typeof style === \"number\") {\n        deprecation(v8_0_0, \"GraphicsContext.fill(color, alpha) is deprecated, use GraphicsContext.fill({ color, alpha }) instead\");\n        style = { color: style, alpha };\n      }\n      this._fillStyle = toFillStyle(style, _GraphicsContext.defaultFillStyle);\n    }\n    this.instructions.push({\n      action: \"fill\",\n      // TODO copy fill style!\n      data: { style: this.fillStyle, path }\n    });\n    this.onUpdate();\n    this._initNextPathLocation();\n    this._tick = 0;\n    return this;\n  }\n  _initNextPathLocation() {\n    const { x, y } = this._activePath.getLastPoint(Point.shared);\n    this._activePath.clear();\n    this._activePath.moveTo(x, y);\n  }\n  /**\n   * Strokes the current path with the current stroke style. This method can take an optional\n   * FillInput parameter to define the stroke's appearance, including its color, width, and other properties.\n   * @param style - (Optional) The stroke style to apply. Can be defined as a simple color or a more complex style object. If omitted, uses the current stroke style.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  stroke(style) {\n    let path;\n    const lastInstruction = this.instructions[this.instructions.length - 1];\n    if (this._tick === 0 && lastInstruction && lastInstruction.action === \"fill\") {\n      path = lastInstruction.data.path;\n    } else {\n      path = this._activePath.clone();\n    }\n    if (!path)\n      return this;\n    if (style != null) {\n      this._strokeStyle = toStrokeStyle(style, _GraphicsContext.defaultStrokeStyle);\n    }\n    this.instructions.push({\n      action: \"stroke\",\n      // TODO copy fill style!\n      data: { style: this.strokeStyle, path }\n    });\n    this.onUpdate();\n    this._initNextPathLocation();\n    this._tick = 0;\n    return this;\n  }\n  /**\n   * Applies a cutout to the last drawn shape. This is used to create holes or complex shapes by\n   * subtracting a path from the previously drawn path. If a hole is not completely in a shape, it will\n   * fail to cut correctly!\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  cut() {\n    for (let i = 0; i < 2; i++) {\n      const lastInstruction = this.instructions[this.instructions.length - 1 - i];\n      const holePath = this._activePath.clone();\n      if (lastInstruction) {\n        if (lastInstruction.action === \"stroke\" || lastInstruction.action === \"fill\") {\n          if (lastInstruction.data.hole) {\n            lastInstruction.data.hole.addPath(holePath);\n          } else {\n            lastInstruction.data.hole = holePath;\n            break;\n          }\n        }\n      }\n    }\n    this._initNextPathLocation();\n    return this;\n  }\n  /**\n   * Adds an arc to the current path, which is centered at (x, y) with the specified radius,\n   * starting and ending angles, and direction.\n   * @param x - The x-coordinate of the arc's center.\n   * @param y - The y-coordinate of the arc's center.\n   * @param radius - The arc's radius.\n   * @param startAngle - The starting angle, in radians.\n   * @param endAngle - The ending angle, in radians.\n   * @param counterclockwise - (Optional) Specifies whether the arc is drawn counterclockwise (true) or clockwise (false). Defaults to false.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.arc(\n      t.a * x + t.c * y + t.tx,\n      t.b * x + t.d * y + t.ty,\n      radius,\n      startAngle,\n      endAngle,\n      counterclockwise\n    );\n    return this;\n  }\n  /**\n   * Adds an arc to the current path with the given control points and radius, connected to the previous point\n   * by a straight line if necessary.\n   * @param x1 - The x-coordinate of the first control point.\n   * @param y1 - The y-coordinate of the first control point.\n   * @param x2 - The x-coordinate of the second control point.\n   * @param y2 - The y-coordinate of the second control point.\n   * @param radius - The arc's radius.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  arcTo(x1, y1, x2, y2, radius) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.arcTo(\n      t.a * x1 + t.c * y1 + t.tx,\n      t.b * x1 + t.d * y1 + t.ty,\n      t.a * x2 + t.c * y2 + t.tx,\n      t.b * x2 + t.d * y2 + t.ty,\n      radius\n    );\n    return this;\n  }\n  /**\n   * Adds an SVG-style arc to the path, allowing for elliptical arcs based on the SVG spec.\n   * @param rx - The x-radius of the ellipse.\n   * @param ry - The y-radius of the ellipse.\n   * @param xAxisRotation - The rotation of the ellipse's x-axis relative\n   * to the x-axis of the coordinate system, in degrees.\n   * @param largeArcFlag - Determines if the arc should be greater than or less than 180 degrees.\n   * @param sweepFlag - Determines if the arc should be swept in a positive angle direction.\n   * @param x - The x-coordinate of the arc's end point.\n   * @param y - The y-coordinate of the arc's end point.\n   * @returns The instance of the current object for chaining.\n   */\n  arcToSvg(rx, ry, xAxisRotation, largeArcFlag, sweepFlag, x, y) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.arcToSvg(\n      rx,\n      ry,\n      xAxisRotation,\n      // should we rotate this with transform??\n      largeArcFlag,\n      sweepFlag,\n      t.a * x + t.c * y + t.tx,\n      t.b * x + t.d * y + t.ty\n    );\n    return this;\n  }\n  /**\n   * Adds a cubic Bezier curve to the path.\n   * It requires three points: the first two are control points and the third one is the end point.\n   * The starting point is the last point in the current path.\n   * @param cp1x - The x-coordinate of the first control point.\n   * @param cp1y - The y-coordinate of the first control point.\n   * @param cp2x - The x-coordinate of the second control point.\n   * @param cp2y - The y-coordinate of the second control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y, smoothness) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.bezierCurveTo(\n      t.a * cp1x + t.c * cp1y + t.tx,\n      t.b * cp1x + t.d * cp1y + t.ty,\n      t.a * cp2x + t.c * cp2y + t.tx,\n      t.b * cp2x + t.d * cp2y + t.ty,\n      t.a * x + t.c * y + t.tx,\n      t.b * x + t.d * y + t.ty,\n      smoothness\n    );\n    return this;\n  }\n  /**\n   * Closes the current path by drawing a straight line back to the start.\n   * If the shape is already closed or there are no points in the path, this method does nothing.\n   * @returns The instance of the current object for chaining.\n   */\n  closePath() {\n    this._tick++;\n    this._activePath?.closePath();\n    return this;\n  }\n  /**\n   * Draws an ellipse at the specified location and with the given x and y radii.\n   * An optional transformation can be applied, allowing for rotation, scaling, and translation.\n   * @param x - The x-coordinate of the center of the ellipse.\n   * @param y - The y-coordinate of the center of the ellipse.\n   * @param radiusX - The horizontal radius of the ellipse.\n   * @param radiusY - The vertical radius of the ellipse.\n   * @returns The instance of the current object for chaining.\n   */\n  ellipse(x, y, radiusX, radiusY) {\n    this._tick++;\n    this._activePath.ellipse(x, y, radiusX, radiusY, this._transform.clone());\n    return this;\n  }\n  /**\n   * Draws a circle shape. This method adds a new circle path to the current drawing.\n   * @param x - The x-coordinate of the center of the circle.\n   * @param y - The y-coordinate of the center of the circle.\n   * @param radius - The radius of the circle.\n   * @returns The instance of the current object for chaining.\n   */\n  circle(x, y, radius) {\n    this._tick++;\n    this._activePath.circle(x, y, radius, this._transform.clone());\n    return this;\n  }\n  /**\n   * Adds another `GraphicsPath` to this path, optionally applying a transformation.\n   * @param path - The `GraphicsPath` to add.\n   * @returns The instance of the current object for chaining.\n   */\n  path(path) {\n    this._tick++;\n    this._activePath.addPath(path, this._transform.clone());\n    return this;\n  }\n  /**\n   * Connects the current point to a new point with a straight line. This method updates the current path.\n   * @param x - The x-coordinate of the new point to connect to.\n   * @param y - The y-coordinate of the new point to connect to.\n   * @returns The instance of the current object for chaining.\n   */\n  lineTo(x, y) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.lineTo(\n      t.a * x + t.c * y + t.tx,\n      t.b * x + t.d * y + t.ty\n    );\n    return this;\n  }\n  /**\n   * Sets the starting point for a new sub-path. Any subsequent drawing commands are considered part of this path.\n   * @param x - The x-coordinate for the starting point.\n   * @param y - The y-coordinate for the starting point.\n   * @returns The instance of the current object for chaining.\n   */\n  moveTo(x, y) {\n    this._tick++;\n    const t = this._transform;\n    const instructions = this._activePath.instructions;\n    const transformedX = t.a * x + t.c * y + t.tx;\n    const transformedY = t.b * x + t.d * y + t.ty;\n    if (instructions.length === 1 && instructions[0].action === \"moveTo\") {\n      instructions[0].data[0] = transformedX;\n      instructions[0].data[1] = transformedY;\n      return this;\n    }\n    this._activePath.moveTo(\n      transformedX,\n      transformedY\n    );\n    return this;\n  }\n  /**\n   * Adds a quadratic curve to the path. It requires two points: the control point and the end point.\n   * The starting point is the last point in the current path.\n   * @param cpx - The x-coordinate of the control point.\n   * @param cpy - The y-coordinate of the control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  quadraticCurveTo(cpx, cpy, x, y, smoothness) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.quadraticCurveTo(\n      t.a * cpx + t.c * cpy + t.tx,\n      t.b * cpx + t.d * cpy + t.ty,\n      t.a * x + t.c * y + t.tx,\n      t.b * x + t.d * y + t.ty,\n      smoothness\n    );\n    return this;\n  }\n  /**\n   * Draws a rectangle shape. This method adds a new rectangle path to the current drawing.\n   * @param x - The x-coordinate of the top-left corner of the rectangle.\n   * @param y - The y-coordinate of the top-left corner of the rectangle.\n   * @param w - The width of the rectangle.\n   * @param h - The height of the rectangle.\n   * @returns The instance of the current object for chaining.\n   */\n  rect(x, y, w, h) {\n    this._tick++;\n    this._activePath.rect(x, y, w, h, this._transform.clone());\n    return this;\n  }\n  /**\n   * Draws a rectangle with rounded corners.\n   * The corner radius can be specified to determine how rounded the corners should be.\n   * An optional transformation can be applied, which allows for rotation, scaling, and translation of the rectangle.\n   * @param x - The x-coordinate of the top-left corner of the rectangle.\n   * @param y - The y-coordinate of the top-left corner of the rectangle.\n   * @param w - The width of the rectangle.\n   * @param h - The height of the rectangle.\n   * @param radius - The radius of the rectangle's corners. If not specified, corners will be sharp.\n   * @returns The instance of the current object for chaining.\n   */\n  roundRect(x, y, w, h, radius) {\n    this._tick++;\n    this._activePath.roundRect(x, y, w, h, radius, this._transform.clone());\n    return this;\n  }\n  /**\n   * Draws a polygon shape by specifying a sequence of points. This method allows for the creation of complex polygons,\n   * which can be both open and closed. An optional transformation can be applied, enabling the polygon to be scaled,\n   * rotated, or translated as needed.\n   * @param points - An array of numbers, or an array of PointData objects eg [{x,y}, {x,y}, {x,y}]\n   * representing the x and y coordinates, of the polygon's vertices, in sequence.\n   * @param close - A boolean indicating whether to close the polygon path. True by default.\n   */\n  poly(points, close) {\n    this._tick++;\n    this._activePath.poly(points, close, this._transform.clone());\n    return this;\n  }\n  /**\n   * Draws a regular polygon with a specified number of sides. All sides and angles are equal.\n   * @param x - The x-coordinate of the center of the polygon.\n   * @param y - The y-coordinate of the center of the polygon.\n   * @param radius - The radius of the circumscribed circle of the polygon.\n   * @param sides - The number of sides of the polygon. Must be 3 or more.\n   * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n   * @param transform - An optional `Matrix` object to apply a transformation to the polygon.\n   * @returns The instance of the current object for chaining.\n   */\n  regularPoly(x, y, radius, sides, rotation = 0, transform) {\n    this._tick++;\n    this._activePath.regularPoly(x, y, radius, sides, rotation, transform);\n    return this;\n  }\n  /**\n   * Draws a polygon with rounded corners.\n   * Similar to `regularPoly` but with the ability to round the corners of the polygon.\n   * @param x - The x-coordinate of the center of the polygon.\n   * @param y - The y-coordinate of the center of the polygon.\n   * @param radius - The radius of the circumscribed circle of the polygon.\n   * @param sides - The number of sides of the polygon. Must be 3 or more.\n   * @param corner - The radius of the rounding of the corners.\n   * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n   * @returns The instance of the current object for chaining.\n   */\n  roundPoly(x, y, radius, sides, corner, rotation) {\n    this._tick++;\n    this._activePath.roundPoly(x, y, radius, sides, corner, rotation);\n    return this;\n  }\n  /**\n   * Draws a shape with rounded corners. This function supports custom radius for each corner of the shape.\n   * Optionally, corners can be rounded using a quadratic curve instead of an arc, providing a different aesthetic.\n   * @param points - An array of `RoundedPoint` representing the corners of the shape to draw.\n   * A minimum of 3 points is required.\n   * @param radius - The default radius for the corners.\n   * This radius is applied to all corners unless overridden in `points`.\n   * @param useQuadratic - If set to true, rounded corners are drawn using a quadraticCurve\n   *  method instead of an arc method. Defaults to false.\n   * @param smoothness - Specifies the smoothness of the curve when `useQuadratic` is true.\n   * Higher values make the curve smoother.\n   * @returns The instance of the current object for chaining.\n   */\n  roundShape(points, radius, useQuadratic, smoothness) {\n    this._tick++;\n    this._activePath.roundShape(points, radius, useQuadratic, smoothness);\n    return this;\n  }\n  /**\n   * Draw Rectangle with fillet corners. This is much like rounded rectangle\n   * however it support negative numbers as well for the corner radius.\n   * @param x - Upper left corner of rect\n   * @param y - Upper right corner of rect\n   * @param width - Width of rect\n   * @param height - Height of rect\n   * @param fillet - accept negative or positive values\n   */\n  filletRect(x, y, width, height, fillet) {\n    this._tick++;\n    this._activePath.filletRect(x, y, width, height, fillet);\n    return this;\n  }\n  /**\n   * Draw Rectangle with chamfer corners. These are angled corners.\n   * @param x - Upper left corner of rect\n   * @param y - Upper right corner of rect\n   * @param width - Width of rect\n   * @param height - Height of rect\n   * @param chamfer - non-zero real number, size of corner cutout\n   * @param transform\n   */\n  chamferRect(x, y, width, height, chamfer, transform) {\n    this._tick++;\n    this._activePath.chamferRect(x, y, width, height, chamfer, transform);\n    return this;\n  }\n  /**\n   * Draws a star shape centered at a specified location. This method allows for the creation\n   *  of stars with a variable number of points, outer radius, optional inner radius, and rotation.\n   * The star is drawn as a closed polygon with alternating outer and inner vertices to create the star's points.\n   * An optional transformation can be applied to scale, rotate, or translate the star as needed.\n   * @param x - The x-coordinate of the center of the star.\n   * @param y - The y-coordinate of the center of the star.\n   * @param points - The number of points of the star.\n   * @param radius - The outer radius of the star (distance from the center to the outer points).\n   * @param innerRadius - Optional. The inner radius of the star\n   * (distance from the center to the inner points between the outer points).\n   * If not provided, defaults to half of the `radius`.\n   * @param rotation - Optional. The rotation of the star in radians, where 0 is aligned with the y-axis.\n   * Defaults to 0, meaning one point is directly upward.\n   * @returns The instance of the current object for chaining further drawing commands.\n   */\n  star(x, y, points, radius, innerRadius = 0, rotation = 0) {\n    this._tick++;\n    this._activePath.star(x, y, points, radius, innerRadius, rotation, this._transform.clone());\n    return this;\n  }\n  /**\n   * Parses and renders an SVG string into the graphics context. This allows for complex shapes and paths\n   * defined in SVG format to be drawn within the graphics context.\n   * @param svg - The SVG string to be parsed and rendered.\n   */\n  svg(svg) {\n    this._tick++;\n    SVGParser(svg, this);\n    return this;\n  }\n  /**\n   * Restores the most recently saved graphics state by popping the top of the graphics state stack.\n   * This includes transformations, fill styles, and stroke styles.\n   */\n  restore() {\n    const state = this._stateStack.pop();\n    if (state) {\n      this._transform = state.transform;\n      this._fillStyle = state.fillStyle;\n      this._strokeStyle = state.strokeStyle;\n    }\n    return this;\n  }\n  /** Saves the current graphics state, including transformations, fill styles, and stroke styles, onto a stack. */\n  save() {\n    this._stateStack.push({\n      transform: this._transform.clone(),\n      fillStyle: { ...this._fillStyle },\n      strokeStyle: { ...this._strokeStyle }\n    });\n    return this;\n  }\n  /**\n   * Returns the current transformation matrix of the graphics context.\n   * @returns The current transformation matrix.\n   */\n  getTransform() {\n    return this._transform;\n  }\n  /**\n   * Resets the current transformation matrix to the identity matrix, effectively removing any transformations (rotation, scaling, translation) previously applied.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  resetTransform() {\n    this._transform.identity();\n    return this;\n  }\n  /**\n   * Applies a rotation transformation to the graphics context around the current origin.\n   * @param angle - The angle of rotation in radians.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  rotate(angle) {\n    this._transform.rotate(angle);\n    return this;\n  }\n  /**\n   * Applies a scaling transformation to the graphics context, scaling drawings by x horizontally and by y vertically.\n   * @param x - The scale factor in the horizontal direction.\n   * @param y - (Optional) The scale factor in the vertical direction. If not specified, the x value is used for both directions.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  scale(x, y = x) {\n    this._transform.scale(x, y);\n    return this;\n  }\n  setTransform(a, b, c, d, dx, dy) {\n    if (a instanceof Matrix) {\n      this._transform.set(a.a, a.b, a.c, a.d, a.tx, a.ty);\n      return this;\n    }\n    this._transform.set(a, b, c, d, dx, dy);\n    return this;\n  }\n  transform(a, b, c, d, dx, dy) {\n    if (a instanceof Matrix) {\n      this._transform.append(a);\n      return this;\n    }\n    tempMatrix.set(a, b, c, d, dx, dy);\n    this._transform.append(tempMatrix);\n    return this;\n  }\n  /**\n   * Applies a translation transformation to the graphics context, moving the origin by the specified amounts.\n   * @param x - The amount to translate in the horizontal direction.\n   * @param y - (Optional) The amount to translate in the vertical direction. If not specified, the x value is used for both directions.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  translate(x, y = x) {\n    this._transform.translate(x, y);\n    return this;\n  }\n  /**\n   * Clears all drawing commands from the graphics context, effectively resetting it. This includes clearing the path,\n   * and optionally resetting transformations to the identity matrix.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  clear() {\n    this._activePath.clear();\n    this.instructions.length = 0;\n    this.resetTransform();\n    this.onUpdate();\n    return this;\n  }\n  onUpdate() {\n    this._boundsDirty = true;\n    if (this.dirty)\n      return;\n    this.emit(\"update\", this, 16);\n    this.dirty = true;\n  }\n  /** The bounds of the graphic shape. */\n  get bounds() {\n    if (!this._boundsDirty)\n      return this._bounds;\n    this._boundsDirty = false;\n    const bounds = this._bounds;\n    bounds.clear();\n    for (let i = 0; i < this.instructions.length; i++) {\n      const instruction = this.instructions[i];\n      const action = instruction.action;\n      if (action === \"fill\") {\n        const data = instruction.data;\n        bounds.addBounds(data.path.bounds);\n      } else if (action === \"texture\") {\n        const data = instruction.data;\n        bounds.addFrame(data.dx, data.dy, data.dx + data.dw, data.dy + data.dh, data.transform);\n      }\n      if (action === \"stroke\") {\n        const data = instruction.data;\n        const alignment = data.style.alignment;\n        const outerPadding = data.style.width * (1 - alignment);\n        const _bounds = data.path.bounds;\n        bounds.addFrame(\n          _bounds.minX - outerPadding,\n          _bounds.minY - outerPadding,\n          _bounds.maxX + outerPadding,\n          _bounds.maxY + outerPadding\n        );\n      }\n    }\n    return bounds;\n  }\n  /**\n   * Check to see if a point is contained within this geometry.\n   * @param point - Point to check if it's contained.\n   * @returns {boolean} `true` if the point is contained within geometry.\n   */\n  containsPoint(point) {\n    if (!this.bounds.containsPoint(point.x, point.y))\n      return false;\n    const instructions = this.instructions;\n    let hasHit = false;\n    for (let k = 0; k < instructions.length; k++) {\n      const instruction = instructions[k];\n      const data = instruction.data;\n      const path = data.path;\n      if (!instruction.action || !path)\n        continue;\n      const style = data.style;\n      const shapes = path.shapePath.shapePrimitives;\n      for (let i = 0; i < shapes.length; i++) {\n        const shape = shapes[i].shape;\n        if (!style || !shape)\n          continue;\n        const transform = shapes[i].transform;\n        const transformedPoint = transform ? transform.applyInverse(point, tmpPoint) : point;\n        if (instruction.action === \"fill\") {\n          hasHit = shape.contains(transformedPoint.x, transformedPoint.y);\n        } else {\n          const strokeStyle = style;\n          hasHit = shape.strokeContains(transformedPoint.x, transformedPoint.y, strokeStyle.width, strokeStyle.alignment);\n        }\n        const holes = data.hole;\n        if (holes) {\n          const holeShapes = holes.shapePath?.shapePrimitives;\n          if (holeShapes) {\n            for (let j = 0; j < holeShapes.length; j++) {\n              if (holeShapes[j].shape.contains(transformedPoint.x, transformedPoint.y)) {\n                hasHit = false;\n              }\n            }\n          }\n        }\n        if (hasHit) {\n          return true;\n        }\n      }\n    }\n    return hasHit;\n  }\n  /**\n   * Destroys the GraphicsData object.\n   * @param options - Options parameter. A boolean will act as if all options\n   *  have been set to that value\n   * @example\n   * context.destroy();\n   * context.destroy(true);\n   * context.destroy({ texture: true, textureSource: true });\n   */\n  destroy(options = false) {\n    this._stateStack.length = 0;\n    this._transform = null;\n    this.emit(\"destroy\", this);\n    this.removeAllListeners();\n    const destroyTexture = typeof options === \"boolean\" ? options : options?.texture;\n    if (destroyTexture) {\n      const destroyTextureSource = typeof options === \"boolean\" ? options : options?.textureSource;\n      if (this._fillStyle.texture) {\n        this._fillStyle.fill && \"uid\" in this._fillStyle.fill ? this._fillStyle.fill.destroy() : this._fillStyle.texture.destroy(destroyTextureSource);\n      }\n      if (this._strokeStyle.texture) {\n        this._strokeStyle.fill && \"uid\" in this._strokeStyle.fill ? this._strokeStyle.fill.destroy() : this._strokeStyle.texture.destroy(destroyTextureSource);\n      }\n    }\n    this._fillStyle = null;\n    this._strokeStyle = null;\n    this.instructions = null;\n    this._activePath = null;\n    this._bounds = null;\n    this._stateStack = null;\n    this.customShader = null;\n    this._transform = null;\n  }\n};\n/** The default fill style to use when none is provided. */\n_GraphicsContext.defaultFillStyle = {\n  /** The color to use for the fill. */\n  color: 16777215,\n  /** The alpha value to use for the fill. */\n  alpha: 1,\n  /** The texture to use for the fill. */\n  texture: Texture.WHITE,\n  /** The matrix to apply. */\n  matrix: null,\n  /** The fill pattern to use. */\n  fill: null,\n  /** Whether coordinates are 'global' or 'local' */\n  textureSpace: \"local\"\n};\n/** The default stroke style to use when none is provided. */\n_GraphicsContext.defaultStrokeStyle = {\n  /** The width of the stroke. */\n  width: 1,\n  /** The color to use for the stroke. */\n  color: 16777215,\n  /** The alpha value to use for the stroke. */\n  alpha: 1,\n  /** The alignment of the stroke. */\n  alignment: 0.5,\n  /** The miter limit to use. */\n  miterLimit: 10,\n  /** The line cap style to use. */\n  cap: \"butt\",\n  /** The line join style to use. */\n  join: \"miter\",\n  /** The texture to use for the fill. */\n  texture: Texture.WHITE,\n  /** The matrix to apply. */\n  matrix: null,\n  /** The fill pattern to use. */\n  fill: null,\n  /** Whether coordinates are 'global' or 'local' */\n  textureSpace: \"local\",\n  /** If the stroke is a pixel line. */\n  pixelLine: false\n};\nlet GraphicsContext = _GraphicsContext;\n\nexport { GraphicsContext };\n//# sourceMappingURL=GraphicsContext.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { Color } from '../../color/Color.mjs';\nimport { uid } from '../../utils/data/uid.mjs';\nimport { deprecation, v8_0_0 } from '../../utils/logging/deprecation.mjs';\nimport { warn } from '../../utils/logging/warn.mjs';\nimport { FillGradient } from '../graphics/shared/fill/FillGradient.mjs';\nimport { FillPattern } from '../graphics/shared/fill/FillPattern.mjs';\nimport { GraphicsContext } from '../graphics/shared/GraphicsContext.mjs';\nimport { toFillStyle, toStrokeStyle } from '../graphics/shared/utils/convertFillInputToFillStyle.mjs';\n\n\"use strict\";\nconst _TextStyle = class _TextStyle extends EventEmitter {\n  constructor(style = {}) {\n    super();\n    /**\n     * Unique identifier for the TextStyle class.\n     * This is used to track instances and ensure uniqueness.\n     * @internal\n     */\n    this.uid = uid(\"textStyle\");\n    /**\n     * Internal tick counter used to track updates and changes.\n     * This is incremented whenever the style is modified, allowing for efficient change detection.\n     * @internal\n     */\n    this._tick = 0;\n    convertV7Tov8Style(style);\n    const fullStyle = { ..._TextStyle.defaultTextStyle, ...style };\n    for (const key in fullStyle) {\n      const thisKey = key;\n      this[thisKey] = fullStyle[key];\n    }\n    this.update();\n    this._tick = 0;\n  }\n  /**\n   * Alignment for multiline text, does not affect single line text.\n   * @type {'left'|'center'|'right'|'justify'}\n   */\n  get align() {\n    return this._align;\n  }\n  set align(value) {\n    if (this._align === value)\n      return;\n    this._align = value;\n    this.update();\n  }\n  /** Indicates if lines can be wrapped within words, it needs wordWrap to be set to true. */\n  get breakWords() {\n    return this._breakWords;\n  }\n  set breakWords(value) {\n    if (this._breakWords === value)\n      return;\n    this._breakWords = value;\n    this.update();\n  }\n  /** Set a drop shadow for the text. */\n  get dropShadow() {\n    return this._dropShadow;\n  }\n  set dropShadow(value) {\n    if (this._dropShadow === value)\n      return;\n    if (value !== null && typeof value === \"object\") {\n      this._dropShadow = this._createProxy({ ..._TextStyle.defaultDropShadow, ...value });\n    } else {\n      this._dropShadow = value ? this._createProxy({ ..._TextStyle.defaultDropShadow }) : null;\n    }\n    this.update();\n  }\n  /** The font family, can be a single font name, or a list of names where the first is the preferred font. */\n  get fontFamily() {\n    return this._fontFamily;\n  }\n  set fontFamily(value) {\n    if (this._fontFamily === value)\n      return;\n    this._fontFamily = value;\n    this.update();\n  }\n  /** The font size (as a number it converts to px, but as a string, equivalents are '26px','20pt','160%' or '1.6em') */\n  get fontSize() {\n    return this._fontSize;\n  }\n  set fontSize(value) {\n    if (this._fontSize === value)\n      return;\n    if (typeof value === \"string\") {\n      this._fontSize = parseInt(value, 10);\n    } else {\n      this._fontSize = value;\n    }\n    this.update();\n  }\n  /**\n   * The font style.\n   * @type {'normal'|'italic'|'oblique'}\n   */\n  get fontStyle() {\n    return this._fontStyle;\n  }\n  set fontStyle(value) {\n    if (this._fontStyle === value)\n      return;\n    this._fontStyle = value.toLowerCase();\n    this.update();\n  }\n  /**\n   * The font variant.\n   * @type {'normal'|'small-caps'}\n   */\n  get fontVariant() {\n    return this._fontVariant;\n  }\n  set fontVariant(value) {\n    if (this._fontVariant === value)\n      return;\n    this._fontVariant = value;\n    this.update();\n  }\n  /**\n   * The font weight.\n   * @type {'normal'|'bold'|'bolder'|'lighter'|'100'|'200'|'300'|'400'|'500'|'600'|'700'|'800'|'900'}\n   */\n  get fontWeight() {\n    return this._fontWeight;\n  }\n  set fontWeight(value) {\n    if (this._fontWeight === value)\n      return;\n    this._fontWeight = value;\n    this.update();\n  }\n  /** The space between lines. */\n  get leading() {\n    return this._leading;\n  }\n  set leading(value) {\n    if (this._leading === value)\n      return;\n    this._leading = value;\n    this.update();\n  }\n  /** The amount of spacing between letters, default is 0. */\n  get letterSpacing() {\n    return this._letterSpacing;\n  }\n  set letterSpacing(value) {\n    if (this._letterSpacing === value)\n      return;\n    this._letterSpacing = value;\n    this.update();\n  }\n  /** The line height, a number that represents the vertical space that a letter uses. */\n  get lineHeight() {\n    return this._lineHeight;\n  }\n  set lineHeight(value) {\n    if (this._lineHeight === value)\n      return;\n    this._lineHeight = value;\n    this.update();\n  }\n  /**\n   * Occasionally some fonts are cropped. Adding some padding will prevent this from happening\n   * by adding padding to all sides of the text.\n   * > [!NOTE] This will NOT affect the positioning or bounds of the text.\n   */\n  get padding() {\n    return this._padding;\n  }\n  set padding(value) {\n    if (this._padding === value)\n      return;\n    this._padding = value;\n    this.update();\n  }\n  /**\n   * An optional filter or array of filters to apply to the text, allowing for advanced visual effects.\n   * These filters will be applied to the text as it is created, resulting in faster rendering for static text\n   * compared to applying the filter directly to the text object (which would be applied at run time).\n   * @default null\n   */\n  get filters() {\n    return this._filters;\n  }\n  set filters(value) {\n    if (this._filters === value)\n      return;\n    this._filters = Object.freeze(value);\n    this.update();\n  }\n  /**\n   * Trim transparent borders from the text texture.\n   * > [!IMPORTANT] PERFORMANCE WARNING:\n   * > This is a costly operation as it requires scanning pixel alpha values.\n   * > Avoid using `trim: true` for dynamic text, as it could significantly impact performance.\n   */\n  get trim() {\n    return this._trim;\n  }\n  set trim(value) {\n    if (this._trim === value)\n      return;\n    this._trim = value;\n    this.update();\n  }\n  /**\n   * The baseline of the text that is rendered.\n   * @type {'alphabetic'|'top'|'hanging'|'middle'|'ideographic'|'bottom'}\n   */\n  get textBaseline() {\n    return this._textBaseline;\n  }\n  set textBaseline(value) {\n    if (this._textBaseline === value)\n      return;\n    this._textBaseline = value;\n    this.update();\n  }\n  /**\n   * How newlines and spaces should be handled.\n   * Default is 'pre' (preserve, preserve).\n   *\n   *  value       | New lines     |   Spaces\n   *  ---         | ---           |   ---\n   * 'normal'     | Collapse      |   Collapse\n   * 'pre'        | Preserve      |   Preserve\n   * 'pre-line'   | Preserve      |   Collapse\n   * @type {'normal'|'pre'|'pre-line'}\n   */\n  get whiteSpace() {\n    return this._whiteSpace;\n  }\n  set whiteSpace(value) {\n    if (this._whiteSpace === value)\n      return;\n    this._whiteSpace = value;\n    this.update();\n  }\n  /** Indicates if word wrap should be used. */\n  get wordWrap() {\n    return this._wordWrap;\n  }\n  set wordWrap(value) {\n    if (this._wordWrap === value)\n      return;\n    this._wordWrap = value;\n    this.update();\n  }\n  /** The width at which text will wrap, it needs wordWrap to be set to true. */\n  get wordWrapWidth() {\n    return this._wordWrapWidth;\n  }\n  set wordWrapWidth(value) {\n    if (this._wordWrapWidth === value)\n      return;\n    this._wordWrapWidth = value;\n    this.update();\n  }\n  /**\n   * The fill style that will be used to color the text.\n   * This can be:\n   * - A color string like 'red', '#00FF00', or 'rgba(255,0,0,0.5)'\n   * - A hex number like 0xff0000 for red\n   * - A FillStyle object with properties like { color: 0xff0000, alpha: 0.5 }\n   * - A FillGradient for gradient fills\n   * - A FillPattern for pattern/texture fills\n   *\n   * When using a FillGradient, vertical gradients (angle of 90 degrees) are applied per line of text,\n   * while gradients at any other angle are spread across the entire text body as a whole.\n   * @example\n   * // Vertical gradient applied per line\n   * const verticalGradient = new FillGradient(0, 0, 0, 1)\n   *     .addColorStop(0, 0xff0000)\n   *     .addColorStop(1, 0x0000ff);\n   *\n   * const text = new Text({\n   *     text: 'Line 1\\nLine 2',\n   *     style: { fill: verticalGradient }\n   * });\n   *\n   * To manage the gradient in a global scope, set the textureSpace property of the FillGradient to 'global'.\n   * @type {string|number|FillStyle|FillGradient|FillPattern}\n   */\n  get fill() {\n    return this._originalFill;\n  }\n  set fill(value) {\n    if (value === this._originalFill)\n      return;\n    this._originalFill = value;\n    if (this._isFillStyle(value)) {\n      this._originalFill = this._createProxy({ ...GraphicsContext.defaultFillStyle, ...value }, () => {\n        this._fill = toFillStyle(\n          { ...this._originalFill },\n          GraphicsContext.defaultFillStyle\n        );\n      });\n    }\n    this._fill = toFillStyle(\n      value === 0 ? \"black\" : value,\n      GraphicsContext.defaultFillStyle\n    );\n    this.update();\n  }\n  /** A fillstyle that will be used on the text stroke, e.g., 'blue', '#FCFF00'. */\n  get stroke() {\n    return this._originalStroke;\n  }\n  set stroke(value) {\n    if (value === this._originalStroke)\n      return;\n    this._originalStroke = value;\n    if (this._isFillStyle(value)) {\n      this._originalStroke = this._createProxy({ ...GraphicsContext.defaultStrokeStyle, ...value }, () => {\n        this._stroke = toStrokeStyle(\n          { ...this._originalStroke },\n          GraphicsContext.defaultStrokeStyle\n        );\n      });\n    }\n    this._stroke = toStrokeStyle(value, GraphicsContext.defaultStrokeStyle);\n    this.update();\n  }\n  update() {\n    this._tick++;\n    this.emit(\"update\", this);\n  }\n  /** Resets all properties to the default values */\n  reset() {\n    const defaultStyle = _TextStyle.defaultTextStyle;\n    for (const key in defaultStyle) {\n      this[key] = defaultStyle[key];\n    }\n  }\n  /**\n   * Returns a unique key for this instance.\n   * This key is used for caching.\n   * @returns {string} Unique key for the instance\n   */\n  get styleKey() {\n    return `${this.uid}-${this._tick}`;\n  }\n  /**\n   * Creates a new TextStyle object with the same values as this one.\n   * @returns New cloned TextStyle object\n   */\n  clone() {\n    return new _TextStyle({\n      align: this.align,\n      breakWords: this.breakWords,\n      dropShadow: this._dropShadow ? { ...this._dropShadow } : null,\n      fill: this._fill,\n      fontFamily: this.fontFamily,\n      fontSize: this.fontSize,\n      fontStyle: this.fontStyle,\n      fontVariant: this.fontVariant,\n      fontWeight: this.fontWeight,\n      leading: this.leading,\n      letterSpacing: this.letterSpacing,\n      lineHeight: this.lineHeight,\n      padding: this.padding,\n      stroke: this._stroke,\n      textBaseline: this.textBaseline,\n      whiteSpace: this.whiteSpace,\n      wordWrap: this.wordWrap,\n      wordWrapWidth: this.wordWrapWidth,\n      filters: this._filters ? [...this._filters] : void 0\n    });\n  }\n  /**\n   * Returns the final padding for the text style, taking into account any filters applied.\n   * Used internally for correct measurements\n   * @internal\n   * @returns {number} The final padding for the text style.\n   */\n  _getFinalPadding() {\n    let filterPadding = 0;\n    if (this._filters) {\n      for (let i = 0; i < this._filters.length; i++) {\n        filterPadding += this._filters[i].padding;\n      }\n    }\n    return Math.max(this._padding, filterPadding);\n  }\n  /**\n   * Destroys this text style.\n   * @param options - Options parameter. A boolean will act as if all options\n   *  have been set to that value\n   * @example\n   * // Destroy the text style and its textures\n   * textStyle.destroy({ texture: true, textureSource: true });\n   * textStyle.destroy(true);\n   */\n  destroy(options = false) {\n    this.removeAllListeners();\n    const destroyTexture = typeof options === \"boolean\" ? options : options?.texture;\n    if (destroyTexture) {\n      const destroyTextureSource = typeof options === \"boolean\" ? options : options?.textureSource;\n      if (this._fill?.texture) {\n        this._fill.texture.destroy(destroyTextureSource);\n      }\n      if (this._originalFill?.texture) {\n        this._originalFill.texture.destroy(destroyTextureSource);\n      }\n      if (this._stroke?.texture) {\n        this._stroke.texture.destroy(destroyTextureSource);\n      }\n      if (this._originalStroke?.texture) {\n        this._originalStroke.texture.destroy(destroyTextureSource);\n      }\n    }\n    this._fill = null;\n    this._stroke = null;\n    this.dropShadow = null;\n    this._originalStroke = null;\n    this._originalFill = null;\n  }\n  _createProxy(value, cb) {\n    return new Proxy(value, {\n      set: (target, property, newValue) => {\n        if (target[property] === newValue)\n          return true;\n        target[property] = newValue;\n        cb?.(property, newValue);\n        this.update();\n        return true;\n      }\n    });\n  }\n  _isFillStyle(value) {\n    return (value ?? null) !== null && !(Color.isColorLike(value) || value instanceof FillGradient || value instanceof FillPattern);\n  }\n};\n/**\n * Default drop shadow settings used when enabling drop shadows on text.\n * These values are used as the base configuration when drop shadows are enabled without specific settings.\n * @example\n * ```ts\n * // Customize default settings globally\n * TextStyle.defaultDropShadow.alpha = 0.5;    // 50% opacity for all shadows\n * TextStyle.defaultDropShadow.blur = 2;       // 2px blur for all shadows\n * TextStyle.defaultDropShadow.color = 'blue'; // Blue shadows by default\n * ```\n */\n_TextStyle.defaultDropShadow = {\n  alpha: 1,\n  angle: Math.PI / 6,\n  blur: 0,\n  color: \"black\",\n  distance: 5\n};\n/**\n * Default text style settings used when creating new text objects.\n * These values serve as the base configuration and can be customized globally.\n * @example\n * ```ts\n * // Customize default text style globally\n * TextStyle.defaultTextStyle.fontSize = 16;\n * TextStyle.defaultTextStyle.fill = 0x333333;\n * TextStyle.defaultTextStyle.fontFamily = ['Arial', 'Helvetica', 'sans-serif'];\n * ```\n */\n_TextStyle.defaultTextStyle = {\n  align: \"left\",\n  breakWords: false,\n  dropShadow: null,\n  fill: \"black\",\n  fontFamily: \"Arial\",\n  fontSize: 26,\n  fontStyle: \"normal\",\n  fontVariant: \"normal\",\n  fontWeight: \"normal\",\n  leading: 0,\n  letterSpacing: 0,\n  lineHeight: 0,\n  padding: 0,\n  stroke: null,\n  textBaseline: \"alphabetic\",\n  trim: false,\n  whiteSpace: \"pre\",\n  wordWrap: false,\n  wordWrapWidth: 100\n};\nlet TextStyle = _TextStyle;\nfunction convertV7Tov8Style(style) {\n  const oldStyle = style;\n  if (typeof oldStyle.dropShadow === \"boolean\" && oldStyle.dropShadow) {\n    const defaults = TextStyle.defaultDropShadow;\n    style.dropShadow = {\n      alpha: oldStyle.dropShadowAlpha ?? defaults.alpha,\n      angle: oldStyle.dropShadowAngle ?? defaults.angle,\n      blur: oldStyle.dropShadowBlur ?? defaults.blur,\n      color: oldStyle.dropShadowColor ?? defaults.color,\n      distance: oldStyle.dropShadowDistance ?? defaults.distance\n    };\n  }\n  if (oldStyle.strokeThickness !== void 0) {\n    deprecation(v8_0_0, \"strokeThickness is now a part of stroke\");\n    const color = oldStyle.stroke;\n    let obj = {};\n    if (Color.isColorLike(color)) {\n      obj.color = color;\n    } else if (color instanceof FillGradient || color instanceof FillPattern) {\n      obj.fill = color;\n    } else if (Object.hasOwnProperty.call(color, \"color\") || Object.hasOwnProperty.call(color, \"fill\")) {\n      obj = color;\n    } else {\n      throw new Error(\"Invalid stroke value.\");\n    }\n    style.stroke = {\n      ...obj,\n      width: oldStyle.strokeThickness\n    };\n  }\n  if (Array.isArray(oldStyle.fillGradientStops)) {\n    deprecation(v8_0_0, \"gradient fill is now a fill pattern: `new FillGradient(...)`\");\n    if (!Array.isArray(oldStyle.fill) || oldStyle.fill.length === 0) {\n      throw new Error(\"Invalid fill value. Expected an array of colors for gradient fill.\");\n    }\n    if (oldStyle.fill.length !== oldStyle.fillGradientStops.length) {\n      warn(\"The number of fill colors must match the number of fill gradient stops.\");\n    }\n    const gradientFill = new FillGradient({\n      start: { x: 0, y: 0 },\n      end: { x: 0, y: 1 },\n      textureSpace: \"local\"\n    });\n    const fillGradientStops = oldStyle.fillGradientStops.slice();\n    const fills = oldStyle.fill.map((color) => Color.shared.setValue(color).toNumber());\n    fillGradientStops.forEach((stop, index) => {\n      gradientFill.addColorStop(stop, fills[index]);\n    });\n    style.fill = {\n      fill: gradientFill\n    };\n  }\n}\n\nexport { TextStyle };\n//# sourceMappingURL=TextStyle.mjs.map\n","import { DOMAdapter } from '../../../../environment/adapter.mjs';\nimport { nextPow2 } from '../../../../maths/misc/pow2.mjs';\nimport { GlobalResourceRegistry } from '../../../../utils/pool/GlobalResourceRegistry.mjs';\n\n\"use strict\";\nclass CanvasPoolClass {\n  constructor(canvasOptions) {\n    this._canvasPool = /* @__PURE__ */ Object.create(null);\n    this.canvasOptions = canvasOptions || {};\n    this.enableFullScreen = false;\n  }\n  /**\n   * Creates texture with params that were specified in pool constructor.\n   * @param pixelWidth - Width of texture in pixels.\n   * @param pixelHeight - Height of texture in pixels.\n   */\n  _createCanvasAndContext(pixelWidth, pixelHeight) {\n    const canvas = DOMAdapter.get().createCanvas();\n    canvas.width = pixelWidth;\n    canvas.height = pixelHeight;\n    const context = canvas.getContext(\"2d\");\n    return { canvas, context };\n  }\n  /**\n   * Gets a Power-of-Two render texture or fullScreen texture\n   * @param minWidth - The minimum width of the render texture.\n   * @param minHeight - The minimum height of the render texture.\n   * @param resolution - The resolution of the render texture.\n   * @returns The new render texture.\n   */\n  getOptimalCanvasAndContext(minWidth, minHeight, resolution = 1) {\n    minWidth = Math.ceil(minWidth * resolution - 1e-6);\n    minHeight = Math.ceil(minHeight * resolution - 1e-6);\n    minWidth = nextPow2(minWidth);\n    minHeight = nextPow2(minHeight);\n    const key = (minWidth << 17) + (minHeight << 1);\n    if (!this._canvasPool[key]) {\n      this._canvasPool[key] = [];\n    }\n    let canvasAndContext = this._canvasPool[key].pop();\n    if (!canvasAndContext) {\n      canvasAndContext = this._createCanvasAndContext(minWidth, minHeight);\n    }\n    return canvasAndContext;\n  }\n  /**\n   * Place a render texture back into the pool.\n   * @param canvasAndContext\n   */\n  returnCanvasAndContext(canvasAndContext) {\n    const canvas = canvasAndContext.canvas;\n    const { width, height } = canvas;\n    const key = (width << 17) + (height << 1);\n    canvasAndContext.context.resetTransform();\n    canvasAndContext.context.clearRect(0, 0, width, height);\n    this._canvasPool[key].push(canvasAndContext);\n  }\n  clear() {\n    this._canvasPool = {};\n  }\n}\nconst CanvasPool = new CanvasPoolClass();\nGlobalResourceRegistry.register(CanvasPool);\n\nexport { CanvasPool, CanvasPoolClass };\n//# sourceMappingURL=CanvasPool.mjs.map\n","import { Color } from '../../../../color/Color.mjs';\nimport { Matrix } from '../../../../maths/matrix/Matrix.mjs';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { warn } from '../../../../utils/logging/warn.mjs';\nimport { FillGradient } from '../../../graphics/shared/fill/FillGradient.mjs';\nimport { FillPattern } from '../../../graphics/shared/fill/FillPattern.mjs';\n\n\"use strict\";\nconst PRECISION = 1e5;\nfunction getCanvasFillStyle(fillStyle, context, textMetrics, padding = 0) {\n  if (fillStyle.texture === Texture.WHITE && !fillStyle.fill) {\n    return Color.shared.setValue(fillStyle.color).setAlpha(fillStyle.alpha ?? 1).toHexa();\n  } else if (!fillStyle.fill) {\n    const pattern = context.createPattern(fillStyle.texture.source.resource, \"repeat\");\n    const tempMatrix = fillStyle.matrix.copyTo(Matrix.shared);\n    tempMatrix.scale(fillStyle.texture.frame.width, fillStyle.texture.frame.height);\n    pattern.setTransform(tempMatrix);\n    return pattern;\n  } else if (fillStyle.fill instanceof FillPattern) {\n    const fillPattern = fillStyle.fill;\n    const pattern = context.createPattern(fillPattern.texture.source.resource, \"repeat\");\n    const tempMatrix = fillPattern.transform.copyTo(Matrix.shared);\n    tempMatrix.scale(\n      fillPattern.texture.frame.width,\n      fillPattern.texture.frame.height\n    );\n    pattern.setTransform(tempMatrix);\n    return pattern;\n  } else if (fillStyle.fill instanceof FillGradient) {\n    const fillGradient = fillStyle.fill;\n    const isLinear = fillGradient.type === \"linear\";\n    const isLocal = fillGradient.textureSpace === \"local\";\n    let width = 1;\n    let height = 1;\n    if (isLocal && textMetrics) {\n      width = textMetrics.width + padding;\n      height = textMetrics.height + padding;\n    }\n    let gradient;\n    let isNearlyVertical = false;\n    if (isLinear) {\n      const { start, end } = fillGradient;\n      gradient = context.createLinearGradient(\n        start.x * width,\n        start.y * height,\n        end.x * width,\n        end.y * height\n      );\n      isNearlyVertical = Math.abs(end.x - start.x) < Math.abs((end.y - start.y) * 0.1);\n    } else {\n      const { center, innerRadius, outerCenter, outerRadius } = fillGradient;\n      gradient = context.createRadialGradient(\n        center.x * width,\n        center.y * height,\n        innerRadius * width,\n        outerCenter.x * width,\n        outerCenter.y * height,\n        outerRadius * width\n      );\n    }\n    if (isNearlyVertical && isLocal && textMetrics) {\n      const ratio = textMetrics.lineHeight / height;\n      for (let i = 0; i < textMetrics.lines.length; i++) {\n        const start = (i * textMetrics.lineHeight + padding / 2) / height;\n        fillGradient.colorStops.forEach((stop) => {\n          const globalStop = start + stop.offset * ratio;\n          gradient.addColorStop(\n            // fix to 5 decimal places to avoid floating point precision issues\n            Math.floor(globalStop * PRECISION) / PRECISION,\n            Color.shared.setValue(stop.color).toHex()\n          );\n        });\n      }\n    } else {\n      fillGradient.colorStops.forEach((stop) => {\n        gradient.addColorStop(stop.offset, Color.shared.setValue(stop.color).toHex());\n      });\n    }\n    return gradient;\n  }\n  warn(\"FillStyle not recognised\", fillStyle);\n  return \"red\";\n}\n\nexport { getCanvasFillStyle };\n//# sourceMappingURL=getCanvasFillStyle.mjs.map\n","import { Color } from '../../color/Color.mjs';\nimport { Rectangle } from '../../maths/shapes/Rectangle.mjs';\nimport { CanvasPool } from '../../rendering/renderers/shared/texture/CanvasPool.mjs';\nimport { ImageSource } from '../../rendering/renderers/shared/texture/sources/ImageSource.mjs';\nimport { Texture } from '../../rendering/renderers/shared/texture/Texture.mjs';\nimport { TextureStyle } from '../../rendering/renderers/shared/texture/TextureStyle.mjs';\nimport { deprecation, v8_0_0 } from '../../utils/logging/deprecation.mjs';\nimport { CanvasTextMetrics } from '../text/canvas/CanvasTextMetrics.mjs';\nimport { fontStringFromTextStyle } from '../text/canvas/utils/fontStringFromTextStyle.mjs';\nimport { getCanvasFillStyle } from '../text/canvas/utils/getCanvasFillStyle.mjs';\nimport { TextStyle } from '../text/TextStyle.mjs';\nimport { AbstractBitmapFont } from './AbstractBitmapFont.mjs';\n\n\"use strict\";\nconst _DynamicBitmapFont = class _DynamicBitmapFont extends AbstractBitmapFont {\n  /**\n   * @param options - The options for the dynamic bitmap font.\n   */\n  constructor(options) {\n    super();\n    /**\n     * this is a resolution modifier for the font size..\n     * texture resolution will also be used to scale texture according to its font size also\n     */\n    this.resolution = 1;\n    /** The pages of the font. */\n    this.pages = [];\n    this._padding = 0;\n    this._measureCache = /* @__PURE__ */ Object.create(null);\n    this._currentChars = [];\n    this._currentX = 0;\n    this._currentY = 0;\n    this._currentMaxCharHeight = 0;\n    this._currentPageIndex = -1;\n    this._skipKerning = false;\n    const dynamicOptions = { ..._DynamicBitmapFont.defaultOptions, ...options };\n    this._textureSize = dynamicOptions.textureSize;\n    this._mipmap = dynamicOptions.mipmap;\n    const style = dynamicOptions.style.clone();\n    if (dynamicOptions.overrideFill) {\n      style._fill.color = 16777215;\n      style._fill.alpha = 1;\n      style._fill.texture = Texture.WHITE;\n      style._fill.fill = null;\n    }\n    this.applyFillAsTint = dynamicOptions.overrideFill;\n    const requestedFontSize = style.fontSize;\n    style.fontSize = this.baseMeasurementFontSize;\n    const font = fontStringFromTextStyle(style);\n    if (dynamicOptions.overrideSize) {\n      if (style._stroke) {\n        style._stroke.width *= this.baseRenderedFontSize / requestedFontSize;\n      }\n    } else {\n      style.fontSize = this.baseRenderedFontSize = requestedFontSize;\n    }\n    this._style = style;\n    this._skipKerning = dynamicOptions.skipKerning ?? false;\n    this.resolution = dynamicOptions.resolution ?? 1;\n    this._padding = dynamicOptions.padding ?? 4;\n    if (dynamicOptions.textureStyle) {\n      this._textureStyle = dynamicOptions.textureStyle instanceof TextureStyle ? dynamicOptions.textureStyle : new TextureStyle(dynamicOptions.textureStyle);\n    }\n    this.fontMetrics = CanvasTextMetrics.measureFont(font);\n    this.lineHeight = style.lineHeight || this.fontMetrics.fontSize || style.fontSize;\n  }\n  ensureCharacters(chars) {\n    const charList = CanvasTextMetrics.graphemeSegmenter(chars).filter((char) => !this._currentChars.includes(char)).filter((char, index, self) => self.indexOf(char) === index);\n    if (!charList.length)\n      return;\n    this._currentChars = [...this._currentChars, ...charList];\n    let pageData;\n    if (this._currentPageIndex === -1) {\n      pageData = this._nextPage();\n    } else {\n      pageData = this.pages[this._currentPageIndex];\n    }\n    let { canvas, context } = pageData.canvasAndContext;\n    let textureSource = pageData.texture.source;\n    const style = this._style;\n    let currentX = this._currentX;\n    let currentY = this._currentY;\n    let currentMaxCharHeight = this._currentMaxCharHeight;\n    const fontScale = this.baseRenderedFontSize / this.baseMeasurementFontSize;\n    const padding = this._padding * fontScale;\n    let skipTexture = false;\n    const maxTextureWidth = canvas.width / this.resolution;\n    const maxTextureHeight = canvas.height / this.resolution;\n    for (let i = 0; i < charList.length; i++) {\n      const char = charList[i];\n      const metrics = CanvasTextMetrics.measureText(char, style, canvas, false);\n      metrics.lineHeight = metrics.height;\n      const width = metrics.width * fontScale;\n      const textureGlyphWidth = Math.ceil((style.fontStyle === \"italic\" ? 2 : 1) * width);\n      const height = metrics.height * fontScale;\n      const paddedWidth = textureGlyphWidth + padding * 2;\n      const paddedHeight = height + padding * 2;\n      skipTexture = false;\n      if (char !== \"\\n\" && char !== \"\\r\" && char !== \"\t\" && char !== \" \") {\n        skipTexture = true;\n        currentMaxCharHeight = Math.ceil(Math.max(paddedHeight, currentMaxCharHeight));\n      }\n      if (currentX + paddedWidth > maxTextureWidth) {\n        currentY += currentMaxCharHeight;\n        currentMaxCharHeight = paddedHeight;\n        currentX = 0;\n        if (currentY + currentMaxCharHeight > maxTextureHeight) {\n          textureSource.update();\n          const pageData2 = this._nextPage();\n          canvas = pageData2.canvasAndContext.canvas;\n          context = pageData2.canvasAndContext.context;\n          textureSource = pageData2.texture.source;\n          currentX = 0;\n          currentY = 0;\n          currentMaxCharHeight = 0;\n        }\n      }\n      const xAdvance = width / fontScale - (style.dropShadow?.distance ?? 0) - (style._stroke?.width ?? 0);\n      this.chars[char] = {\n        id: char.codePointAt(0),\n        xOffset: -this._padding,\n        yOffset: -this._padding,\n        xAdvance,\n        kerning: {}\n      };\n      if (skipTexture) {\n        this._drawGlyph(\n          context,\n          metrics,\n          currentX + padding,\n          currentY + padding,\n          fontScale,\n          style\n        );\n        const px = textureSource.width * fontScale;\n        const py = textureSource.height * fontScale;\n        const frame = new Rectangle(\n          currentX / px * textureSource.width,\n          currentY / py * textureSource.height,\n          paddedWidth / px * textureSource.width,\n          paddedHeight / py * textureSource.height\n        );\n        this.chars[char].texture = new Texture({\n          source: textureSource,\n          frame\n        });\n        currentX += Math.ceil(paddedWidth);\n      }\n    }\n    textureSource.update();\n    this._currentX = currentX;\n    this._currentY = currentY;\n    this._currentMaxCharHeight = currentMaxCharHeight;\n    this._skipKerning && this._applyKerning(charList, context);\n  }\n  /**\n   * @deprecated since 8.0.0\n   * The map of base page textures (i.e., sheets of glyphs).\n   */\n  get pageTextures() {\n    deprecation(v8_0_0, \"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead.\");\n    return this.pages;\n  }\n  _applyKerning(newChars, context) {\n    const measureCache = this._measureCache;\n    for (let i = 0; i < newChars.length; i++) {\n      const first = newChars[i];\n      for (let j = 0; j < this._currentChars.length; j++) {\n        const second = this._currentChars[j];\n        let c1 = measureCache[first];\n        if (!c1)\n          c1 = measureCache[first] = context.measureText(first).width;\n        let c2 = measureCache[second];\n        if (!c2)\n          c2 = measureCache[second] = context.measureText(second).width;\n        let total = context.measureText(first + second).width;\n        let amount = total - (c1 + c2);\n        if (amount) {\n          this.chars[first].kerning[second] = amount;\n        }\n        total = context.measureText(first + second).width;\n        amount = total - (c1 + c2);\n        if (amount) {\n          this.chars[second].kerning[first] = amount;\n        }\n      }\n    }\n  }\n  _nextPage() {\n    this._currentPageIndex++;\n    const textureResolution = this.resolution;\n    const canvasAndContext = CanvasPool.getOptimalCanvasAndContext(\n      this._textureSize,\n      this._textureSize,\n      textureResolution\n    );\n    this._setupContext(canvasAndContext.context, this._style, textureResolution);\n    const resolution = textureResolution * (this.baseRenderedFontSize / this.baseMeasurementFontSize);\n    const texture = new Texture({\n      source: new ImageSource({\n        resource: canvasAndContext.canvas,\n        resolution,\n        alphaMode: \"premultiply-alpha-on-upload\",\n        autoGenerateMipmaps: this._mipmap\n      })\n    });\n    if (this._textureStyle) {\n      texture.source.style = this._textureStyle;\n    }\n    const pageData = {\n      canvasAndContext,\n      texture\n    };\n    this.pages[this._currentPageIndex] = pageData;\n    return pageData;\n  }\n  // canvas style!\n  _setupContext(context, style, resolution) {\n    style.fontSize = this.baseRenderedFontSize;\n    context.scale(resolution, resolution);\n    context.font = fontStringFromTextStyle(style);\n    style.fontSize = this.baseMeasurementFontSize;\n    context.textBaseline = style.textBaseline;\n    const stroke = style._stroke;\n    const strokeThickness = stroke?.width ?? 0;\n    if (stroke) {\n      context.lineWidth = strokeThickness;\n      context.lineJoin = stroke.join;\n      context.miterLimit = stroke.miterLimit;\n      context.strokeStyle = getCanvasFillStyle(stroke, context);\n    }\n    if (style._fill) {\n      context.fillStyle = getCanvasFillStyle(style._fill, context);\n    }\n    if (style.dropShadow) {\n      const shadowOptions = style.dropShadow;\n      const rgb = Color.shared.setValue(shadowOptions.color).toArray();\n      const dropShadowBlur = shadowOptions.blur * resolution;\n      const dropShadowDistance = shadowOptions.distance * resolution;\n      context.shadowColor = `rgba(${rgb[0] * 255},${rgb[1] * 255},${rgb[2] * 255},${shadowOptions.alpha})`;\n      context.shadowBlur = dropShadowBlur;\n      context.shadowOffsetX = Math.cos(shadowOptions.angle) * dropShadowDistance;\n      context.shadowOffsetY = Math.sin(shadowOptions.angle) * dropShadowDistance;\n    } else {\n      context.shadowColor = \"black\";\n      context.shadowBlur = 0;\n      context.shadowOffsetX = 0;\n      context.shadowOffsetY = 0;\n    }\n  }\n  _drawGlyph(context, metrics, x, y, fontScale, style) {\n    const char = metrics.text;\n    const fontProperties = metrics.fontProperties;\n    const stroke = style._stroke;\n    const strokeThickness = (stroke?.width ?? 0) * fontScale;\n    const tx = x + strokeThickness / 2;\n    const ty = y - strokeThickness / 2;\n    const descent = fontProperties.descent * fontScale;\n    const lineHeight = metrics.lineHeight * fontScale;\n    let removeShadow = false;\n    if (style.stroke && strokeThickness) {\n      removeShadow = true;\n      context.strokeText(char, tx, ty + lineHeight - descent);\n    }\n    const { shadowBlur, shadowOffsetX, shadowOffsetY } = context;\n    if (style._fill) {\n      if (removeShadow) {\n        context.shadowBlur = 0;\n        context.shadowOffsetX = 0;\n        context.shadowOffsetY = 0;\n      }\n      context.fillText(char, tx, ty + lineHeight - descent);\n    }\n    if (removeShadow) {\n      context.shadowBlur = shadowBlur;\n      context.shadowOffsetX = shadowOffsetX;\n      context.shadowOffsetY = shadowOffsetY;\n    }\n  }\n  destroy() {\n    super.destroy();\n    for (let i = 0; i < this.pages.length; i++) {\n      const { canvasAndContext, texture } = this.pages[i];\n      CanvasPool.returnCanvasAndContext(canvasAndContext);\n      texture.destroy(true);\n    }\n    this.pages = null;\n  }\n};\n_DynamicBitmapFont.defaultOptions = {\n  textureSize: 512,\n  style: new TextStyle(),\n  mipmap: true\n};\nlet DynamicBitmapFont = _DynamicBitmapFont;\n\nexport { DynamicBitmapFont };\n//# sourceMappingURL=DynamicBitmapFont.mjs.map\n","\"use strict\";\nfunction getBitmapTextLayout(chars, style, font, trimEnd) {\n  const layoutData = {\n    width: 0,\n    height: 0,\n    offsetY: 0,\n    scale: style.fontSize / font.baseMeasurementFontSize,\n    lines: [{\n      width: 0,\n      charPositions: [],\n      spaceWidth: 0,\n      spacesIndex: [],\n      chars: []\n    }]\n  };\n  layoutData.offsetY = font.baseLineOffset;\n  let currentLine = layoutData.lines[0];\n  let previousChar = null;\n  let firstWord = true;\n  const currentWord = {\n    spaceWord: false,\n    width: 0,\n    start: 0,\n    index: 0,\n    // use index to not modify the array as we use it a lot!\n    positions: [],\n    chars: []\n  };\n  const scale = font.baseMeasurementFontSize / style.fontSize;\n  const adjustedLetterSpacing = style.letterSpacing * scale;\n  const adjustedWordWrapWidth = style.wordWrapWidth * scale;\n  const adjustedLineHeight = style.lineHeight ? style.lineHeight * scale : font.lineHeight;\n  const breakWords = style.wordWrap && style.breakWords;\n  const nextWord = (word) => {\n    const start = currentLine.width;\n    for (let j = 0; j < currentWord.index; j++) {\n      const position = word.positions[j];\n      currentLine.chars.push(word.chars[j]);\n      currentLine.charPositions.push(position + start);\n    }\n    currentLine.width += word.width;\n    firstWord = false;\n    currentWord.width = 0;\n    currentWord.index = 0;\n    currentWord.chars.length = 0;\n  };\n  const nextLine = () => {\n    let index = currentLine.chars.length - 1;\n    if (trimEnd) {\n      let lastChar = currentLine.chars[index];\n      while (lastChar === \" \") {\n        currentLine.width -= font.chars[lastChar].xAdvance;\n        lastChar = currentLine.chars[--index];\n      }\n    }\n    layoutData.width = Math.max(layoutData.width, currentLine.width);\n    currentLine = {\n      width: 0,\n      charPositions: [],\n      chars: [],\n      spaceWidth: 0,\n      spacesIndex: []\n    };\n    firstWord = true;\n    layoutData.lines.push(currentLine);\n    layoutData.height += adjustedLineHeight;\n  };\n  const checkIsOverflow = (lineWidth) => lineWidth - adjustedLetterSpacing > adjustedWordWrapWidth;\n  for (let i = 0; i < chars.length + 1; i++) {\n    let char;\n    const isEnd = i === chars.length;\n    if (!isEnd) {\n      char = chars[i];\n    }\n    const charData = font.chars[char] || font.chars[\" \"];\n    const isSpace = /(?:\\s)/.test(char);\n    const isWordBreak = isSpace || char === \"\\r\" || char === \"\\n\" || isEnd;\n    if (isWordBreak) {\n      const addWordToNextLine = !firstWord && style.wordWrap && checkIsOverflow(currentLine.width + currentWord.width);\n      if (addWordToNextLine) {\n        nextLine();\n        nextWord(currentWord);\n        if (!isEnd) {\n          currentLine.charPositions.push(0);\n        }\n      } else {\n        currentWord.start = currentLine.width;\n        nextWord(currentWord);\n        if (!isEnd) {\n          currentLine.charPositions.push(0);\n        }\n      }\n      if (char === \"\\r\" || char === \"\\n\") {\n        nextLine();\n      } else if (!isEnd) {\n        const spaceWidth = charData.xAdvance + (charData.kerning[previousChar] || 0) + adjustedLetterSpacing;\n        currentLine.width += spaceWidth;\n        currentLine.spaceWidth = spaceWidth;\n        currentLine.spacesIndex.push(currentLine.charPositions.length);\n        currentLine.chars.push(char);\n      }\n    } else {\n      const kerning = charData.kerning[previousChar] || 0;\n      const nextCharWidth = charData.xAdvance + kerning + adjustedLetterSpacing;\n      const addWordToNextLine = breakWords && checkIsOverflow(currentLine.width + currentWord.width + nextCharWidth);\n      if (addWordToNextLine) {\n        nextWord(currentWord);\n        nextLine();\n      }\n      currentWord.positions[currentWord.index++] = currentWord.width + kerning;\n      currentWord.chars.push(char);\n      currentWord.width += nextCharWidth;\n    }\n    previousChar = char;\n  }\n  nextLine();\n  if (style.align === \"center\") {\n    alignCenter(layoutData);\n  } else if (style.align === \"right\") {\n    alignRight(layoutData);\n  } else if (style.align === \"justify\") {\n    alignJustify(layoutData);\n  }\n  return layoutData;\n}\nfunction alignCenter(measurementData) {\n  for (let i = 0; i < measurementData.lines.length; i++) {\n    const line = measurementData.lines[i];\n    const offset = measurementData.width / 2 - line.width / 2;\n    for (let j = 0; j < line.charPositions.length; j++) {\n      line.charPositions[j] += offset;\n    }\n  }\n}\nfunction alignRight(measurementData) {\n  for (let i = 0; i < measurementData.lines.length; i++) {\n    const line = measurementData.lines[i];\n    const offset = measurementData.width - line.width;\n    for (let j = 0; j < line.charPositions.length; j++) {\n      line.charPositions[j] += offset;\n    }\n  }\n}\nfunction alignJustify(measurementData) {\n  const width = measurementData.width;\n  for (let i = 0; i < measurementData.lines.length; i++) {\n    const line = measurementData.lines[i];\n    let indy = 0;\n    let spaceIndex = line.spacesIndex[indy++];\n    let offset = 0;\n    const totalSpaces = line.spacesIndex.length;\n    const newSpaceWidth = (width - line.width) / totalSpaces;\n    const spaceWidth = newSpaceWidth;\n    for (let j = 0; j < line.charPositions.length; j++) {\n      if (j === spaceIndex) {\n        spaceIndex = line.spacesIndex[indy++];\n        offset += spaceWidth;\n      }\n      line.charPositions[j] += offset;\n    }\n  }\n}\n\nexport { getBitmapTextLayout };\n//# sourceMappingURL=getBitmapTextLayout.mjs.map\n","\"use strict\";\nfunction resolveCharacters(chars) {\n  if (chars === \"\") {\n    return [];\n  }\n  if (typeof chars === \"string\") {\n    chars = [chars];\n  }\n  const result = [];\n  for (let i = 0, j = chars.length; i < j; i++) {\n    const item = chars[i];\n    if (Array.isArray(item)) {\n      if (item.length !== 2) {\n        throw new Error(`[BitmapFont]: Invalid character range length, expecting 2 got ${item.length}.`);\n      }\n      if (item[0].length === 0 || item[1].length === 0) {\n        throw new Error(\"[BitmapFont]: Invalid character delimiter.\");\n      }\n      const startCode = item[0].charCodeAt(0);\n      const endCode = item[1].charCodeAt(0);\n      if (endCode < startCode) {\n        throw new Error(\"[BitmapFont]: Invalid character range.\");\n      }\n      for (let i2 = startCode, j2 = endCode; i2 <= j2; i2++) {\n        result.push(String.fromCharCode(i2));\n      }\n    } else {\n      result.push(...Array.from(item));\n    }\n  }\n  if (result.length === 0) {\n    throw new Error(\"[BitmapFont]: Empty set when resolving characters.\");\n  }\n  return result;\n}\n\nexport { resolveCharacters };\n//# sourceMappingURL=resolveCharacters.mjs.map\n","import { lru } from 'tiny-lru';\nimport { Cache } from '../../assets/cache/Cache.mjs';\nimport { deprecation, v8_0_0 } from '../../utils/logging/deprecation.mjs';\nimport { warn } from '../../utils/logging/warn.mjs';\nimport { CanvasTextMetrics } from '../text/canvas/CanvasTextMetrics.mjs';\nimport { TextStyle } from '../text/TextStyle.mjs';\nimport { DynamicBitmapFont } from './DynamicBitmapFont.mjs';\nimport { getBitmapTextLayout } from './utils/getBitmapTextLayout.mjs';\nimport { resolveCharacters } from './utils/resolveCharacters.mjs';\n\n\"use strict\";\nlet fontCount = 0;\nclass BitmapFontManagerClass {\n  constructor() {\n    /**\n     * This character set includes all the letters in the alphabet (both lower- and upper- case).\n     * @type {string[][]}\n     * @example\n     * BitmapFont.from('ExampleFont', style, { chars: BitmapFont.ALPHA })\n     */\n    this.ALPHA = [[\"a\", \"z\"], [\"A\", \"Z\"], \" \"];\n    /**\n     * This character set includes all decimal digits (from 0 to 9).\n     * @type {string[][]}\n     * @example\n     * BitmapFont.from('ExampleFont', style, { chars: BitmapFont.NUMERIC })\n     */\n    this.NUMERIC = [[\"0\", \"9\"]];\n    /**\n     * This character set is the union of `BitmapFont.ALPHA` and `BitmapFont.NUMERIC`.\n     * @type {string[][]}\n     */\n    this.ALPHANUMERIC = [[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \" \"];\n    /**\n     * This character set consists of all the ASCII table.\n     * @type {string[][]}\n     * @see http://www.asciitable.com/\n     */\n    this.ASCII = [[\" \", \"~\"]];\n    /** Default options for installing a new BitmapFont. */\n    this.defaultOptions = {\n      chars: this.ALPHANUMERIC,\n      resolution: 1,\n      padding: 4,\n      skipKerning: false,\n      textureStyle: null\n    };\n    /** Cache for measured text layouts to avoid recalculating them multiple times. */\n    this.measureCache = lru(1e3);\n  }\n  /**\n   * Get a font for the specified text and style.\n   * @param text - The text to get the font for\n   * @param style - The style to use\n   */\n  getFont(text, style) {\n    let fontFamilyKey = `${style.fontFamily}-bitmap`;\n    let overrideFill = true;\n    if (style._fill.fill && !style._stroke) {\n      fontFamilyKey += style._fill.fill.styleKey;\n      overrideFill = false;\n    } else if (style._stroke || style.dropShadow) {\n      fontFamilyKey = `${style.styleKey}-bitmap`;\n      overrideFill = false;\n    }\n    if (!Cache.has(fontFamilyKey)) {\n      const styleCopy = Object.create(style);\n      styleCopy.lineHeight = 0;\n      const fnt = new DynamicBitmapFont({\n        style: styleCopy,\n        overrideFill,\n        overrideSize: true,\n        ...this.defaultOptions\n      });\n      fontCount++;\n      if (fontCount > 50) {\n        warn(\"BitmapText\", `You have dynamically created ${fontCount} bitmap fonts, this can be inefficient. Try pre installing your font styles using \\`BitmapFont.install({name:\"style1\", style})\\``);\n      }\n      fnt.once(\"destroy\", () => {\n        fontCount--;\n        Cache.remove(fontFamilyKey);\n      });\n      Cache.set(\n        fontFamilyKey,\n        fnt\n      );\n    }\n    const dynamicFont = Cache.get(fontFamilyKey);\n    dynamicFont.ensureCharacters?.(text);\n    return dynamicFont;\n  }\n  /**\n   * Get the layout of a text for the specified style.\n   * @param text - The text to get the layout for\n   * @param style - The style to use\n   * @param trimEnd - Whether to ignore whitespaces at the end of each line\n   */\n  getLayout(text, style, trimEnd = true) {\n    const bitmapFont = this.getFont(text, style);\n    const id = `${text}-${style.styleKey}-${trimEnd}`;\n    if (this.measureCache.has(id)) {\n      return this.measureCache.get(id);\n    }\n    const segments = CanvasTextMetrics.graphemeSegmenter(text);\n    const layoutData = getBitmapTextLayout(segments, style, bitmapFont, trimEnd);\n    this.measureCache.set(id, layoutData);\n    return layoutData;\n  }\n  /**\n   * Measure the text using the specified style.\n   * @param text - The text to measure\n   * @param style - The style to use\n   * @param trimEnd - Whether to ignore whitespaces at the end of each line\n   */\n  measureText(text, style, trimEnd = true) {\n    return this.getLayout(text, style, trimEnd);\n  }\n  // eslint-disable-next-line max-len\n  install(...args) {\n    let options = args[0];\n    if (typeof options === \"string\") {\n      options = {\n        name: options,\n        style: args[1],\n        chars: args[2]?.chars,\n        resolution: args[2]?.resolution,\n        padding: args[2]?.padding,\n        skipKerning: args[2]?.skipKerning\n      };\n      deprecation(v8_0_0, \"BitmapFontManager.install(name, style, options) is deprecated, use BitmapFontManager.install({name, style, ...options})\");\n    }\n    const name = options?.name;\n    if (!name) {\n      throw new Error(\"[BitmapFontManager] Property `name` is required.\");\n    }\n    options = { ...this.defaultOptions, ...options };\n    const textStyle = options.style;\n    const style = textStyle instanceof TextStyle ? textStyle : new TextStyle(textStyle);\n    const overrideFill = options.dynamicFill ?? this._canUseTintForStyle(style);\n    const font = new DynamicBitmapFont({\n      style,\n      overrideFill,\n      skipKerning: options.skipKerning,\n      padding: options.padding,\n      resolution: options.resolution,\n      overrideSize: false,\n      textureStyle: options.textureStyle\n    });\n    const flatChars = resolveCharacters(options.chars);\n    font.ensureCharacters(flatChars.join(\"\"));\n    Cache.set(`${name}-bitmap`, font);\n    font.once(\"destroy\", () => Cache.remove(`${name}-bitmap`));\n    return font;\n  }\n  /**\n   * Uninstalls a bitmap font from the cache.\n   * @param {string} name - The name of the bitmap font to uninstall.\n   */\n  uninstall(name) {\n    const cacheKey = `${name}-bitmap`;\n    const font = Cache.get(cacheKey);\n    if (font) {\n      font.destroy();\n    }\n  }\n  /**\n   * Determines if a style can use tinting instead of baking colors into the bitmap.\n   * Tinting is more efficient as it allows reusing the same bitmap with different colors.\n   * @param style - The text style to evaluate\n   * @returns true if the style can use tinting, false if colors must be baked in\n   * @private\n   */\n  _canUseTintForStyle(style) {\n    return !style._stroke && (!style.dropShadow || style.dropShadow.color === 0) && !style._fill.fill && style._fill.color === 16777215;\n  }\n}\nconst BitmapFontManager = new BitmapFontManagerClass();\n\nexport { BitmapFontManager };\n//# sourceMappingURL=BitmapFontManager.mjs.map\n","var vertex = \"in vec2 aPosition;\\nout vec2 vTextureCoord;\\n\\nuniform vec4 uInputSize;\\nuniform vec4 uOutputFrame;\\nuniform vec4 uOutputTexture;\\n\\nvec4 filterVertexPosition( void )\\n{\\n    vec2 position = aPosition * uOutputFrame.zw + uOutputFrame.xy;\\n    \\n    position.x = position.x * (2.0 / uOutputTexture.x) - 1.0;\\n    position.y = position.y * (2.0*uOutputTexture.z / uOutputTexture.y) - uOutputTexture.z;\\n\\n    return vec4(position, 0.0, 1.0);\\n}\\n\\nvec2 filterTextureCoord( void )\\n{\\n    return aPosition * (uOutputFrame.zw * uInputSize.zw);\\n}\\n\\nvoid main(void)\\n{\\n    gl_Position = filterVertexPosition();\\n    vTextureCoord = filterTextureCoord();\\n}\\n\";\n\nexport { vertex as default };\n//# sourceMappingURL=defaultFilter.vert.mjs.map\n","var fragment = \"in vec2 vTextureCoord;\\nout vec4 finalColor;\\nuniform sampler2D uTexture;\\nvoid main() {\\n    finalColor = texture(uTexture, vTextureCoord);\\n}\\n\";\n\nexport { fragment as default };\n//# sourceMappingURL=passthrough.frag.mjs.map\n","var source = \"struct GlobalFilterUniforms {\\n  uInputSize: vec4<f32>,\\n  uInputPixel: vec4<f32>,\\n  uInputClamp: vec4<f32>,\\n  uOutputFrame: vec4<f32>,\\n  uGlobalFrame: vec4<f32>,\\n  uOutputTexture: vec4<f32>,\\n};\\n\\n@group(0) @binding(0) var <uniform> gfu: GlobalFilterUniforms;\\n@group(0) @binding(1) var uTexture: texture_2d<f32>;\\n@group(0) @binding(2) var uSampler: sampler;\\n\\nstruct VSOutput {\\n  @builtin(position) position: vec4<f32>,\\n  @location(0) uv: vec2<f32>\\n};\\n\\nfn filterVertexPosition(aPosition: vec2<f32>) -> vec4<f32>\\n{\\n    var position = aPosition * gfu.uOutputFrame.zw + gfu.uOutputFrame.xy;\\n\\n    position.x = position.x * (2.0 / gfu.uOutputTexture.x) - 1.0;\\n    position.y = position.y * (2.0 * gfu.uOutputTexture.z / gfu.uOutputTexture.y) - gfu.uOutputTexture.z;\\n\\n    return vec4(position, 0.0, 1.0);\\n}\\n\\nfn filterTextureCoord(aPosition: vec2<f32>) -> vec2<f32>\\n{\\n    return aPosition * (gfu.uOutputFrame.zw * gfu.uInputSize.zw);\\n}\\n\\n@vertex\\nfn mainVertex(\\n  @location(0) aPosition: vec2<f32>,\\n) -> VSOutput {\\n  return VSOutput(\\n   filterVertexPosition(aPosition),\\n   filterTextureCoord(aPosition)\\n  );\\n}\\n\\n@fragment\\nfn mainFragment(\\n  @location(0) uv: vec2<f32>,\\n) -> @location(0) vec4<f32> {\\n    return textureSample(uTexture, uSampler, uv);\\n}\\n\";\n\nexport { source as default };\n//# sourceMappingURL=passthrough.wgsl.mjs.map\n","import { GlProgram } from '../../../rendering/renderers/gl/shader/GlProgram.mjs';\nimport { GpuProgram } from '../../../rendering/renderers/gpu/shader/GpuProgram.mjs';\nimport { Filter } from '../../Filter.mjs';\nimport vertex from '../defaultFilter.vert.mjs';\nimport fragment from './passthrough.frag.mjs';\nimport source from './passthrough.wgsl.mjs';\n\n\"use strict\";\nclass PassthroughFilter extends Filter {\n  constructor() {\n    const gpuProgram = GpuProgram.from({\n      vertex: { source, entryPoint: \"mainVertex\" },\n      fragment: { source, entryPoint: \"mainFragment\" },\n      name: \"passthrough-filter\"\n    });\n    const glProgram = GlProgram.from({\n      vertex,\n      fragment,\n      name: \"passthrough-filter\"\n    });\n    super({\n      gpuProgram,\n      glProgram\n    });\n  }\n}\n\nexport { PassthroughFilter };\n//# sourceMappingURL=PassthroughFilter.mjs.map\n","import { ExtensionType } from '../extensions/Extensions.mjs';\n\n\"use strict\";\nclass FilterPipe {\n  constructor(renderer) {\n    this._renderer = renderer;\n  }\n  push(filterEffect, container, instructionSet) {\n    const renderPipes = this._renderer.renderPipes;\n    renderPipes.batch.break(instructionSet);\n    instructionSet.add({\n      renderPipeId: \"filter\",\n      canBundle: false,\n      action: \"pushFilter\",\n      container,\n      filterEffect\n    });\n  }\n  pop(_filterEffect, _container, instructionSet) {\n    this._renderer.renderPipes.batch.break(instructionSet);\n    instructionSet.add({\n      renderPipeId: \"filter\",\n      action: \"popFilter\",\n      canBundle: false\n    });\n  }\n  execute(instruction) {\n    if (instruction.action === \"pushFilter\") {\n      this._renderer.filter.push(instruction);\n    } else if (instruction.action === \"popFilter\") {\n      this._renderer.filter.pop();\n    }\n  }\n  destroy() {\n    this._renderer = null;\n  }\n}\nFilterPipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"filter\"\n};\n\nexport { FilterPipe };\n//# sourceMappingURL=FilterPipe.mjs.map\n","import '../../../maths/index.mjs';\nimport { Matrix } from '../../../maths/matrix/Matrix.mjs';\n\n\"use strict\";\nconst tempProjectionMatrix = new Matrix();\nfunction getGlobalRenderableBounds(renderables, bounds) {\n  bounds.clear();\n  const actualMatrix = bounds.matrix;\n  for (let i = 0; i < renderables.length; i++) {\n    const renderable = renderables[i];\n    if (renderable.globalDisplayStatus < 7) {\n      continue;\n    }\n    const renderGroup = renderable.renderGroup ?? renderable.parentRenderGroup;\n    if (renderGroup?.isCachedAsTexture) {\n      bounds.matrix = tempProjectionMatrix.copyFrom(renderGroup.textureOffsetInverseTransform).append(renderable.worldTransform);\n    } else if (renderGroup?._parentCacheAsTextureRenderGroup) {\n      bounds.matrix = tempProjectionMatrix.copyFrom(renderGroup._parentCacheAsTextureRenderGroup.inverseWorldTransform).append(renderable.groupTransform);\n    } else {\n      bounds.matrix = renderable.worldTransform;\n    }\n    bounds.addBounds(renderable.bounds);\n  }\n  bounds.matrix = actualMatrix;\n  return bounds;\n}\n\nexport { getGlobalRenderableBounds };\n//# sourceMappingURL=getRenderableBounds.mjs.map\n","import { ExtensionType } from '../extensions/Extensions.mjs';\nimport { PassthroughFilter } from './defaults/passthrough/PassthroughFilter.mjs';\nimport { Matrix } from '../maths/matrix/Matrix.mjs';\nimport { BindGroup } from '../rendering/renderers/gpu/shader/BindGroup.mjs';\nimport { Geometry } from '../rendering/renderers/shared/geometry/Geometry.mjs';\nimport { UniformGroup } from '../rendering/renderers/shared/shader/UniformGroup.mjs';\nimport { Texture } from '../rendering/renderers/shared/texture/Texture.mjs';\nimport { TexturePool } from '../rendering/renderers/shared/texture/TexturePool.mjs';\nimport { RendererType } from '../rendering/renderers/types.mjs';\nimport { Bounds } from '../scene/container/bounds/Bounds.mjs';\nimport { getGlobalRenderableBounds } from '../scene/container/bounds/getRenderableBounds.mjs';\nimport { warn } from '../utils/logging/warn.mjs';\n\n\"use strict\";\nconst quadGeometry = new Geometry({\n  attributes: {\n    aPosition: {\n      buffer: new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]),\n      format: \"float32x2\",\n      stride: 2 * 4,\n      offset: 0\n    }\n  },\n  indexBuffer: new Uint32Array([0, 1, 2, 0, 2, 3])\n});\nclass FilterData {\n  constructor() {\n    /**\n     * Indicates whether the filter should be skipped.\n     * @type {boolean}\n     */\n    this.skip = false;\n    /**\n     * The texture to which the filter is applied.\n     * @type {Texture}\n     */\n    this.inputTexture = null;\n    /**\n     * The back texture used for blending, if required.\n     * @type {Texture | null}\n     */\n    this.backTexture = null;\n    /**\n     * The list of filters to be applied.\n     * @type {Filter[]}\n     */\n    this.filters = null;\n    /**\n     * The bounds of the filter area.\n     * @type {Bounds}\n     */\n    this.bounds = new Bounds();\n    /**\n     * The container to which the filter is applied.\n     * @type {Container}\n     */\n    this.container = null;\n    /**\n     * Indicates whether blending is required for the filter.\n     * @type {boolean}\n     */\n    this.blendRequired = false;\n    /**\n     * The render surface where the output of the filter is rendered.\n     * @type {RenderSurface}\n     */\n    this.outputRenderSurface = null;\n    /**\n     * The global frame of the filter area.\n     * @type {{ x: number, y: number, width: number, height: number }}\n     */\n    this.globalFrame = { x: 0, y: 0, width: 0, height: 0 };\n    /** The first enabled filter index in the current filter list. */\n    this.firstEnabledIndex = -1;\n    /** The last enabled filter index in the current filter list. */\n    this.lastEnabledIndex = -1;\n  }\n}\nclass FilterSystem {\n  constructor(renderer) {\n    this._filterStackIndex = 0;\n    this._filterStack = [];\n    this._filterGlobalUniforms = new UniformGroup({\n      uInputSize: { value: new Float32Array(4), type: \"vec4<f32>\" },\n      uInputPixel: { value: new Float32Array(4), type: \"vec4<f32>\" },\n      uInputClamp: { value: new Float32Array(4), type: \"vec4<f32>\" },\n      uOutputFrame: { value: new Float32Array(4), type: \"vec4<f32>\" },\n      uGlobalFrame: { value: new Float32Array(4), type: \"vec4<f32>\" },\n      uOutputTexture: { value: new Float32Array(4), type: \"vec4<f32>\" }\n    });\n    this._globalFilterBindGroup = new BindGroup({});\n    this.renderer = renderer;\n  }\n  /**\n   * The back texture of the currently active filter. Requires the filter to have `blendRequired` set to true.\n   * @readonly\n   */\n  get activeBackTexture() {\n    return this._activeFilterData?.backTexture;\n  }\n  /**\n   * Pushes a filter instruction onto the filter stack.\n   * @param instruction - The instruction containing the filter effect and container.\n   * @internal\n   */\n  push(instruction) {\n    const renderer = this.renderer;\n    const filters = instruction.filterEffect.filters;\n    const filterData = this._pushFilterData();\n    filterData.skip = false;\n    filterData.filters = filters;\n    filterData.container = instruction.container;\n    filterData.outputRenderSurface = renderer.renderTarget.renderSurface;\n    const colorTextureSource = renderer.renderTarget.renderTarget.colorTexture.source;\n    const rootResolution = colorTextureSource.resolution;\n    const rootAntialias = colorTextureSource.antialias;\n    if (filters.every((filter) => !filter.enabled)) {\n      filterData.skip = true;\n      return;\n    }\n    const bounds = filterData.bounds;\n    this._calculateFilterArea(instruction, bounds);\n    this._calculateFilterBounds(filterData, renderer.renderTarget.rootViewPort, rootAntialias, rootResolution, 1);\n    if (filterData.skip) {\n      return;\n    }\n    const previousFilterData = this._getPreviousFilterData();\n    const globalResolution = this._findFilterResolution(rootResolution);\n    let offsetX = 0;\n    let offsetY = 0;\n    if (previousFilterData) {\n      offsetX = previousFilterData.bounds.minX;\n      offsetY = previousFilterData.bounds.minY;\n    }\n    this._calculateGlobalFrame(\n      filterData,\n      offsetX,\n      offsetY,\n      globalResolution,\n      colorTextureSource.width,\n      colorTextureSource.height\n    );\n    this._setupFilterTextures(filterData, bounds, renderer, previousFilterData);\n  }\n  /**\n   * Applies filters to a texture.\n   *\n   * This method takes a texture and a list of filters, applies the filters to the texture,\n   * and returns the resulting texture.\n   * @param {object} params - The parameters for applying filters.\n   * @param {Texture} params.texture - The texture to apply filters to.\n   * @param {Filter[]} params.filters - The filters to apply.\n   * @returns {Texture} The resulting texture after all filters have been applied.\n   * @example\n   *\n   * ```ts\n   * // Create a texture and a list of filters\n   * const texture = new Texture(...);\n   * const filters = [new BlurFilter(), new ColorMatrixFilter()];\n   *\n   * // Apply the filters to the texture\n   * const resultTexture = filterSystem.applyToTexture({ texture, filters });\n   *\n   * // Use the resulting texture\n   * sprite.texture = resultTexture;\n   * ```\n   *\n   * Key Points:\n   * 1. padding is not currently supported here - so clipping may occur with filters that use padding.\n   * 2. If all filters are disabled or skipped, the original texture is returned.\n   */\n  generateFilteredTexture({ texture, filters }) {\n    const filterData = this._pushFilterData();\n    this._activeFilterData = filterData;\n    filterData.skip = false;\n    filterData.filters = filters;\n    const colorTextureSource = texture.source;\n    const rootResolution = colorTextureSource.resolution;\n    const rootAntialias = colorTextureSource.antialias;\n    if (filters.every((filter) => !filter.enabled)) {\n      filterData.skip = true;\n      return texture;\n    }\n    const bounds = filterData.bounds;\n    bounds.addRect(texture.frame);\n    this._calculateFilterBounds(filterData, bounds.rectangle, rootAntialias, rootResolution, 0);\n    if (filterData.skip) {\n      return texture;\n    }\n    const globalResolution = rootResolution;\n    const offsetX = 0;\n    const offsetY = 0;\n    this._calculateGlobalFrame(\n      filterData,\n      offsetX,\n      offsetY,\n      globalResolution,\n      colorTextureSource.width,\n      colorTextureSource.height\n    );\n    filterData.outputRenderSurface = TexturePool.getOptimalTexture(\n      bounds.width,\n      bounds.height,\n      filterData.resolution,\n      filterData.antialias\n    );\n    filterData.backTexture = Texture.EMPTY;\n    filterData.inputTexture = texture;\n    const renderer = this.renderer;\n    renderer.renderTarget.finishRenderPass();\n    this._applyFiltersToTexture(filterData, true);\n    const outputTexture = filterData.outputRenderSurface;\n    outputTexture.source.alphaMode = \"premultiplied-alpha\";\n    return outputTexture;\n  }\n  /** @internal */\n  pop() {\n    const renderer = this.renderer;\n    const filterData = this._popFilterData();\n    if (filterData.skip) {\n      return;\n    }\n    renderer.globalUniforms.pop();\n    renderer.renderTarget.finishRenderPass();\n    this._activeFilterData = filterData;\n    this._applyFiltersToTexture(filterData, false);\n    if (filterData.blendRequired) {\n      TexturePool.returnTexture(filterData.backTexture);\n    }\n    TexturePool.returnTexture(filterData.inputTexture);\n  }\n  /**\n   * Copies the last render surface to a texture.\n   * @param lastRenderSurface - The last render surface to copy from.\n   * @param bounds - The bounds of the area to copy.\n   * @param previousBounds - The previous bounds to use for offsetting the copy.\n   */\n  getBackTexture(lastRenderSurface, bounds, previousBounds) {\n    const backgroundResolution = lastRenderSurface.colorTexture.source._resolution;\n    const backTexture = TexturePool.getOptimalTexture(\n      bounds.width,\n      bounds.height,\n      backgroundResolution,\n      false\n    );\n    let x = bounds.minX;\n    let y = bounds.minY;\n    if (previousBounds) {\n      x -= previousBounds.minX;\n      y -= previousBounds.minY;\n    }\n    x = Math.floor(x * backgroundResolution);\n    y = Math.floor(y * backgroundResolution);\n    const width = Math.ceil(bounds.width * backgroundResolution);\n    const height = Math.ceil(bounds.height * backgroundResolution);\n    this.renderer.renderTarget.copyToTexture(\n      lastRenderSurface,\n      backTexture,\n      { x, y },\n      { width, height },\n      { x: 0, y: 0 }\n    );\n    return backTexture;\n  }\n  /**\n   * Applies a filter to a texture.\n   * @param filter - The filter to apply.\n   * @param input - The input texture.\n   * @param output - The output render surface.\n   * @param clear - Whether to clear the output surface before applying the filter.\n   */\n  applyFilter(filter, input, output, clear) {\n    const renderer = this.renderer;\n    const filterData = this._activeFilterData;\n    const outputRenderSurface = filterData.outputRenderSurface;\n    const isFinalTarget = outputRenderSurface === output;\n    const rootResolution = renderer.renderTarget.rootRenderTarget.colorTexture.source._resolution;\n    const resolution = this._findFilterResolution(rootResolution);\n    let offsetX = 0;\n    let offsetY = 0;\n    if (isFinalTarget) {\n      const offset = this._findPreviousFilterOffset();\n      offsetX = offset.x;\n      offsetY = offset.y;\n    }\n    this._updateFilterUniforms(input, output, filterData, offsetX, offsetY, resolution, isFinalTarget, clear);\n    const filterToApply = filter.enabled ? filter : this._getPassthroughFilter();\n    this._setupBindGroupsAndRender(filterToApply, input, renderer);\n  }\n  /**\n   * Multiply _input normalized coordinates_ to this matrix to get _sprite texture normalized coordinates_.\n   *\n   * Use `outputMatrix * vTextureCoord` in the shader.\n   * @param outputMatrix - The matrix to output to.\n   * @param {Sprite} sprite - The sprite to map to.\n   * @returns The mapped matrix.\n   */\n  calculateSpriteMatrix(outputMatrix, sprite) {\n    const data = this._activeFilterData;\n    const mappedMatrix = outputMatrix.set(\n      data.inputTexture._source.width,\n      0,\n      0,\n      data.inputTexture._source.height,\n      data.bounds.minX,\n      data.bounds.minY\n    );\n    const worldTransform = sprite.worldTransform.copyTo(Matrix.shared);\n    const renderGroup = sprite.renderGroup || sprite.parentRenderGroup;\n    if (renderGroup && renderGroup.cacheToLocalTransform) {\n      worldTransform.prepend(renderGroup.cacheToLocalTransform);\n    }\n    worldTransform.invert();\n    mappedMatrix.prepend(worldTransform);\n    mappedMatrix.scale(\n      1 / sprite.texture.orig.width,\n      1 / sprite.texture.orig.height\n    );\n    mappedMatrix.translate(sprite.anchor.x, sprite.anchor.y);\n    return mappedMatrix;\n  }\n  destroy() {\n    this._passthroughFilter?.destroy(true);\n    this._passthroughFilter = null;\n  }\n  _getPassthroughFilter() {\n    this._passthroughFilter ?? (this._passthroughFilter = new PassthroughFilter());\n    return this._passthroughFilter;\n  }\n  /**\n   * Sets up the bind groups and renders the filter.\n   * @param filter - The filter to apply\n   * @param input - The input texture\n   * @param renderer - The renderer instance\n   */\n  _setupBindGroupsAndRender(filter, input, renderer) {\n    if (renderer.renderPipes.uniformBatch) {\n      const batchUniforms = renderer.renderPipes.uniformBatch.getUboResource(this._filterGlobalUniforms);\n      this._globalFilterBindGroup.setResource(batchUniforms, 0);\n    } else {\n      this._globalFilterBindGroup.setResource(this._filterGlobalUniforms, 0);\n    }\n    this._globalFilterBindGroup.setResource(input.source, 1);\n    this._globalFilterBindGroup.setResource(input.source.style, 2);\n    filter.groups[0] = this._globalFilterBindGroup;\n    renderer.encoder.draw({\n      geometry: quadGeometry,\n      shader: filter,\n      state: filter._state,\n      topology: \"triangle-list\"\n    });\n    if (renderer.type === RendererType.WEBGL) {\n      renderer.renderTarget.finishRenderPass();\n    }\n  }\n  /**\n   * Sets up the filter textures including input texture and back texture if needed.\n   * @param filterData - The filter data to update\n   * @param bounds - The bounds for the texture\n   * @param renderer - The renderer instance\n   * @param previousFilterData - The previous filter data for back texture calculation\n   */\n  _setupFilterTextures(filterData, bounds, renderer, previousFilterData) {\n    filterData.backTexture = Texture.EMPTY;\n    filterData.inputTexture = TexturePool.getOptimalTexture(\n      bounds.width,\n      bounds.height,\n      filterData.resolution,\n      filterData.antialias\n    );\n    if (filterData.blendRequired) {\n      renderer.renderTarget.finishRenderPass();\n      const renderTarget = renderer.renderTarget.getRenderTarget(filterData.outputRenderSurface);\n      filterData.backTexture = this.getBackTexture(renderTarget, bounds, previousFilterData?.bounds);\n    }\n    renderer.renderTarget.bind(filterData.inputTexture, true);\n    renderer.globalUniforms.push({\n      offset: bounds\n    });\n  }\n  /**\n   * Calculates and sets the global frame for the filter.\n   * @param filterData - The filter data to update\n   * @param offsetX - The X offset\n   * @param offsetY - The Y offset\n   * @param globalResolution - The global resolution\n   * @param sourceWidth - The source texture width\n   * @param sourceHeight - The source texture height\n   */\n  _calculateGlobalFrame(filterData, offsetX, offsetY, globalResolution, sourceWidth, sourceHeight) {\n    const globalFrame = filterData.globalFrame;\n    globalFrame.x = offsetX * globalResolution;\n    globalFrame.y = offsetY * globalResolution;\n    globalFrame.width = sourceWidth * globalResolution;\n    globalFrame.height = sourceHeight * globalResolution;\n  }\n  /**\n   * Updates the filter uniforms with the current filter state.\n   * @param input - The input texture\n   * @param output - The output render surface\n   * @param filterData - The current filter data\n   * @param offsetX - The X offset for positioning\n   * @param offsetY - The Y offset for positioning\n   * @param resolution - The current resolution\n   * @param isFinalTarget - Whether this is the final render target\n   * @param clear - Whether to clear the output surface\n   */\n  _updateFilterUniforms(input, output, filterData, offsetX, offsetY, resolution, isFinalTarget, clear) {\n    const uniforms = this._filterGlobalUniforms.uniforms;\n    const outputFrame = uniforms.uOutputFrame;\n    const inputSize = uniforms.uInputSize;\n    const inputPixel = uniforms.uInputPixel;\n    const inputClamp = uniforms.uInputClamp;\n    const globalFrame = uniforms.uGlobalFrame;\n    const outputTexture = uniforms.uOutputTexture;\n    if (isFinalTarget) {\n      outputFrame[0] = filterData.bounds.minX - offsetX;\n      outputFrame[1] = filterData.bounds.minY - offsetY;\n    } else {\n      outputFrame[0] = 0;\n      outputFrame[1] = 0;\n    }\n    outputFrame[2] = input.frame.width;\n    outputFrame[3] = input.frame.height;\n    inputSize[0] = input.source.width;\n    inputSize[1] = input.source.height;\n    inputSize[2] = 1 / inputSize[0];\n    inputSize[3] = 1 / inputSize[1];\n    inputPixel[0] = input.source.pixelWidth;\n    inputPixel[1] = input.source.pixelHeight;\n    inputPixel[2] = 1 / inputPixel[0];\n    inputPixel[3] = 1 / inputPixel[1];\n    inputClamp[0] = 0.5 * inputPixel[2];\n    inputClamp[1] = 0.5 * inputPixel[3];\n    inputClamp[2] = input.frame.width * inputSize[2] - 0.5 * inputPixel[2];\n    inputClamp[3] = input.frame.height * inputSize[3] - 0.5 * inputPixel[3];\n    const rootTexture = this.renderer.renderTarget.rootRenderTarget.colorTexture;\n    globalFrame[0] = offsetX * resolution;\n    globalFrame[1] = offsetY * resolution;\n    globalFrame[2] = rootTexture.source.width * resolution;\n    globalFrame[3] = rootTexture.source.height * resolution;\n    if (output instanceof Texture)\n      output.source.resource = null;\n    const renderTarget = this.renderer.renderTarget.getRenderTarget(output);\n    this.renderer.renderTarget.bind(output, !!clear);\n    if (output instanceof Texture) {\n      outputTexture[0] = output.frame.width;\n      outputTexture[1] = output.frame.height;\n    } else {\n      outputTexture[0] = renderTarget.width;\n      outputTexture[1] = renderTarget.height;\n    }\n    outputTexture[2] = renderTarget.isRoot ? -1 : 1;\n    this._filterGlobalUniforms.update();\n  }\n  /**\n   * Finds the correct resolution by looking back through the filter stack.\n   * @param rootResolution - The fallback root resolution to use\n   * @returns The resolution from the previous filter or root resolution\n   */\n  _findFilterResolution(rootResolution) {\n    let currentIndex = this._filterStackIndex - 1;\n    while (currentIndex > 0 && this._filterStack[currentIndex].skip) {\n      --currentIndex;\n    }\n    return currentIndex > 0 && this._filterStack[currentIndex].inputTexture ? this._filterStack[currentIndex].inputTexture.source._resolution : rootResolution;\n  }\n  /**\n   * Finds the offset from the previous non-skipped filter in the stack.\n   * @returns The offset coordinates from the previous filter\n   */\n  _findPreviousFilterOffset() {\n    let offsetX = 0;\n    let offsetY = 0;\n    let lastIndex = this._filterStackIndex;\n    while (lastIndex > 0) {\n      lastIndex--;\n      const prevFilterData = this._filterStack[lastIndex];\n      if (!prevFilterData.skip) {\n        offsetX = prevFilterData.bounds.minX;\n        offsetY = prevFilterData.bounds.minY;\n        break;\n      }\n    }\n    return { x: offsetX, y: offsetY };\n  }\n  /**\n   * Calculates the filter area bounds based on the instruction type.\n   * @param instruction - The filter instruction\n   * @param bounds - The bounds object to populate\n   */\n  _calculateFilterArea(instruction, bounds) {\n    if (instruction.renderables) {\n      getGlobalRenderableBounds(instruction.renderables, bounds);\n    } else if (instruction.filterEffect.filterArea) {\n      bounds.clear();\n      bounds.addRect(instruction.filterEffect.filterArea);\n      bounds.applyMatrix(instruction.container.worldTransform);\n    } else {\n      instruction.container.getFastGlobalBounds(true, bounds);\n    }\n    if (instruction.container) {\n      const renderGroup = instruction.container.renderGroup || instruction.container.parentRenderGroup;\n      const filterFrameTransform = renderGroup.cacheToLocalTransform;\n      if (filterFrameTransform) {\n        bounds.applyMatrix(filterFrameTransform);\n      }\n    }\n  }\n  _applyFiltersToTexture(filterData, clear) {\n    const inputTexture = filterData.inputTexture;\n    const bounds = filterData.bounds;\n    const filters = filterData.filters;\n    const firstEnabled = filterData.firstEnabledIndex;\n    const lastEnabled = filterData.lastEnabledIndex;\n    this._globalFilterBindGroup.setResource(inputTexture.source.style, 2);\n    this._globalFilterBindGroup.setResource(filterData.backTexture.source, 3);\n    if (firstEnabled === lastEnabled) {\n      filters[firstEnabled].apply(this, inputTexture, filterData.outputRenderSurface, clear);\n    } else {\n      let flip = filterData.inputTexture;\n      const tempTexture = TexturePool.getOptimalTexture(\n        bounds.width,\n        bounds.height,\n        flip.source._resolution,\n        false\n      );\n      let flop = tempTexture;\n      for (let i = firstEnabled; i < lastEnabled; i++) {\n        const filter = filters[i];\n        if (!filter.enabled)\n          continue;\n        filter.apply(this, flip, flop, true);\n        const t = flip;\n        flip = flop;\n        flop = t;\n      }\n      filters[lastEnabled].apply(this, flip, filterData.outputRenderSurface, clear);\n      TexturePool.returnTexture(tempTexture);\n    }\n  }\n  _calculateFilterBounds(filterData, viewPort, rootAntialias, rootResolution, paddingMultiplier) {\n    const renderer = this.renderer;\n    const bounds = filterData.bounds;\n    const filters = filterData.filters;\n    let resolution = Infinity;\n    let padding = 0;\n    let antialias = true;\n    let blendRequired = false;\n    let enabled = false;\n    let clipToViewport = true;\n    let firstEnabledIndex = -1;\n    let lastEnabledIndex = -1;\n    for (let i = 0; i < filters.length; i++) {\n      const filter = filters[i];\n      if (!filter.enabled)\n        continue;\n      if (firstEnabledIndex === -1)\n        firstEnabledIndex = i;\n      lastEnabledIndex = i;\n      resolution = Math.min(resolution, filter.resolution === \"inherit\" ? rootResolution : filter.resolution);\n      padding += filter.padding;\n      if (filter.antialias === \"off\") {\n        antialias = false;\n      } else if (filter.antialias === \"inherit\") {\n        antialias && (antialias = rootAntialias);\n      }\n      if (!filter.clipToViewport) {\n        clipToViewport = false;\n      }\n      const isCompatible = !!(filter.compatibleRenderers & renderer.type);\n      if (!isCompatible) {\n        enabled = false;\n        break;\n      }\n      if (filter.blendRequired && !(renderer.backBuffer?.useBackBuffer ?? true)) {\n        warn(\"Blend filter requires backBuffer on WebGL renderer to be enabled. Set `useBackBuffer: true` in the renderer options.\");\n        enabled = false;\n        break;\n      }\n      enabled = true;\n      blendRequired || (blendRequired = filter.blendRequired);\n    }\n    if (!enabled) {\n      filterData.skip = true;\n      return;\n    }\n    if (clipToViewport) {\n      bounds.fitBounds(0, viewPort.width / rootResolution, 0, viewPort.height / rootResolution);\n    }\n    bounds.scale(resolution).ceil().scale(1 / resolution).pad((padding | 0) * paddingMultiplier);\n    if (!bounds.isPositive) {\n      filterData.skip = true;\n      return;\n    }\n    filterData.antialias = antialias;\n    filterData.resolution = resolution;\n    filterData.blendRequired = blendRequired;\n    filterData.firstEnabledIndex = firstEnabledIndex;\n    filterData.lastEnabledIndex = lastEnabledIndex;\n  }\n  _popFilterData() {\n    this._filterStackIndex--;\n    return this._filterStack[this._filterStackIndex];\n  }\n  _getPreviousFilterData() {\n    let previousFilterData;\n    let index = this._filterStackIndex - 1;\n    while (index > 0) {\n      index--;\n      previousFilterData = this._filterStack[index];\n      if (!previousFilterData.skip) {\n        break;\n      }\n    }\n    return previousFilterData;\n  }\n  _pushFilterData() {\n    let filterData = this._filterStack[this._filterStackIndex];\n    if (!filterData) {\n      filterData = this._filterStack[this._filterStackIndex] = new FilterData();\n    }\n    this._filterStackIndex++;\n    return filterData;\n  }\n}\n/** @ignore */\nFilterSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.WebGPUSystem\n  ],\n  name: \"filter\"\n};\n\nexport { FilterSystem };\n//# sourceMappingURL=FilterSystem.mjs.map\n","import { deprecation, v8_0_0 } from '../../../utils/logging/deprecation.mjs';\nimport { ViewContainer } from '../../view/ViewContainer.mjs';\nimport { GraphicsContext } from './GraphicsContext.mjs';\n\n\"use strict\";\nclass Graphics extends ViewContainer {\n  /**\n   * Creates a new Graphics object.\n   * @param options - Options for the Graphics.\n   */\n  constructor(options) {\n    if (options instanceof GraphicsContext) {\n      options = { context: options };\n    }\n    const { context, roundPixels, ...rest } = options || {};\n    super({\n      label: \"Graphics\",\n      ...rest\n    });\n    /** @internal */\n    this.renderPipeId = \"graphics\";\n    if (!context) {\n      this._context = this._ownedContext = new GraphicsContext();\n    } else {\n      this._context = context;\n    }\n    this._context.on(\"update\", this.onViewUpdate, this);\n    this.didViewUpdate = true;\n    this.allowChildren = false;\n    this.roundPixels = roundPixels ?? false;\n  }\n  set context(context) {\n    if (context === this._context)\n      return;\n    this._context.off(\"update\", this.onViewUpdate, this);\n    this._context = context;\n    this._context.on(\"update\", this.onViewUpdate, this);\n    this.onViewUpdate();\n  }\n  /**\n   * The underlying graphics context used for drawing operations.\n   * Controls how shapes and paths are rendered.\n   * @example\n   * ```ts\n   * // Create a shared context\n   * const sharedContext = new GraphicsContext();\n   *\n   * // Create graphics objects sharing the same context\n   * const graphics1 = new Graphics();\n   * const graphics2 = new Graphics();\n   *\n   * // Assign shared context\n   * graphics1.context = sharedContext;\n   * graphics2.context = sharedContext;\n   *\n   * // Both graphics will show the same shapes\n   * sharedContext\n   *     .rect(0, 0, 100, 100)\n   *     .fill({ color: 0xff0000 });\n   * ```\n   * @see {@link GraphicsContext} For drawing operations\n   * @see {@link GraphicsOptions} For context configuration\n   */\n  get context() {\n    return this._context;\n  }\n  /**\n   * The local bounds of the graphics object.\n   * Returns the boundaries after all graphical operations but before any transforms.\n   * @example\n   * ```ts\n   * const graphics = new Graphics();\n   *\n   * // Draw a shape\n   * graphics\n   *     .rect(0, 0, 100, 100)\n   *     .fill({ color: 0xff0000 });\n   *\n   * // Get bounds information\n   * const bounds = graphics.bounds;\n   * console.log(bounds.width);  // 100\n   * console.log(bounds.height); // 100\n   * ```\n   * @readonly\n   * @see {@link Bounds} For bounds operations\n   * @see {@link Container#getBounds} For transformed bounds\n   */\n  get bounds() {\n    return this._context.bounds;\n  }\n  /**\n   * Graphics objects do not need to update their bounds as the context handles this.\n   * @private\n   */\n  updateBounds() {\n  }\n  /**\n   * Checks if the object contains the given point.\n   * Returns true if the point lies within the Graphics object's rendered area.\n   * @example\n   * ```ts\n   * const graphics = new Graphics();\n   *\n   * // Draw a shape\n   * graphics\n   *     .rect(0, 0, 100, 100)\n   *     .fill({ color: 0xff0000 });\n   *\n   * // Check point intersection\n   * if (graphics.containsPoint({ x: 50, y: 50 })) {\n   *     console.log('Point is inside rectangle!');\n   * }\n   * ```\n   * @param point - The point to check in local coordinates\n   * @returns True if the point is inside the Graphics object\n   * @see {@link Graphics#bounds} For bounding box checks\n   * @see {@link PointData} For point data structure\n   */\n  containsPoint(point) {\n    return this._context.containsPoint(point);\n  }\n  /**\n   * Destroys this graphics renderable and optionally its context.\n   * @param options - Options parameter. A boolean will act as if all options\n   *\n   * If the context was created by this graphics and `destroy(false)` or `destroy()` is called\n   * then the context will still be destroyed.\n   *\n   * If you want to explicitly not destroy this context that this graphics created,\n   * then you should pass destroy({ context: false })\n   *\n   * If the context was passed in as an argument to the constructor then it will not be destroyed\n   * @example\n   * ```ts\n   * // Destroy the graphics and its context\n   * graphics.destroy();\n   * graphics.destroy(true);\n   * graphics.destroy({ context: true, texture: true, textureSource: true });\n   * ```\n   */\n  destroy(options) {\n    if (this._ownedContext && !options) {\n      this._ownedContext.destroy(options);\n    } else if (options === true || options?.context === true) {\n      this._context.destroy(options);\n    }\n    this._ownedContext = null;\n    this._context = null;\n    super.destroy(options);\n  }\n  _callContextMethod(method, args) {\n    this.context[method](...args);\n    return this;\n  }\n  // --------------------------------------- GraphicsContext methods ---------------------------------------\n  /**\n   * Sets the current fill style of the graphics context.\n   * The fill style can be a color, gradient, pattern, or a complex style object.\n   * @example\n   * ```ts\n   * const graphics = new Graphics();\n   *\n   * // Basic color fill\n   * graphics\n   *     .setFillStyle({ color: 0xff0000 }) // Red fill\n   *     .rect(0, 0, 100, 100)\n   *     .fill();\n   *\n   * // Gradient fill\n   * const gradient = new FillGradient({\n   *    end: { x: 1, y: 0 },\n   *    colorStops: [\n   *         { offset: 0, color: 0xff0000 }, // Red at start\n   *         { offset: 0.5, color: 0x00ff00 }, // Green at middle\n   *         { offset: 1, color: 0x0000ff }, // Blue at end\n   *    ],\n   * });\n   *\n   * graphics\n   *     .setFillStyle(gradient)\n   *     .circle(100, 100, 50)\n   *     .fill();\n   *\n   * // Pattern fill\n   * const pattern = new FillPattern(texture);\n   * graphics\n   *     .setFillStyle({\n   *         fill: pattern,\n   *         alpha: 0.5\n   *     })\n   *     .rect(0, 0, 200, 200)\n   *     .fill();\n   * ```\n   * @param {FillInput} args - The fill style to apply\n   * @returns The Graphics instance for chaining\n   * @see {@link FillStyle} For fill style options\n   * @see {@link FillGradient} For gradient fills\n   * @see {@link FillPattern} For pattern fills\n   */\n  setFillStyle(...args) {\n    return this._callContextMethod(\"setFillStyle\", args);\n  }\n  /**\n   * Sets the current stroke style of the graphics context.\n   * Similar to fill styles, stroke styles can encompass colors, gradients, patterns, or more detailed configurations.\n   * @example\n   * ```ts\n   * const graphics = new Graphics();\n   *\n   * // Basic color stroke\n   * graphics\n   *     .setStrokeStyle({\n   *         width: 2,\n   *         color: 0x000000\n   *     })\n   *     .rect(0, 0, 100, 100)\n   *     .stroke();\n   *\n   * // Complex stroke style\n   * graphics\n   *     .setStrokeStyle({\n   *         width: 4,\n   *         color: 0xff0000,\n   *         alpha: 0.5,\n   *         join: 'round',\n   *         cap: 'round',\n   *         alignment: 0.5\n   *     })\n   *     .circle(100, 100, 50)\n   *     .stroke();\n   *\n   * // Gradient stroke\n   * const gradient = new FillGradient({\n   *    end: { x: 1, y: 0 },\n   *    colorStops: [\n   *         { offset: 0, color: 0xff0000 }, // Red at start\n   *         { offset: 0.5, color: 0x00ff00 }, // Green at middle\n   *         { offset: 1, color: 0x0000ff }, // Blue at end\n   *    ],\n   * });\n   *\n   * graphics\n   *     .setStrokeStyle({\n   *         width: 10,\n   *         fill: gradient\n   *     })\n   *     .poly([0,0, 100,50, 0,100])\n   *     .stroke();\n   * ```\n   * @param {StrokeInput} args - The stroke style to apply\n   * @returns The Graphics instance for chaining\n   * @see {@link StrokeStyle} For stroke style options\n   * @see {@link FillGradient} For gradient strokes\n   * @see {@link FillPattern} For pattern strokes\n   */\n  setStrokeStyle(...args) {\n    return this._callContextMethod(\"setStrokeStyle\", args);\n  }\n  fill(...args) {\n    return this._callContextMethod(\"fill\", args);\n  }\n  /**\n   * Strokes the current path with the current stroke style or specified style.\n   * Outlines the shape using the stroke settings.\n   * @example\n   * ```ts\n   * const graphics = new Graphics();\n   *\n   * // Stroke with direct color\n   * graphics\n   *     .circle(50, 50, 25)\n   *     .stroke({\n   *         width: 2,\n   *         color: 0xff0000\n   *     }); // 2px red stroke\n   *\n   * // Fill with texture\n   * graphics\n   *    .rect(0, 0, 100, 100)\n   *    .stroke(myTexture); // Fill with texture\n   *\n   * // Stroke with gradient\n   * const gradient = new FillGradient({\n   *     end: { x: 1, y: 0 },\n   *     colorStops: [\n   *         { offset: 0, color: 0xff0000 },\n   *         { offset: 0.5, color: 0x00ff00 },\n   *         { offset: 1, color: 0x0000ff },\n   *     ],\n   * });\n   *\n   * graphics\n   *     .rect(0, 0, 100, 100)\n   *     .stroke({\n   *         width: 4,\n   *         fill: gradient,\n   *         alignment: 0.5,\n   *         join: 'round'\n   *     });\n   * ```\n   * @param {StrokeStyle} args - Optional stroke style to apply. Can be:\n   * - A stroke style object with width, color, etc.\n   * - A gradient\n   * - A pattern\n   * If omitted, uses current stroke style.\n   * @returns The Graphics instance for chaining\n   * @see {@link StrokeStyle} For stroke style options\n   * @see {@link FillGradient} For gradient strokes\n   * @see {@link setStrokeStyle} For setting default stroke style\n   */\n  stroke(...args) {\n    return this._callContextMethod(\"stroke\", args);\n  }\n  texture(...args) {\n    return this._callContextMethod(\"texture\", args);\n  }\n  /**\n   * Resets the current path. Any previous path and its commands are discarded and a new path is\n   * started. This is typically called before beginning a new shape or series of drawing commands.\n   * @example\n   * ```ts\n   * const graphics = new Graphics();\n   * graphics\n   *     .circle(150, 150, 50)\n   *     .fill({ color: 0x00ff00 })\n   *     .beginPath() // Starts a new path\n   *     .circle(250, 150, 50)\n   *     .fill({ color: 0x0000ff });\n   * ```\n   * @returns The Graphics instance for chaining\n   * @see {@link Graphics#moveTo} For starting a new subpath\n   * @see {@link Graphics#closePath} For closing the current path\n   */\n  beginPath() {\n    return this._callContextMethod(\"beginPath\", []);\n  }\n  /**\n   * Applies a cutout to the last drawn shape. This is used to create holes or complex shapes by\n   * subtracting a path from the previously drawn path.\n   *\n   * If a hole is not completely in a shape, it will fail to cut correctly.\n   * @example\n   * ```ts\n   * const graphics = new Graphics();\n   *\n   * // Draw outer circle\n   * graphics\n   *     .circle(100, 100, 50)\n   *     .fill({ color: 0xff0000 });\n   *     .circle(100, 100, 25) // Inner circle\n   *     .cut() // Cuts out the inner circle from the outer circle\n   * ```\n   */\n  cut() {\n    return this._callContextMethod(\"cut\", []);\n  }\n  arc(...args) {\n    return this._callContextMethod(\"arc\", args);\n  }\n  arcTo(...args) {\n    return this._callContextMethod(\"arcTo\", args);\n  }\n  arcToSvg(...args) {\n    return this._callContextMethod(\"arcToSvg\", args);\n  }\n  bezierCurveTo(...args) {\n    return this._callContextMethod(\"bezierCurveTo\", args);\n  }\n  /**\n   * Closes the current path by drawing a straight line back to the start point.\n   *\n   * This is useful for completing shapes and ensuring they are properly closed for fills.\n   * @example\n   * ```ts\n   * // Create a triangle with closed path\n   * const graphics = new Graphics();\n   * graphics\n   *     .moveTo(50, 50)\n   *     .lineTo(100, 100)\n   *     .lineTo(0, 100)\n   *     .closePath()\n   * ```\n   * @returns The Graphics instance for method chaining\n   * @see {@link Graphics#beginPath} For starting a new path\n   * @see {@link Graphics#fill} For filling closed paths\n   * @see {@link Graphics#stroke} For stroking paths\n   */\n  closePath() {\n    return this._callContextMethod(\"closePath\", []);\n  }\n  ellipse(...args) {\n    return this._callContextMethod(\"ellipse\", args);\n  }\n  circle(...args) {\n    return this._callContextMethod(\"circle\", args);\n  }\n  path(...args) {\n    return this._callContextMethod(\"path\", args);\n  }\n  lineTo(...args) {\n    return this._callContextMethod(\"lineTo\", args);\n  }\n  moveTo(...args) {\n    return this._callContextMethod(\"moveTo\", args);\n  }\n  quadraticCurveTo(...args) {\n    return this._callContextMethod(\"quadraticCurveTo\", args);\n  }\n  rect(...args) {\n    return this._callContextMethod(\"rect\", args);\n  }\n  roundRect(...args) {\n    return this._callContextMethod(\"roundRect\", args);\n  }\n  poly(...args) {\n    return this._callContextMethod(\"poly\", args);\n  }\n  regularPoly(...args) {\n    return this._callContextMethod(\"regularPoly\", args);\n  }\n  roundPoly(...args) {\n    return this._callContextMethod(\"roundPoly\", args);\n  }\n  roundShape(...args) {\n    return this._callContextMethod(\"roundShape\", args);\n  }\n  filletRect(...args) {\n    return this._callContextMethod(\"filletRect\", args);\n  }\n  chamferRect(...args) {\n    return this._callContextMethod(\"chamferRect\", args);\n  }\n  star(...args) {\n    return this._callContextMethod(\"star\", args);\n  }\n  svg(...args) {\n    return this._callContextMethod(\"svg\", args);\n  }\n  restore(...args) {\n    return this._callContextMethod(\"restore\", args);\n  }\n  /**\n   * Saves the current graphics state onto a stack. The state includes:\n   * - Current transformation matrix\n   * - Current fill style\n   * - Current stroke style\n   * @example\n   * ```ts\n   * const graphics = new Graphics();\n   *\n   * // Save state before complex operations\n   * graphics.save();\n   *\n   * // Create transformed and styled shape\n   * graphics\n   *     .translateTransform(100, 100)\n   *     .rotateTransform(Math.PI / 4)\n   *     .setFillStyle({\n   *         color: 0xff0000,\n   *         alpha: 0.5\n   *     })\n   *     .rect(-25, -25, 50, 50)\n   *     .fill();\n   *\n   * // Restore to original state\n   * graphics.restore();\n   *\n   * // Continue drawing with previous state\n   * graphics\n   *     .circle(50, 50, 25)\n   *     .fill();\n   * ```\n   * @returns The Graphics instance for method chaining\n   * @see {@link Graphics#restore} For restoring the saved state\n   * @see {@link Graphics#setTransform} For setting transformations\n   */\n  save() {\n    return this._callContextMethod(\"save\", []);\n  }\n  /**\n   * Returns the current transformation matrix of the graphics context.\n   * This matrix represents all accumulated transformations including translate, scale, and rotate.\n   * @example\n   * ```ts\n   * const graphics = new Graphics();\n   *\n   * // Apply some transformations\n   * graphics\n   *     .translateTransform(100, 100)\n   *     .rotateTransform(Math.PI / 4);\n   *\n   * // Get the current transform matrix\n   * const matrix = graphics.getTransform();\n   * console.log(matrix.tx, matrix.ty); // 100, 100\n   *\n   * // Use the matrix for other operations\n   * graphics\n   *     .setTransform(matrix)\n   *     .circle(0, 0, 50)\n   *     .fill({ color: 0xff0000 });\n   * ```\n   * @returns The current transformation matrix.\n   * @see {@link Graphics#setTransform} For setting the transform matrix\n   * @see {@link Matrix} For matrix operations\n   */\n  getTransform() {\n    return this.context.getTransform();\n  }\n  /**\n   * Resets the current transformation matrix to the identity matrix, effectively removing\n   * any transformations (rotation, scaling, translation) previously applied.\n   * @example\n   * ```ts\n   * const graphics = new Graphics();\n   *\n   * // Apply transformations\n   * graphics\n   *     .translateTransform(100, 100)\n   *     .scaleTransform(2, 2)\n   *     .circle(0, 0, 25)\n   *     .fill({ color: 0xff0000 });\n   * // Reset transform to default state\n   * graphics\n   *     .resetTransform()\n   *     .circle(50, 50, 25) // Will draw at actual coordinates\n   *     .fill({ color: 0x00ff00 });\n   * ```\n   * @returns The Graphics instance for method chaining\n   * @see {@link Graphics#getTransform} For getting the current transform\n   * @see {@link Graphics#setTransform} For setting a specific transform\n   * @see {@link Graphics#save} For saving the current transform state\n   * @see {@link Graphics#restore} For restoring a previous transform state\n   */\n  resetTransform() {\n    return this._callContextMethod(\"resetTransform\", []);\n  }\n  rotateTransform(...args) {\n    return this._callContextMethod(\"rotate\", args);\n  }\n  scaleTransform(...args) {\n    return this._callContextMethod(\"scale\", args);\n  }\n  setTransform(...args) {\n    return this._callContextMethod(\"setTransform\", args);\n  }\n  transform(...args) {\n    return this._callContextMethod(\"transform\", args);\n  }\n  translateTransform(...args) {\n    return this._callContextMethod(\"translate\", args);\n  }\n  /**\n   * Clears all drawing commands from the graphics context, effectively resetting it.\n   * This includes clearing the current path, fill style, stroke style, and transformations.\n   *\n   * > [!NOTE] Graphics objects are not designed to be continuously cleared and redrawn.\n   * > Instead, they are intended to be used for static or semi-static graphics that\n   * > can be redrawn as needed. Frequent clearing and redrawing may lead to performance issues.\n   * @example\n   * ```ts\n   * const graphics = new Graphics();\n   *\n   * // Draw some shapes\n   * graphics\n   *     .circle(100, 100, 50)\n   *     .fill({ color: 0xff0000 })\n   *     .rect(200, 100, 100, 50)\n   *     .fill({ color: 0x00ff00 });\n   *\n   * // Clear all graphics\n   * graphics.clear();\n   *\n   * // Start fresh with new shapes\n   * graphics\n   *     .circle(150, 150, 30)\n   *     .fill({ color: 0x0000ff });\n   * ```\n   * @returns The Graphics instance for method chaining\n   * @see {@link Graphics#beginPath} For starting a new path without clearing styles\n   * @see {@link Graphics#save} For saving the current state\n   * @see {@link Graphics#restore} For restoring a previous state\n   */\n  clear() {\n    return this._callContextMethod(\"clear\", []);\n  }\n  /**\n   * Gets or sets the current fill style for the graphics context. The fill style determines\n   * how shapes are filled when using the fill() method.\n   * @example\n   * ```ts\n   * const graphics = new Graphics();\n   *\n   * // Basic color fill\n   * graphics.fillStyle = {\n   *     color: 0xff0000,  // Red\n   *     alpha: 1\n   * };\n   *\n   * // Using gradients\n   * const gradient = new FillGradient({\n   *     end: { x: 0, y: 1 }, // Vertical gradient\n   *     stops: [\n   *         { offset: 0, color: 0xff0000, alpha: 1 }, // Start color\n   *         { offset: 1, color: 0x0000ff, alpha: 1 }  // End color\n   *     ]\n   * });\n   *\n   * graphics.fillStyle = {\n   *     fill: gradient,\n   *     alpha: 0.8\n   * };\n   *\n   * // Using patterns\n   * graphics.fillStyle = {\n   *     texture: myTexture,\n   *     alpha: 1,\n   *     matrix: new Matrix()\n   *         .scale(0.5, 0.5)\n   *         .rotate(Math.PI / 4)\n   * };\n   * ```\n   * @type {ConvertedFillStyle}\n   * @see {@link FillStyle} For all available fill style options\n   * @see {@link FillGradient} For creating gradient fills\n   * @see {@link Graphics#fill} For applying the fill to paths\n   */\n  get fillStyle() {\n    return this._context.fillStyle;\n  }\n  set fillStyle(value) {\n    this._context.fillStyle = value;\n  }\n  /**\n   * Gets or sets the current stroke style for the graphics context. The stroke style determines\n   * how paths are outlined when using the stroke() method.\n   * @example\n   * ```ts\n   * const graphics = new Graphics();\n   *\n   * // Basic stroke style\n   * graphics.strokeStyle = {\n   *     width: 2,\n   *     color: 0xff0000,\n   *     alpha: 1\n   * };\n   *\n   * // Using with gradients\n   * const gradient = new FillGradient({\n   *   end: { x: 0, y: 1 },\n   *   stops: [\n   *       { offset: 0, color: 0xff0000, alpha: 1 },\n   *       { offset: 1, color: 0x0000ff, alpha: 1 }\n   *   ]\n   * });\n   *\n   * graphics.strokeStyle = {\n   *     width: 4,\n   *     fill: gradient,\n   *     alignment: 0.5,\n   *     join: 'round',\n   *     cap: 'round'\n   * };\n   *\n   * // Complex stroke settings\n   * graphics.strokeStyle = {\n   *     width: 6,\n   *     color: 0x00ff00,\n   *     alpha: 0.5,\n   *     join: 'miter',\n   *     miterLimit: 10,\n   * };\n   * ```\n   * @see {@link StrokeStyle} For all available stroke style options\n   * @see {@link Graphics#stroke} For applying the stroke to paths\n   */\n  get strokeStyle() {\n    return this._context.strokeStyle;\n  }\n  set strokeStyle(value) {\n    this._context.strokeStyle = value;\n  }\n  /**\n   * Creates a new Graphics object that copies the current graphics content.\n   * The clone can either share the same context (shallow clone) or have its own independent\n   * context (deep clone).\n   * @example\n   * ```ts\n   * const graphics = new Graphics();\n   *\n   * // Create original graphics content\n   * graphics\n   *     .circle(100, 100, 50)\n   *     .fill({ color: 0xff0000 });\n   *\n   * // Create a shallow clone (shared context)\n   * const shallowClone = graphics.clone();\n   *\n   * // Changes to original affect the clone\n   * graphics\n   *     .circle(200, 100, 30)\n   *     .fill({ color: 0x00ff00 });\n   *\n   * // Create a deep clone (independent context)\n   * const deepClone = graphics.clone(true);\n   *\n   * // Modify deep clone independently\n   * deepClone\n   *     .translateTransform(100, 100)\n   *     .circle(0, 0, 40)\n   *     .fill({ color: 0x0000ff });\n   * ```\n   * @param deep - Whether to create a deep clone of the graphics object.\n   *              If false (default), the context will be shared between objects.\n   *              If true, creates an independent copy of the context.\n   * @returns A new Graphics instance with either shared or copied context\n   * @see {@link Graphics#context} For accessing the underlying graphics context\n   * @see {@link GraphicsContext} For understanding the shared context behavior\n   */\n  clone(deep = false) {\n    if (deep) {\n      return new Graphics(this._context.clone());\n    }\n    this._ownedContext = null;\n    const clone = new Graphics(this._context);\n    return clone;\n  }\n  // -------- v7 deprecations ---------\n  /**\n   * @param width\n   * @param color\n   * @param alpha\n   * @deprecated since 8.0.0 Use {@link Graphics#setStrokeStyle} instead\n   */\n  lineStyle(width, color, alpha) {\n    deprecation(v8_0_0, \"Graphics#lineStyle is no longer needed. Use Graphics#setStrokeStyle to set the stroke style.\");\n    const strokeStyle = {};\n    width && (strokeStyle.width = width);\n    color && (strokeStyle.color = color);\n    alpha && (strokeStyle.alpha = alpha);\n    this.context.strokeStyle = strokeStyle;\n    return this;\n  }\n  /**\n   * @param color\n   * @param alpha\n   * @deprecated since 8.0.0 Use {@link Graphics#fill} instead\n   */\n  beginFill(color, alpha) {\n    deprecation(v8_0_0, \"Graphics#beginFill is no longer needed. Use Graphics#fill to fill the shape with the desired style.\");\n    const fillStyle = {};\n    if (color !== void 0)\n      fillStyle.color = color;\n    if (alpha !== void 0)\n      fillStyle.alpha = alpha;\n    this.context.fillStyle = fillStyle;\n    return this;\n  }\n  /**\n   * @deprecated since 8.0.0 Use {@link Graphics#fill} instead\n   */\n  endFill() {\n    deprecation(v8_0_0, \"Graphics#endFill is no longer needed. Use Graphics#fill to fill the shape with the desired style.\");\n    this.context.fill();\n    const strokeStyle = this.context.strokeStyle;\n    if (strokeStyle.width !== GraphicsContext.defaultStrokeStyle.width || strokeStyle.color !== GraphicsContext.defaultStrokeStyle.color || strokeStyle.alpha !== GraphicsContext.defaultStrokeStyle.alpha) {\n      this.context.stroke();\n    }\n    return this;\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#circle} instead\n   */\n  drawCircle(...args) {\n    deprecation(v8_0_0, \"Graphics#drawCircle has been renamed to Graphics#circle\");\n    return this._callContextMethod(\"circle\", args);\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#ellipse} instead\n   */\n  drawEllipse(...args) {\n    deprecation(v8_0_0, \"Graphics#drawEllipse has been renamed to Graphics#ellipse\");\n    return this._callContextMethod(\"ellipse\", args);\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#poly} instead\n   */\n  drawPolygon(...args) {\n    deprecation(v8_0_0, \"Graphics#drawPolygon has been renamed to Graphics#poly\");\n    return this._callContextMethod(\"poly\", args);\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#rect} instead\n   */\n  drawRect(...args) {\n    deprecation(v8_0_0, \"Graphics#drawRect has been renamed to Graphics#rect\");\n    return this._callContextMethod(\"rect\", args);\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#roundRect} instead\n   */\n  drawRoundedRect(...args) {\n    deprecation(v8_0_0, \"Graphics#drawRoundedRect has been renamed to Graphics#roundRect\");\n    return this._callContextMethod(\"roundRect\", args);\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#star} instead\n   */\n  drawStar(...args) {\n    deprecation(v8_0_0, \"Graphics#drawStar has been renamed to Graphics#star\");\n    return this._callContextMethod(\"star\", args);\n  }\n}\n\nexport { Graphics };\n//# sourceMappingURL=Graphics.mjs.map\n","import { Buffer } from '../../../rendering/renderers/shared/buffer/Buffer.mjs';\nimport { BufferUsage } from '../../../rendering/renderers/shared/buffer/const.mjs';\nimport { Geometry } from '../../../rendering/renderers/shared/geometry/Geometry.mjs';\nimport { deprecation, v8_0_0 } from '../../../utils/logging/deprecation.mjs';\n\n\"use strict\";\nconst _MeshGeometry = class _MeshGeometry extends Geometry {\n  constructor(...args) {\n    let options = args[0] ?? {};\n    if (options instanceof Float32Array) {\n      deprecation(v8_0_0, \"use new MeshGeometry({ positions, uvs, indices }) instead\");\n      options = {\n        positions: options,\n        uvs: args[1],\n        indices: args[2]\n      };\n    }\n    options = { ..._MeshGeometry.defaultOptions, ...options };\n    const positions = options.positions || new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);\n    let uvs = options.uvs;\n    if (!uvs) {\n      if (options.positions) {\n        uvs = new Float32Array(positions.length);\n      } else {\n        uvs = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);\n      }\n    }\n    const indices = options.indices || new Uint32Array([0, 1, 2, 0, 2, 3]);\n    const shrinkToFit = options.shrinkBuffersToFit;\n    const positionBuffer = new Buffer({\n      data: positions,\n      label: \"attribute-mesh-positions\",\n      shrinkToFit,\n      usage: BufferUsage.VERTEX | BufferUsage.COPY_DST\n    });\n    const uvBuffer = new Buffer({\n      data: uvs,\n      label: \"attribute-mesh-uvs\",\n      shrinkToFit,\n      usage: BufferUsage.VERTEX | BufferUsage.COPY_DST\n    });\n    const indexBuffer = new Buffer({\n      data: indices,\n      label: \"index-mesh-buffer\",\n      shrinkToFit,\n      usage: BufferUsage.INDEX | BufferUsage.COPY_DST\n    });\n    super({\n      attributes: {\n        aPosition: {\n          buffer: positionBuffer,\n          format: \"float32x2\",\n          stride: 2 * 4,\n          offset: 0\n        },\n        aUV: {\n          buffer: uvBuffer,\n          format: \"float32x2\",\n          stride: 2 * 4,\n          offset: 0\n        }\n      },\n      indexBuffer,\n      topology: options.topology\n    });\n    this.batchMode = \"auto\";\n  }\n  /** The positions of the mesh. */\n  get positions() {\n    return this.attributes.aPosition.buffer.data;\n  }\n  /**\n   * Set the positions of the mesh.\n   * When setting the positions, its important that the uvs array is at least as long as the positions array.\n   * otherwise the geometry will not be valid.\n   * @param {Float32Array} value - The positions of the mesh.\n   */\n  set positions(value) {\n    this.attributes.aPosition.buffer.data = value;\n  }\n  /** The UVs of the mesh. */\n  get uvs() {\n    return this.attributes.aUV.buffer.data;\n  }\n  /**\n   * Set the UVs of the mesh.\n   * Its important that the uvs array you set is at least as long as the positions array.\n   * otherwise the geometry will not be valid.\n   * @param {Float32Array} value - The UVs of the mesh.\n   */\n  set uvs(value) {\n    this.attributes.aUV.buffer.data = value;\n  }\n  /** The indices of the mesh. */\n  get indices() {\n    return this.indexBuffer.data;\n  }\n  set indices(value) {\n    this.indexBuffer.data = value;\n  }\n};\n_MeshGeometry.defaultOptions = {\n  topology: \"triangle-list\",\n  shrinkBuffersToFit: false\n};\nlet MeshGeometry = _MeshGeometry;\n\nexport { MeshGeometry };\n//# sourceMappingURL=MeshGeometry.mjs.map\n","import { DOMAdapter } from '../../environment/adapter.mjs';\nimport { nextPow2 } from '../../maths/misc/pow2.mjs';\nimport { Rectangle } from '../../maths/shapes/Rectangle.mjs';\n\n\"use strict\";\nlet _internalCanvas = null;\nlet _internalContext = null;\nfunction ensureInternalCanvas(width, height) {\n  if (!_internalCanvas) {\n    _internalCanvas = DOMAdapter.get().createCanvas(256, 128);\n    _internalContext = _internalCanvas.getContext(\"2d\", { willReadFrequently: true });\n    _internalContext.globalCompositeOperation = \"copy\";\n    _internalContext.globalAlpha = 1;\n  }\n  if (_internalCanvas.width < width || _internalCanvas.height < height) {\n    _internalCanvas.width = nextPow2(width);\n    _internalCanvas.height = nextPow2(height);\n  }\n}\nfunction checkRow(data, width, y) {\n  for (let x = 0, index = 4 * y * width; x < width; ++x, index += 4) {\n    if (data[index + 3] !== 0)\n      return false;\n  }\n  return true;\n}\nfunction checkColumn(data, width, x, top, bottom) {\n  const stride = 4 * width;\n  for (let y = top, index = top * stride + 4 * x; y <= bottom; ++y, index += stride) {\n    if (data[index + 3] !== 0)\n      return false;\n  }\n  return true;\n}\nfunction getCanvasBoundingBox(...args) {\n  let options = args[0];\n  if (!options.canvas) {\n    options = { canvas: args[0], resolution: args[1] };\n  }\n  const { canvas } = options;\n  const resolution = Math.min(options.resolution ?? 1, 1);\n  const width = options.width ?? canvas.width;\n  const height = options.height ?? canvas.height;\n  let output = options.output;\n  ensureInternalCanvas(width, height);\n  if (!_internalContext) {\n    throw new TypeError(\"Failed to get canvas 2D context\");\n  }\n  _internalContext.drawImage(\n    canvas,\n    0,\n    0,\n    width,\n    height,\n    0,\n    0,\n    width * resolution,\n    height * resolution\n  );\n  const imageData = _internalContext.getImageData(0, 0, width, height);\n  const data = imageData.data;\n  let left = 0;\n  let top = 0;\n  let right = width - 1;\n  let bottom = height - 1;\n  while (top < height && checkRow(data, width, top))\n    ++top;\n  if (top === height)\n    return Rectangle.EMPTY;\n  while (checkRow(data, width, bottom))\n    --bottom;\n  while (checkColumn(data, width, left, top, bottom))\n    ++left;\n  while (checkColumn(data, width, right, top, bottom))\n    --right;\n  ++right;\n  ++bottom;\n  _internalContext.globalCompositeOperation = \"source-over\";\n  _internalContext.strokeRect(left, top, right - left, bottom - top);\n  _internalContext.globalCompositeOperation = \"copy\";\n  output ?? (output = new Rectangle());\n  output.set(left / resolution, top / resolution, (right - left) / resolution, (bottom - top) / resolution);\n  return output;\n}\n\nexport { getCanvasBoundingBox };\n//# sourceMappingURL=getCanvasBoundingBox.mjs.map\n","import { Color } from '../../../color/Color.mjs';\nimport { Rectangle } from '../../../maths/shapes/Rectangle.mjs';\nimport { CanvasPool } from '../../../rendering/renderers/shared/texture/CanvasPool.mjs';\nimport { getCanvasBoundingBox } from '../../../utils/canvas/getCanvasBoundingBox.mjs';\nimport { CanvasTextMetrics } from './CanvasTextMetrics.mjs';\nimport { fontStringFromTextStyle } from './utils/fontStringFromTextStyle.mjs';\nimport { getCanvasFillStyle } from './utils/getCanvasFillStyle.mjs';\n\n\"use strict\";\nconst tempRect = new Rectangle();\nclass CanvasTextGeneratorClass {\n  /**\n   * Creates a canvas with the specified text rendered to it.\n   *\n   * Generates a canvas of appropriate size, renders the text with the provided style,\n   * and returns both the canvas/context and a Rectangle representing the text bounds.\n   *\n   * When trim is enabled in the style, the frame will represent the bounds of the\n   * non-transparent pixels, which can be smaller than the full canvas.\n   * @param options - The options for generating the text canvas\n   * @param options.text - The text to render\n   * @param options.style - The style to apply to the text\n   * @param options.resolution - The resolution of the canvas (defaults to 1)\n   * @param options.padding\n   * @returns An object containing the canvas/context and the frame (bounds) of the text\n   */\n  getCanvasAndContext(options) {\n    const { text, style, resolution = 1 } = options;\n    const padding = style._getFinalPadding();\n    const measured = CanvasTextMetrics.measureText(text || \" \", style);\n    const width = Math.ceil(Math.ceil(Math.max(1, measured.width) + padding * 2) * resolution);\n    const height = Math.ceil(Math.ceil(Math.max(1, measured.height) + padding * 2) * resolution);\n    const canvasAndContext = CanvasPool.getOptimalCanvasAndContext(width, height);\n    this._renderTextToCanvas(text, style, padding, resolution, canvasAndContext);\n    const frame = style.trim ? getCanvasBoundingBox({ canvas: canvasAndContext.canvas, width, height, resolution: 1, output: tempRect }) : tempRect.set(0, 0, width, height);\n    return {\n      canvasAndContext,\n      frame\n    };\n  }\n  /**\n   * Returns a canvas and context to the pool.\n   *\n   * This should be called when you're done with the canvas to allow reuse\n   * and prevent memory leaks.\n   * @param canvasAndContext - The canvas and context to return to the pool\n   */\n  returnCanvasAndContext(canvasAndContext) {\n    CanvasPool.returnCanvasAndContext(canvasAndContext);\n  }\n  /**\n   * Renders text to its canvas, and updates its texture.\n   * @param text - The text to render\n   * @param style - The style of the text\n   * @param padding - The padding of the text\n   * @param resolution - The resolution of the text\n   * @param canvasAndContext - The canvas and context to render the text to\n   */\n  _renderTextToCanvas(text, style, padding, resolution, canvasAndContext) {\n    const { canvas, context } = canvasAndContext;\n    const font = fontStringFromTextStyle(style);\n    const measured = CanvasTextMetrics.measureText(text || \" \", style);\n    const lines = measured.lines;\n    const lineHeight = measured.lineHeight;\n    const lineWidths = measured.lineWidths;\n    const maxLineWidth = measured.maxLineWidth;\n    const fontProperties = measured.fontProperties;\n    const height = canvas.height;\n    context.resetTransform();\n    context.scale(resolution, resolution);\n    context.textBaseline = style.textBaseline;\n    if (style._stroke?.width) {\n      const strokeStyle = style._stroke;\n      context.lineWidth = strokeStyle.width;\n      context.miterLimit = strokeStyle.miterLimit;\n      context.lineJoin = strokeStyle.join;\n      context.lineCap = strokeStyle.cap;\n    }\n    context.font = font;\n    let linePositionX;\n    let linePositionY;\n    const passesCount = style.dropShadow ? 2 : 1;\n    for (let i = 0; i < passesCount; ++i) {\n      const isShadowPass = style.dropShadow && i === 0;\n      const dsOffsetText = isShadowPass ? Math.ceil(Math.max(1, height) + padding * 2) : 0;\n      const dsOffsetShadow = dsOffsetText * resolution;\n      if (isShadowPass) {\n        context.fillStyle = \"black\";\n        context.strokeStyle = \"black\";\n        const shadowOptions = style.dropShadow;\n        const dropShadowColor = shadowOptions.color;\n        const dropShadowAlpha = shadowOptions.alpha;\n        context.shadowColor = Color.shared.setValue(dropShadowColor).setAlpha(dropShadowAlpha).toRgbaString();\n        const dropShadowBlur = shadowOptions.blur * resolution;\n        const dropShadowDistance = shadowOptions.distance * resolution;\n        context.shadowBlur = dropShadowBlur;\n        context.shadowOffsetX = Math.cos(shadowOptions.angle) * dropShadowDistance;\n        context.shadowOffsetY = Math.sin(shadowOptions.angle) * dropShadowDistance + dsOffsetShadow;\n      } else {\n        context.fillStyle = style._fill ? getCanvasFillStyle(style._fill, context, measured, padding * 2) : null;\n        if (style._stroke?.width) {\n          const strokePadding = style._stroke.width * 0.5 + padding * 2;\n          context.strokeStyle = getCanvasFillStyle(style._stroke, context, measured, strokePadding);\n        }\n        context.shadowColor = \"black\";\n      }\n      let linePositionYShift = (lineHeight - fontProperties.fontSize) / 2;\n      if (lineHeight - fontProperties.fontSize < 0) {\n        linePositionYShift = 0;\n      }\n      const strokeWidth = style._stroke?.width ?? 0;\n      for (let i2 = 0; i2 < lines.length; i2++) {\n        linePositionX = strokeWidth / 2;\n        linePositionY = strokeWidth / 2 + i2 * lineHeight + fontProperties.ascent + linePositionYShift;\n        if (style.align === \"right\") {\n          linePositionX += maxLineWidth - lineWidths[i2];\n        } else if (style.align === \"center\") {\n          linePositionX += (maxLineWidth - lineWidths[i2]) / 2;\n        }\n        if (style._stroke?.width) {\n          this._drawLetterSpacing(\n            lines[i2],\n            style,\n            canvasAndContext,\n            linePositionX + padding,\n            linePositionY + padding - dsOffsetText,\n            true\n          );\n        }\n        if (style._fill !== void 0) {\n          this._drawLetterSpacing(\n            lines[i2],\n            style,\n            canvasAndContext,\n            linePositionX + padding,\n            linePositionY + padding - dsOffsetText\n          );\n        }\n      }\n    }\n  }\n  /**\n   * Render the text with letter-spacing.\n   *\n   * This method handles rendering text with the correct letter spacing, using either:\n   * 1. Native letter spacing if supported by the browser\n   * 2. Manual letter spacing calculation if not natively supported\n   *\n   * For manual letter spacing, it calculates the position of each character\n   * based on its width and the desired spacing.\n   * @param text - The text to draw\n   * @param style - The text style to apply\n   * @param canvasAndContext - The canvas and context to draw to\n   * @param x - Horizontal position to draw the text\n   * @param y - Vertical position to draw the text\n   * @param isStroke - Whether to render the stroke (true) or fill (false)\n   * @private\n   */\n  _drawLetterSpacing(text, style, canvasAndContext, x, y, isStroke = false) {\n    const { context } = canvasAndContext;\n    const letterSpacing = style.letterSpacing;\n    let useExperimentalLetterSpacing = false;\n    if (CanvasTextMetrics.experimentalLetterSpacingSupported) {\n      if (CanvasTextMetrics.experimentalLetterSpacing) {\n        context.letterSpacing = `${letterSpacing}px`;\n        context.textLetterSpacing = `${letterSpacing}px`;\n        useExperimentalLetterSpacing = true;\n      } else {\n        context.letterSpacing = \"0px\";\n        context.textLetterSpacing = \"0px\";\n      }\n    }\n    if (letterSpacing === 0 || useExperimentalLetterSpacing) {\n      if (isStroke) {\n        context.strokeText(text, x, y);\n      } else {\n        context.fillText(text, x, y);\n      }\n      return;\n    }\n    let currentPosition = x;\n    const stringArray = CanvasTextMetrics.graphemeSegmenter(text);\n    let previousWidth = context.measureText(text).width;\n    let currentWidth = 0;\n    for (let i = 0; i < stringArray.length; ++i) {\n      const currentChar = stringArray[i];\n      if (isStroke) {\n        context.strokeText(currentChar, currentPosition, y);\n      } else {\n        context.fillText(currentChar, currentPosition, y);\n      }\n      let textStr = \"\";\n      for (let j = i + 1; j < stringArray.length; ++j) {\n        textStr += stringArray[j];\n      }\n      currentWidth = context.measureText(textStr).width;\n      currentPosition += previousWidth - currentWidth + letterSpacing;\n      previousWidth = currentWidth;\n    }\n  }\n}\nconst CanvasTextGenerator = new CanvasTextGeneratorClass();\n\nexport { CanvasTextGenerator };\n//# sourceMappingURL=CanvasTextGenerator.mjs.map\n","import { DOMAdapter } from '../../environment/adapter.mjs';\n\n\"use strict\";\nconst nssvg = \"http://www.w3.org/2000/svg\";\nconst nsxhtml = \"http://www.w3.org/1999/xhtml\";\nclass HTMLTextRenderData {\n  constructor() {\n    this.svgRoot = document.createElementNS(nssvg, \"svg\");\n    this.foreignObject = document.createElementNS(nssvg, \"foreignObject\");\n    this.domElement = document.createElementNS(nsxhtml, \"div\");\n    this.styleElement = document.createElementNS(nsxhtml, \"style\");\n    const { foreignObject, svgRoot, styleElement, domElement } = this;\n    foreignObject.setAttribute(\"width\", \"10000\");\n    foreignObject.setAttribute(\"height\", \"10000\");\n    foreignObject.style.overflow = \"hidden\";\n    svgRoot.appendChild(foreignObject);\n    foreignObject.appendChild(styleElement);\n    foreignObject.appendChild(domElement);\n    this.image = DOMAdapter.get().createImage();\n  }\n  destroy() {\n    this.svgRoot.remove();\n    this.foreignObject.remove();\n    this.styleElement.remove();\n    this.domElement.remove();\n    this.image.src = \"\";\n    this.image.remove();\n    this.svgRoot = null;\n    this.foreignObject = null;\n    this.styleElement = null;\n    this.domElement = null;\n    this.image = null;\n    this.canvasAndContext = null;\n  }\n}\n\nexport { HTMLTextRenderData };\n//# sourceMappingURL=HTMLTextRenderData.mjs.map\n","import { HTMLTextRenderData } from '../HTMLTextRenderData.mjs';\n\n\"use strict\";\nlet tempHTMLTextRenderData;\nfunction measureHtmlText(text, style, fontStyleCSS, htmlTextRenderData) {\n  htmlTextRenderData || (htmlTextRenderData = tempHTMLTextRenderData || (tempHTMLTextRenderData = new HTMLTextRenderData()));\n  const { domElement, styleElement, svgRoot } = htmlTextRenderData;\n  domElement.innerHTML = `<style>${style.cssStyle};</style><div style='padding:0'>${text}</div>`;\n  domElement.setAttribute(\"style\", \"transform-origin: top left; display: inline-block\");\n  if (fontStyleCSS) {\n    styleElement.textContent = fontStyleCSS;\n  }\n  document.body.appendChild(svgRoot);\n  const contentBounds = domElement.getBoundingClientRect();\n  svgRoot.remove();\n  const doublePadding = style.padding * 2;\n  return {\n    width: contentBounds.width - doublePadding,\n    height: contentBounds.height - doublePadding\n  };\n}\n\nexport { measureHtmlText };\n//# sourceMappingURL=measureHtmlText.mjs.map\n","\"use strict\";\nconst localUniformBit = {\n  name: \"local-uniform-bit\",\n  vertex: {\n    header: (\n      /* wgsl */\n      `\n\n            struct LocalUniforms {\n                uTransformMatrix:mat3x3<f32>,\n                uColor:vec4<f32>,\n                uRound:f32,\n            }\n\n            @group(1) @binding(0) var<uniform> localUniforms : LocalUniforms;\n        `\n    ),\n    main: (\n      /* wgsl */\n      `\n            vColor *= localUniforms.uColor;\n            modelMatrix *= localUniforms.uTransformMatrix;\n        `\n    ),\n    end: (\n      /* wgsl */\n      `\n            if(localUniforms.uRound == 1)\n            {\n                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);\n            }\n        `\n    )\n  }\n};\nconst localUniformBitGroup2 = {\n  ...localUniformBit,\n  vertex: {\n    ...localUniformBit.vertex,\n    // replace the group!\n    header: localUniformBit.vertex.header.replace(\"group(1)\", \"group(2)\")\n  }\n};\nconst localUniformBitGl = {\n  name: \"local-uniform-bit\",\n  vertex: {\n    header: (\n      /* glsl */\n      `\n\n            uniform mat3 uTransformMatrix;\n            uniform vec4 uColor;\n            uniform float uRound;\n        `\n    ),\n    main: (\n      /* glsl */\n      `\n            vColor *= uColor;\n            modelMatrix = uTransformMatrix;\n        `\n    ),\n    end: (\n      /* glsl */\n      `\n            if(uRound == 1.)\n            {\n                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n            }\n        `\n    )\n  }\n};\n\nexport { localUniformBit, localUniformBitGl, localUniformBitGroup2 };\n//# sourceMappingURL=localUniformBit.mjs.map\n","\"use strict\";\nclass BatchableSprite {\n  constructor() {\n    this.batcherName = \"default\";\n    this.topology = \"triangle-list\";\n    // batch specific..\n    this.attributeSize = 4;\n    this.indexSize = 6;\n    this.packAsQuad = true;\n    this.roundPixels = 0;\n    this._attributeStart = 0;\n    // location in the buffer\n    this._batcher = null;\n    this._batch = null;\n  }\n  get blendMode() {\n    return this.renderable.groupBlendMode;\n  }\n  get color() {\n    return this.renderable.groupColorAlpha;\n  }\n  reset() {\n    this.renderable = null;\n    this.texture = null;\n    this._batcher = null;\n    this._batch = null;\n    this.bounds = null;\n  }\n  destroy() {\n  }\n}\n\nexport { BatchableSprite };\n//# sourceMappingURL=BatchableSprite.mjs.map\n","\"use strict\";\nfunction colorToUniform(rgb, alpha, out, offset) {\n  out[offset++] = (rgb >> 16 & 255) / 255;\n  out[offset++] = (rgb >> 8 & 255) / 255;\n  out[offset++] = (rgb & 255) / 255;\n  out[offset++] = alpha;\n}\nfunction color32BitToUniform(abgr, out, offset) {\n  const alpha = (abgr >> 24 & 255) / 255;\n  out[offset++] = (abgr & 255) / 255 * alpha;\n  out[offset++] = (abgr >> 8 & 255) / 255 * alpha;\n  out[offset++] = (abgr >> 16 & 255) / 255 * alpha;\n  out[offset++] = alpha;\n}\n\nexport { color32BitToUniform, colorToUniform };\n//# sourceMappingURL=colorToUniform.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { State } from '../../../rendering/renderers/shared/state/State.mjs';\nimport { BigPool } from '../../../utils/pool/PoolGroup.mjs';\nimport { color32BitToUniform } from '../gpu/colorToUniform.mjs';\nimport { BatchableGraphics } from './BatchableGraphics.mjs';\n\n\"use strict\";\nclass GraphicsGpuData {\n  constructor() {\n    this.batches = [];\n    this.batched = false;\n  }\n  destroy() {\n    this.batches.forEach((batch) => {\n      BigPool.return(batch);\n    });\n    this.batches.length = 0;\n  }\n}\nclass GraphicsPipe {\n  constructor(renderer, adaptor) {\n    this.state = State.for2d();\n    this.renderer = renderer;\n    this._adaptor = adaptor;\n    this.renderer.runners.contextChange.add(this);\n  }\n  contextChange() {\n    this._adaptor.contextChange(this.renderer);\n  }\n  validateRenderable(graphics) {\n    const context = graphics.context;\n    const wasBatched = !!graphics._gpuData;\n    const gpuContext = this.renderer.graphicsContext.updateGpuContext(context);\n    if (gpuContext.isBatchable || wasBatched !== gpuContext.isBatchable) {\n      return true;\n    }\n    return false;\n  }\n  addRenderable(graphics, instructionSet) {\n    const gpuContext = this.renderer.graphicsContext.updateGpuContext(graphics.context);\n    if (graphics.didViewUpdate) {\n      this._rebuild(graphics);\n    }\n    if (gpuContext.isBatchable) {\n      this._addToBatcher(graphics, instructionSet);\n    } else {\n      this.renderer.renderPipes.batch.break(instructionSet);\n      instructionSet.add(graphics);\n    }\n  }\n  updateRenderable(graphics) {\n    const gpuData = this._getGpuDataForRenderable(graphics);\n    const batches = gpuData.batches;\n    for (let i = 0; i < batches.length; i++) {\n      const batch = batches[i];\n      batch._batcher.updateElement(batch);\n    }\n  }\n  execute(graphics) {\n    if (!graphics.isRenderable)\n      return;\n    const renderer = this.renderer;\n    const context = graphics.context;\n    const contextSystem = renderer.graphicsContext;\n    if (!contextSystem.getGpuContext(context).batches.length) {\n      return;\n    }\n    const shader = context.customShader || this._adaptor.shader;\n    this.state.blendMode = graphics.groupBlendMode;\n    const localUniforms = shader.resources.localUniforms.uniforms;\n    localUniforms.uTransformMatrix = graphics.groupTransform;\n    localUniforms.uRound = renderer._roundPixels | graphics._roundPixels;\n    color32BitToUniform(\n      graphics.groupColorAlpha,\n      localUniforms.uColor,\n      0\n    );\n    this._adaptor.execute(this, graphics);\n  }\n  _rebuild(graphics) {\n    const gpuData = this._getGpuDataForRenderable(graphics);\n    const gpuContext = this.renderer.graphicsContext.updateGpuContext(graphics.context);\n    gpuData.destroy();\n    if (gpuContext.isBatchable) {\n      this._updateBatchesForRenderable(graphics, gpuData);\n    }\n  }\n  _addToBatcher(graphics, instructionSet) {\n    const batchPipe = this.renderer.renderPipes.batch;\n    const batches = this._getGpuDataForRenderable(graphics).batches;\n    for (let i = 0; i < batches.length; i++) {\n      const batch = batches[i];\n      batchPipe.addToBatch(batch, instructionSet);\n    }\n  }\n  _getGpuDataForRenderable(graphics) {\n    return graphics._gpuData[this.renderer.uid] || this._initGpuDataForRenderable(graphics);\n  }\n  _initGpuDataForRenderable(graphics) {\n    const gpuData = new GraphicsGpuData();\n    graphics._gpuData[this.renderer.uid] = gpuData;\n    return gpuData;\n  }\n  _updateBatchesForRenderable(graphics, gpuData) {\n    const context = graphics.context;\n    const gpuContext = this.renderer.graphicsContext.getGpuContext(context);\n    const roundPixels = this.renderer._roundPixels | graphics._roundPixels;\n    gpuData.batches = gpuContext.batches.map((batch) => {\n      const batchClone = BigPool.get(BatchableGraphics);\n      batch.copyTo(batchClone);\n      batchClone.renderable = graphics;\n      batchClone.roundPixels = roundPixels;\n      return batchClone;\n    });\n  }\n  destroy() {\n    this.renderer = null;\n    this._adaptor.destroy();\n    this._adaptor = null;\n    this.state = null;\n  }\n}\n/** @ignore */\nGraphicsPipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"graphics\"\n};\n\nexport { GraphicsGpuData, GraphicsPipe };\n//# sourceMappingURL=GraphicsPipe.mjs.map\n","import { deprecation, v8_0_0 } from '../../utils/logging/deprecation.mjs';\nimport { MeshGeometry } from '../mesh/shared/MeshGeometry.mjs';\n\n\"use strict\";\nconst _PlaneGeometry = class _PlaneGeometry extends MeshGeometry {\n  constructor(...args) {\n    super({});\n    let options = args[0] ?? {};\n    if (typeof options === \"number\") {\n      deprecation(v8_0_0, \"PlaneGeometry constructor changed please use { width, height, verticesX, verticesY } instead\");\n      options = {\n        width: options,\n        height: args[1],\n        verticesX: args[2],\n        verticesY: args[3]\n      };\n    }\n    this.build(options);\n  }\n  /**\n   * Refreshes plane coordinates\n   * @param options - Options to be applied to plane geometry\n   */\n  build(options) {\n    options = { ..._PlaneGeometry.defaultOptions, ...options };\n    this.verticesX = this.verticesX ?? options.verticesX;\n    this.verticesY = this.verticesY ?? options.verticesY;\n    this.width = this.width ?? options.width;\n    this.height = this.height ?? options.height;\n    const total = this.verticesX * this.verticesY;\n    const verts = [];\n    const uvs = [];\n    const indices = [];\n    const verticesX = this.verticesX - 1;\n    const verticesY = this.verticesY - 1;\n    const sizeX = this.width / verticesX;\n    const sizeY = this.height / verticesY;\n    for (let i = 0; i < total; i++) {\n      const x = i % this.verticesX;\n      const y = i / this.verticesX | 0;\n      verts.push(x * sizeX, y * sizeY);\n      uvs.push(x / verticesX, y / verticesY);\n    }\n    const totalSub = verticesX * verticesY;\n    for (let i = 0; i < totalSub; i++) {\n      const xpos = i % verticesX;\n      const ypos = i / verticesX | 0;\n      const value = ypos * this.verticesX + xpos;\n      const value2 = ypos * this.verticesX + xpos + 1;\n      const value3 = (ypos + 1) * this.verticesX + xpos;\n      const value4 = (ypos + 1) * this.verticesX + xpos + 1;\n      indices.push(\n        value,\n        value2,\n        value3,\n        value2,\n        value4,\n        value3\n      );\n    }\n    this.buffers[0].data = new Float32Array(verts);\n    this.buffers[1].data = new Float32Array(uvs);\n    this.indexBuffer.data = new Uint32Array(indices);\n    this.buffers[0].update();\n    this.buffers[1].update();\n    this.indexBuffer.update();\n  }\n};\n_PlaneGeometry.defaultOptions = {\n  width: 100,\n  height: 100,\n  verticesX: 10,\n  verticesY: 10\n};\nlet PlaneGeometry = _PlaneGeometry;\n\nexport { PlaneGeometry };\n//# sourceMappingURL=PlaneGeometry.mjs.map\n","\"use strict\";\nclass BatchableMesh {\n  constructor() {\n    this.batcherName = \"default\";\n    this.packAsQuad = false;\n    this.indexOffset = 0;\n    this.attributeOffset = 0;\n    this.roundPixels = 0;\n    this._batcher = null;\n    this._batch = null;\n    this._textureMatrixUpdateId = -1;\n    this._uvUpdateId = -1;\n  }\n  get blendMode() {\n    return this.renderable.groupBlendMode;\n  }\n  get topology() {\n    return this._topology || this.geometry.topology;\n  }\n  set topology(value) {\n    this._topology = value;\n  }\n  reset() {\n    this.renderable = null;\n    this.texture = null;\n    this._batcher = null;\n    this._batch = null;\n    this.geometry = null;\n    this._uvUpdateId = -1;\n    this._textureMatrixUpdateId = -1;\n  }\n  /**\n   * Sets the texture for the batchable mesh.\n   * As it does so, it resets the texture matrix update ID.\n   * this is to ensure that the texture matrix is recalculated when the uvs are referenced\n   * @param value - The texture to set.\n   */\n  setTexture(value) {\n    if (this.texture === value)\n      return;\n    this.texture = value;\n    this._textureMatrixUpdateId = -1;\n  }\n  get uvs() {\n    const geometry = this.geometry;\n    const uvBuffer = geometry.getBuffer(\"aUV\");\n    const uvs = uvBuffer.data;\n    let transformedUvs = uvs;\n    const textureMatrix = this.texture.textureMatrix;\n    if (!textureMatrix.isSimple) {\n      transformedUvs = this._transformedUvs;\n      if (this._textureMatrixUpdateId !== textureMatrix._updateID || this._uvUpdateId !== uvBuffer._updateID) {\n        if (!transformedUvs || transformedUvs.length < uvs.length) {\n          transformedUvs = this._transformedUvs = new Float32Array(uvs.length);\n        }\n        this._textureMatrixUpdateId = textureMatrix._updateID;\n        this._uvUpdateId = uvBuffer._updateID;\n        textureMatrix.multiplyUvs(uvs, transformedUvs);\n      }\n    }\n    return transformedUvs;\n  }\n  get positions() {\n    return this.geometry.positions;\n  }\n  get indices() {\n    return this.geometry.indices;\n  }\n  get color() {\n    return this.renderable.groupColorAlpha;\n  }\n  get groupTransform() {\n    return this.renderable.groupTransform;\n  }\n  get attributeSize() {\n    return this.geometry.positions.length / 2;\n  }\n  get indexSize() {\n    return this.geometry.indices.length;\n  }\n}\n\nexport { BatchableMesh };\n//# sourceMappingURL=BatchableMesh.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { BindGroup } from '../../../rendering/renderers/gpu/shader/BindGroup.mjs';\nimport { UniformGroup } from '../../../rendering/renderers/shared/shader/UniformGroup.mjs';\nimport { getAdjustedBlendModeBlend } from '../../../rendering/renderers/shared/state/getAdjustedBlendModeBlend.mjs';\nimport { color32BitToUniform } from '../../graphics/gpu/colorToUniform.mjs';\nimport { BatchableMesh } from './BatchableMesh.mjs';\n\n\"use strict\";\nclass MeshGpuData {\n  destroy() {\n  }\n}\nclass MeshPipe {\n  constructor(renderer, adaptor) {\n    this.localUniforms = new UniformGroup({\n      uTransformMatrix: { value: new Matrix(), type: \"mat3x3<f32>\" },\n      uColor: { value: new Float32Array([1, 1, 1, 1]), type: \"vec4<f32>\" },\n      uRound: { value: 0, type: \"f32\" }\n    });\n    this.localUniformsBindGroup = new BindGroup({\n      0: this.localUniforms\n    });\n    this.renderer = renderer;\n    this._adaptor = adaptor;\n    this._adaptor.init();\n  }\n  validateRenderable(mesh) {\n    const meshData = this._getMeshData(mesh);\n    const wasBatched = meshData.batched;\n    const isBatched = mesh.batched;\n    meshData.batched = isBatched;\n    if (wasBatched !== isBatched) {\n      return true;\n    } else if (isBatched) {\n      const geometry = mesh._geometry;\n      if (geometry.indices.length !== meshData.indexSize || geometry.positions.length !== meshData.vertexSize) {\n        meshData.indexSize = geometry.indices.length;\n        meshData.vertexSize = geometry.positions.length;\n        return true;\n      }\n      const batchableMesh = this._getBatchableMesh(mesh);\n      if (batchableMesh.texture.uid !== mesh._texture.uid) {\n        batchableMesh._textureMatrixUpdateId = -1;\n      }\n      return !batchableMesh._batcher.checkAndUpdateTexture(\n        batchableMesh,\n        mesh._texture\n      );\n    }\n    return false;\n  }\n  addRenderable(mesh, instructionSet) {\n    const batcher = this.renderer.renderPipes.batch;\n    const meshData = this._getMeshData(mesh);\n    if (mesh.didViewUpdate) {\n      meshData.indexSize = mesh._geometry.indices?.length;\n      meshData.vertexSize = mesh._geometry.positions?.length;\n    }\n    if (meshData.batched) {\n      const gpuBatchableMesh = this._getBatchableMesh(mesh);\n      gpuBatchableMesh.setTexture(mesh._texture);\n      gpuBatchableMesh.geometry = mesh._geometry;\n      batcher.addToBatch(gpuBatchableMesh, instructionSet);\n    } else {\n      batcher.break(instructionSet);\n      instructionSet.add(mesh);\n    }\n  }\n  updateRenderable(mesh) {\n    if (mesh.batched) {\n      const gpuBatchableMesh = this._getBatchableMesh(mesh);\n      gpuBatchableMesh.setTexture(mesh._texture);\n      gpuBatchableMesh.geometry = mesh._geometry;\n      gpuBatchableMesh._batcher.updateElement(gpuBatchableMesh);\n    }\n  }\n  execute(mesh) {\n    if (!mesh.isRenderable)\n      return;\n    mesh.state.blendMode = getAdjustedBlendModeBlend(mesh.groupBlendMode, mesh.texture._source);\n    const localUniforms = this.localUniforms;\n    localUniforms.uniforms.uTransformMatrix = mesh.groupTransform;\n    localUniforms.uniforms.uRound = this.renderer._roundPixels | mesh._roundPixels;\n    localUniforms.update();\n    color32BitToUniform(\n      mesh.groupColorAlpha,\n      localUniforms.uniforms.uColor,\n      0\n    );\n    this._adaptor.execute(this, mesh);\n  }\n  _getMeshData(mesh) {\n    var _a, _b;\n    (_a = mesh._gpuData)[_b = this.renderer.uid] || (_a[_b] = new MeshGpuData());\n    return mesh._gpuData[this.renderer.uid].meshData || this._initMeshData(mesh);\n  }\n  _initMeshData(mesh) {\n    mesh._gpuData[this.renderer.uid].meshData = {\n      batched: mesh.batched,\n      indexSize: 0,\n      vertexSize: 0\n    };\n    return mesh._gpuData[this.renderer.uid].meshData;\n  }\n  _getBatchableMesh(mesh) {\n    var _a, _b;\n    (_a = mesh._gpuData)[_b = this.renderer.uid] || (_a[_b] = new MeshGpuData());\n    return mesh._gpuData[this.renderer.uid].batchableMesh || this._initBatchableMesh(mesh);\n  }\n  _initBatchableMesh(mesh) {\n    const gpuMesh = new BatchableMesh();\n    gpuMesh.renderable = mesh;\n    gpuMesh.setTexture(mesh._texture);\n    gpuMesh.transform = mesh.groupTransform;\n    gpuMesh.roundPixels = this.renderer._roundPixels | mesh._roundPixels;\n    mesh._gpuData[this.renderer.uid].batchableMesh = gpuMesh;\n    return gpuMesh;\n  }\n  destroy() {\n    this.localUniforms = null;\n    this.localUniformsBindGroup = null;\n    this._adaptor.destroy();\n    this._adaptor = null;\n    this.renderer = null;\n  }\n}\n/** @ignore */\nMeshPipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"mesh\"\n};\n\nexport { MeshGpuData, MeshPipe };\n//# sourceMappingURL=MeshPipe.mjs.map\n","\"use strict\";\nclass GlParticleContainerAdaptor {\n  execute(particleContainerPipe, container) {\n    const state = particleContainerPipe.state;\n    const renderer = particleContainerPipe.renderer;\n    const shader = container.shader || particleContainerPipe.defaultShader;\n    shader.resources.uTexture = container.texture._source;\n    shader.resources.uniforms = particleContainerPipe.localUniforms;\n    const gl = renderer.gl;\n    const buffer = particleContainerPipe.getBuffers(container);\n    renderer.shader.bind(shader);\n    renderer.state.set(state);\n    renderer.geometry.bind(buffer.geometry, shader.glProgram);\n    const byteSize = buffer.geometry.indexBuffer.data.BYTES_PER_ELEMENT;\n    const glType = byteSize === 2 ? gl.UNSIGNED_SHORT : gl.UNSIGNED_INT;\n    gl.drawElements(gl.TRIANGLES, container.particleChildren.length * 6, glType, 0);\n  }\n}\n\nexport { GlParticleContainerAdaptor };\n//# sourceMappingURL=GlParticleContainerAdaptor.mjs.map\n","\"use strict\";\nclass GpuParticleContainerAdaptor {\n  execute(particleContainerPipe, container) {\n    const renderer = particleContainerPipe.renderer;\n    const shader = container.shader || particleContainerPipe.defaultShader;\n    shader.groups[0] = renderer.renderPipes.uniformBatch.getUniformBindGroup(particleContainerPipe.localUniforms, true);\n    shader.groups[1] = renderer.texture.getTextureBindGroup(container.texture);\n    const state = particleContainerPipe.state;\n    const buffer = particleContainerPipe.getBuffers(container);\n    renderer.encoder.draw({\n      geometry: buffer.geometry,\n      shader: container.shader || particleContainerPipe.defaultShader,\n      state,\n      size: container.particleChildren.length * 6\n    });\n  }\n}\n\nexport { GpuParticleContainerAdaptor };\n//# sourceMappingURL=GpuParticleContainerAdaptor.mjs.map\n","\"use strict\";\nfunction createIndicesForQuads(size, outBuffer = null) {\n  const totalIndices = size * 6;\n  if (totalIndices > 65535) {\n    outBuffer || (outBuffer = new Uint32Array(totalIndices));\n  } else {\n    outBuffer || (outBuffer = new Uint16Array(totalIndices));\n  }\n  if (outBuffer.length !== totalIndices) {\n    throw new Error(`Out buffer length is incorrect, got ${outBuffer.length} and expected ${totalIndices}`);\n  }\n  for (let i = 0, j = 0; i < totalIndices; i += 6, j += 4) {\n    outBuffer[i + 0] = j + 0;\n    outBuffer[i + 1] = j + 1;\n    outBuffer[i + 2] = j + 2;\n    outBuffer[i + 3] = j + 0;\n    outBuffer[i + 4] = j + 2;\n    outBuffer[i + 5] = j + 3;\n  }\n  return outBuffer;\n}\n\nexport { createIndicesForQuads };\n//# sourceMappingURL=createIndicesForQuads.mjs.map\n","import { getAttributeInfoFromFormat } from '../../../../rendering/renderers/shared/geometry/utils/getAttributeInfoFromFormat.mjs';\n\n\"use strict\";\nfunction generateParticleUpdateFunction(properties) {\n  return {\n    dynamicUpdate: generateUpdateFunction(properties, true),\n    staticUpdate: generateUpdateFunction(properties, false)\n  };\n}\nfunction generateUpdateFunction(properties, dynamic) {\n  const funcFragments = [];\n  funcFragments.push(`\n\n        var index = 0;\n\n        for (let i = 0; i < ps.length; ++i)\n        {\n            const p = ps[i];\n\n            `);\n  let offset = 0;\n  for (const i in properties) {\n    const property = properties[i];\n    if (dynamic !== property.dynamic)\n      continue;\n    funcFragments.push(`offset = index + ${offset}`);\n    funcFragments.push(property.code);\n    const attributeInfo = getAttributeInfoFromFormat(property.format);\n    offset += attributeInfo.stride / 4;\n  }\n  funcFragments.push(`\n            index += stride * 4;\n        }\n    `);\n  funcFragments.unshift(`\n        var stride = ${offset};\n    `);\n  const functionSource = funcFragments.join(\"\\n\");\n  return new Function(\"ps\", \"f32v\", \"u32v\", functionSource);\n}\n\nexport { generateParticleUpdateFunction };\n//# sourceMappingURL=generateParticleUpdateFunction.mjs.map\n","import { Buffer } from '../../../rendering/renderers/shared/buffer/Buffer.mjs';\nimport { BufferUsage } from '../../../rendering/renderers/shared/buffer/const.mjs';\nimport { Geometry } from '../../../rendering/renderers/shared/geometry/Geometry.mjs';\nimport { getAttributeInfoFromFormat } from '../../../rendering/renderers/shared/geometry/utils/getAttributeInfoFromFormat.mjs';\nimport { ViewableBuffer } from '../../../utils/data/ViewableBuffer.mjs';\nimport { createIndicesForQuads } from './utils/createIndicesForQuads.mjs';\nimport { generateParticleUpdateFunction } from './utils/generateParticleUpdateFunction.mjs';\n\n\"use strict\";\nclass ParticleBuffer {\n  constructor(options) {\n    this._size = 0;\n    this._generateParticleUpdateCache = {};\n    const size = this._size = options.size ?? 1e3;\n    const properties = options.properties;\n    let staticVertexSize = 0;\n    let dynamicVertexSize = 0;\n    for (const i in properties) {\n      const property = properties[i];\n      const attributeInfo = getAttributeInfoFromFormat(property.format);\n      if (property.dynamic) {\n        dynamicVertexSize += attributeInfo.stride;\n      } else {\n        staticVertexSize += attributeInfo.stride;\n      }\n    }\n    this._dynamicStride = dynamicVertexSize / 4;\n    this._staticStride = staticVertexSize / 4;\n    this.staticAttributeBuffer = new ViewableBuffer(size * 4 * staticVertexSize);\n    this.dynamicAttributeBuffer = new ViewableBuffer(size * 4 * dynamicVertexSize);\n    this.indexBuffer = createIndicesForQuads(size);\n    const geometry = new Geometry();\n    let dynamicOffset = 0;\n    let staticOffset = 0;\n    this._staticBuffer = new Buffer({\n      data: new Float32Array(1),\n      label: \"static-particle-buffer\",\n      shrinkToFit: false,\n      usage: BufferUsage.VERTEX | BufferUsage.COPY_DST\n    });\n    this._dynamicBuffer = new Buffer({\n      data: new Float32Array(1),\n      label: \"dynamic-particle-buffer\",\n      shrinkToFit: false,\n      usage: BufferUsage.VERTEX | BufferUsage.COPY_DST\n    });\n    for (const i in properties) {\n      const property = properties[i];\n      const attributeInfo = getAttributeInfoFromFormat(property.format);\n      if (property.dynamic) {\n        geometry.addAttribute(property.attributeName, {\n          buffer: this._dynamicBuffer,\n          stride: this._dynamicStride * 4,\n          offset: dynamicOffset * 4,\n          format: property.format\n        });\n        dynamicOffset += attributeInfo.size;\n      } else {\n        geometry.addAttribute(property.attributeName, {\n          buffer: this._staticBuffer,\n          stride: this._staticStride * 4,\n          offset: staticOffset * 4,\n          format: property.format\n        });\n        staticOffset += attributeInfo.size;\n      }\n    }\n    geometry.addIndex(this.indexBuffer);\n    const uploadFunction = this.getParticleUpdate(properties);\n    this._dynamicUpload = uploadFunction.dynamicUpdate;\n    this._staticUpload = uploadFunction.staticUpdate;\n    this.geometry = geometry;\n  }\n  getParticleUpdate(properties) {\n    const key = getParticleSyncKey(properties);\n    if (this._generateParticleUpdateCache[key]) {\n      return this._generateParticleUpdateCache[key];\n    }\n    this._generateParticleUpdateCache[key] = this.generateParticleUpdate(properties);\n    return this._generateParticleUpdateCache[key];\n  }\n  generateParticleUpdate(properties) {\n    return generateParticleUpdateFunction(properties);\n  }\n  update(particles, uploadStatic) {\n    if (particles.length > this._size) {\n      uploadStatic = true;\n      this._size = Math.max(particles.length, this._size * 1.5 | 0);\n      this.staticAttributeBuffer = new ViewableBuffer(this._size * this._staticStride * 4 * 4);\n      this.dynamicAttributeBuffer = new ViewableBuffer(this._size * this._dynamicStride * 4 * 4);\n      this.indexBuffer = createIndicesForQuads(this._size);\n      this.geometry.indexBuffer.setDataWithSize(\n        this.indexBuffer,\n        this.indexBuffer.byteLength,\n        true\n      );\n    }\n    const dynamicAttributeBuffer = this.dynamicAttributeBuffer;\n    this._dynamicUpload(particles, dynamicAttributeBuffer.float32View, dynamicAttributeBuffer.uint32View);\n    this._dynamicBuffer.setDataWithSize(\n      this.dynamicAttributeBuffer.float32View,\n      particles.length * this._dynamicStride * 4,\n      true\n    );\n    if (uploadStatic) {\n      const staticAttributeBuffer = this.staticAttributeBuffer;\n      this._staticUpload(particles, staticAttributeBuffer.float32View, staticAttributeBuffer.uint32View);\n      this._staticBuffer.setDataWithSize(\n        staticAttributeBuffer.float32View,\n        particles.length * this._staticStride * 4,\n        true\n      );\n    }\n  }\n  destroy() {\n    this._staticBuffer.destroy();\n    this._dynamicBuffer.destroy();\n    this.geometry.destroy();\n  }\n}\nfunction getParticleSyncKey(properties) {\n  const keyGen = [];\n  for (const key in properties) {\n    const property = properties[key];\n    keyGen.push(key, property.code, property.dynamic ? \"d\" : \"s\");\n  }\n  return keyGen.join(\"_\");\n}\n\nexport { ParticleBuffer };\n//# sourceMappingURL=ParticleBuffer.mjs.map\n","var fragment = \"varying vec2 vUV;\\nvarying vec4 vColor;\\n\\nuniform sampler2D uTexture;\\n\\nvoid main(void){\\n    vec4 color = texture2D(uTexture, vUV) * vColor;\\n    gl_FragColor = color;\\n}\";\n\nexport { fragment as default };\n//# sourceMappingURL=particles.frag.mjs.map\n","var vertex = \"attribute vec2 aVertex;\\nattribute vec2 aUV;\\nattribute vec4 aColor;\\n\\nattribute vec2 aPosition;\\nattribute float aRotation;\\n\\nuniform mat3 uTranslationMatrix;\\nuniform float uRound;\\nuniform vec2 uResolution;\\nuniform vec4 uColor;\\n\\nvarying vec2 vUV;\\nvarying vec4 vColor;\\n\\nvec2 roundPixels(vec2 position, vec2 targetSize)\\n{       \\n    return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\\n}\\n\\nvoid main(void){\\n    float cosRotation = cos(aRotation);\\n    float sinRotation = sin(aRotation);\\n    float x = aVertex.x * cosRotation - aVertex.y * sinRotation;\\n    float y = aVertex.x * sinRotation + aVertex.y * cosRotation;\\n\\n    vec2 v = vec2(x, y);\\n    v = v + aPosition;\\n\\n    gl_Position = vec4((uTranslationMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);\\n\\n    if(uRound == 1.0)\\n    {\\n        gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\\n    }\\n\\n    vUV = aUV;\\n    vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uColor;\\n}\\n\";\n\nexport { vertex as default };\n//# sourceMappingURL=particles.vert.mjs.map\n","var wgsl = \"\\nstruct ParticleUniforms {\\n  uTranslationMatrix:mat3x3<f32>,\\n  uColor:vec4<f32>,\\n  uRound:f32,\\n  uResolution:vec2<f32>,\\n};\\n\\nfn roundPixels(position: vec2<f32>, targetSize: vec2<f32>) -> vec2<f32>\\n{\\n  return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\\n}\\n\\n@group(0) @binding(0) var<uniform> uniforms: ParticleUniforms;\\n\\n@group(1) @binding(0) var uTexture: texture_2d<f32>;\\n@group(1) @binding(1) var uSampler : sampler;\\n\\nstruct VSOutput {\\n    @builtin(position) position: vec4<f32>,\\n    @location(0) uv : vec2<f32>,\\n    @location(1) color : vec4<f32>,\\n  };\\n@vertex\\nfn mainVertex(\\n  @location(0) aVertex: vec2<f32>,\\n  @location(1) aPosition: vec2<f32>,\\n  @location(2) aUV: vec2<f32>,\\n  @location(3) aColor: vec4<f32>,\\n  @location(4) aRotation: f32,\\n) -> VSOutput {\\n  \\n   let v = vec2(\\n       aVertex.x * cos(aRotation) - aVertex.y * sin(aRotation),\\n       aVertex.x * sin(aRotation) + aVertex.y * cos(aRotation)\\n   ) + aPosition;\\n\\n   var position = vec4((uniforms.uTranslationMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);\\n\\n   if(uniforms.uRound == 1.0) {\\n       position = vec4(roundPixels(position.xy, uniforms.uResolution), position.zw);\\n   }\\n\\n    let vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uniforms.uColor;\\n\\n  return VSOutput(\\n   position,\\n   aUV,\\n   vColor,\\n  );\\n}\\n\\n@fragment\\nfn mainFragment(\\n  @location(0) uv: vec2<f32>,\\n  @location(1) color: vec4<f32>,\\n  @builtin(position) position: vec4<f32>,\\n) -> @location(0) vec4<f32> {\\n\\n    var sample = textureSample(uTexture, uSampler, uv) * color;\\n   \\n    return sample;\\n}\";\n\nexport { wgsl as default };\n//# sourceMappingURL=particles.wgsl.mjs.map\n","import { Color } from '../../../../color/Color.mjs';\nimport { Matrix } from '../../../../maths/matrix/Matrix.mjs';\nimport { GlProgram } from '../../../../rendering/renderers/gl/shader/GlProgram.mjs';\nimport { GpuProgram } from '../../../../rendering/renderers/gpu/shader/GpuProgram.mjs';\nimport { Shader } from '../../../../rendering/renderers/shared/shader/Shader.mjs';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { TextureStyle } from '../../../../rendering/renderers/shared/texture/TextureStyle.mjs';\nimport fragment from './particles.frag.mjs';\nimport vertex from './particles.vert.mjs';\nimport wgsl from './particles.wgsl.mjs';\n\n\"use strict\";\nclass ParticleShader extends Shader {\n  constructor() {\n    const glProgram = GlProgram.from({\n      vertex,\n      fragment\n    });\n    const gpuProgram = GpuProgram.from({\n      fragment: {\n        source: wgsl,\n        entryPoint: \"mainFragment\"\n      },\n      vertex: {\n        source: wgsl,\n        entryPoint: \"mainVertex\"\n      }\n    });\n    super({\n      glProgram,\n      gpuProgram,\n      resources: {\n        // this will be replaced with the texture from the particle container\n        uTexture: Texture.WHITE.source,\n        // this will be replaced with the texture style from the particle container\n        uSampler: new TextureStyle({}),\n        // this will be replaced with the local uniforms from the particle container\n        uniforms: {\n          uTranslationMatrix: { value: new Matrix(), type: \"mat3x3<f32>\" },\n          uColor: { value: new Color(16777215), type: \"vec4<f32>\" },\n          uRound: { value: 1, type: \"f32\" },\n          uResolution: { value: [0, 0], type: \"vec2<f32>\" }\n        }\n      }\n    });\n  }\n}\n\nexport { ParticleShader };\n//# sourceMappingURL=ParticleShader.mjs.map\n","import { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { UniformGroup } from '../../../rendering/renderers/shared/shader/UniformGroup.mjs';\nimport { getAdjustedBlendModeBlend } from '../../../rendering/renderers/shared/state/getAdjustedBlendModeBlend.mjs';\nimport { State } from '../../../rendering/renderers/shared/state/State.mjs';\nimport { color32BitToUniform } from '../../graphics/gpu/colorToUniform.mjs';\nimport { ParticleBuffer } from './ParticleBuffer.mjs';\nimport { ParticleShader } from './shader/ParticleShader.mjs';\n\n\"use strict\";\nclass ParticleContainerPipe {\n  /**\n   * @param renderer - The renderer this sprite batch works for.\n   * @param adaptor\n   */\n  constructor(renderer, adaptor) {\n    /** @internal */\n    this.state = State.for2d();\n    /** Local uniforms that are used for rendering particles. */\n    this.localUniforms = new UniformGroup({\n      uTranslationMatrix: { value: new Matrix(), type: \"mat3x3<f32>\" },\n      uColor: { value: new Float32Array(4), type: \"vec4<f32>\" },\n      uRound: { value: 1, type: \"f32\" },\n      uResolution: { value: [0, 0], type: \"vec2<f32>\" }\n    });\n    this.renderer = renderer;\n    this.adaptor = adaptor;\n    this.defaultShader = new ParticleShader();\n    this.state = State.for2d();\n  }\n  validateRenderable(_renderable) {\n    return false;\n  }\n  addRenderable(renderable, instructionSet) {\n    this.renderer.renderPipes.batch.break(instructionSet);\n    instructionSet.add(renderable);\n  }\n  getBuffers(renderable) {\n    return renderable._gpuData[this.renderer.uid] || this._initBuffer(renderable);\n  }\n  _initBuffer(renderable) {\n    renderable._gpuData[this.renderer.uid] = new ParticleBuffer({\n      size: renderable.particleChildren.length,\n      properties: renderable._properties\n    });\n    return renderable._gpuData[this.renderer.uid];\n  }\n  updateRenderable(_renderable) {\n  }\n  execute(container) {\n    const children = container.particleChildren;\n    if (children.length === 0) {\n      return;\n    }\n    const renderer = this.renderer;\n    const buffer = this.getBuffers(container);\n    container.texture || (container.texture = children[0].texture);\n    const state = this.state;\n    buffer.update(children, container._childrenDirty);\n    container._childrenDirty = false;\n    state.blendMode = getAdjustedBlendModeBlend(container.blendMode, container.texture._source);\n    const uniforms = this.localUniforms.uniforms;\n    const transformationMatrix = uniforms.uTranslationMatrix;\n    container.worldTransform.copyTo(transformationMatrix);\n    transformationMatrix.prepend(renderer.globalUniforms.globalUniformData.projectionMatrix);\n    uniforms.uResolution = renderer.globalUniforms.globalUniformData.resolution;\n    uniforms.uRound = renderer._roundPixels | container._roundPixels;\n    color32BitToUniform(\n      container.groupColorAlpha,\n      uniforms.uColor,\n      0\n    );\n    this.adaptor.execute(this, container);\n  }\n  /** Destroys the ParticleRenderer. */\n  destroy() {\n    this.renderer = null;\n    if (this.defaultShader) {\n      this.defaultShader.destroy();\n      this.defaultShader = null;\n    }\n  }\n}\n\nexport { ParticleContainerPipe };\n//# sourceMappingURL=ParticleContainerPipe.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { GlParticleContainerAdaptor } from '../gl/GlParticleContainerAdaptor.mjs';\nimport { ParticleContainerPipe } from './ParticleContainerPipe.mjs';\n\n\"use strict\";\nclass GlParticleContainerPipe extends ParticleContainerPipe {\n  constructor(renderer) {\n    super(renderer, new GlParticleContainerAdaptor());\n  }\n}\n/** @ignore */\nGlParticleContainerPipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes\n  ],\n  name: \"particle\"\n};\n\nexport { GlParticleContainerPipe };\n//# sourceMappingURL=GlParticleContainerPipe.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { GpuParticleContainerAdaptor } from '../gpu/GpuParticleContainerAdaptor.mjs';\nimport { ParticleContainerPipe } from './ParticleContainerPipe.mjs';\n\n\"use strict\";\nclass GpuParticleContainerPipe extends ParticleContainerPipe {\n  constructor(renderer) {\n    super(renderer, new GpuParticleContainerAdaptor());\n  }\n}\n/** @ignore */\nGpuParticleContainerPipe.extension = {\n  type: [\n    ExtensionType.WebGPUPipes\n  ],\n  name: \"particle\"\n};\n\nexport { GpuParticleContainerPipe };\n//# sourceMappingURL=GpuParticleContainerPipe.mjs.map\n","import { PlaneGeometry } from '../mesh-plane/PlaneGeometry.mjs';\n\n\"use strict\";\nconst _NineSliceGeometry = class _NineSliceGeometry extends PlaneGeometry {\n  constructor(options = {}) {\n    options = { ..._NineSliceGeometry.defaultOptions, ...options };\n    super({\n      width: options.width,\n      height: options.height,\n      verticesX: 4,\n      verticesY: 4\n    });\n    this.update(options);\n  }\n  /**\n   * Updates the NineSliceGeometry with the options.\n   * @param options - The options of the NineSliceGeometry.\n   */\n  update(options) {\n    this.width = options.width ?? this.width;\n    this.height = options.height ?? this.height;\n    this._originalWidth = options.originalWidth ?? this._originalWidth;\n    this._originalHeight = options.originalHeight ?? this._originalHeight;\n    this._leftWidth = options.leftWidth ?? this._leftWidth;\n    this._rightWidth = options.rightWidth ?? this._rightWidth;\n    this._topHeight = options.topHeight ?? this._topHeight;\n    this._bottomHeight = options.bottomHeight ?? this._bottomHeight;\n    this._anchorX = options.anchor?.x;\n    this._anchorY = options.anchor?.y;\n    this.updateUvs();\n    this.updatePositions();\n  }\n  /** Updates the positions of the vertices. */\n  updatePositions() {\n    const p = this.positions;\n    const {\n      width,\n      height,\n      _leftWidth,\n      _rightWidth,\n      _topHeight,\n      _bottomHeight,\n      _anchorX,\n      _anchorY\n    } = this;\n    const w = _leftWidth + _rightWidth;\n    const scaleW = width > w ? 1 : width / w;\n    const h = _topHeight + _bottomHeight;\n    const scaleH = height > h ? 1 : height / h;\n    const scale = Math.min(scaleW, scaleH);\n    const anchorOffsetX = _anchorX * width;\n    const anchorOffsetY = _anchorY * height;\n    p[0] = p[8] = p[16] = p[24] = -anchorOffsetX;\n    p[2] = p[10] = p[18] = p[26] = _leftWidth * scale - anchorOffsetX;\n    p[4] = p[12] = p[20] = p[28] = width - _rightWidth * scale - anchorOffsetX;\n    p[6] = p[14] = p[22] = p[30] = width - anchorOffsetX;\n    p[1] = p[3] = p[5] = p[7] = -anchorOffsetY;\n    p[9] = p[11] = p[13] = p[15] = _topHeight * scale - anchorOffsetY;\n    p[17] = p[19] = p[21] = p[23] = height - _bottomHeight * scale - anchorOffsetY;\n    p[25] = p[27] = p[29] = p[31] = height - anchorOffsetY;\n    this.getBuffer(\"aPosition\").update();\n  }\n  /** Updates the UVs of the vertices. */\n  updateUvs() {\n    const uvs = this.uvs;\n    uvs[0] = uvs[8] = uvs[16] = uvs[24] = 0;\n    uvs[1] = uvs[3] = uvs[5] = uvs[7] = 0;\n    uvs[6] = uvs[14] = uvs[22] = uvs[30] = 1;\n    uvs[25] = uvs[27] = uvs[29] = uvs[31] = 1;\n    const _uvw = 1 / this._originalWidth;\n    const _uvh = 1 / this._originalHeight;\n    uvs[2] = uvs[10] = uvs[18] = uvs[26] = _uvw * this._leftWidth;\n    uvs[9] = uvs[11] = uvs[13] = uvs[15] = _uvh * this._topHeight;\n    uvs[4] = uvs[12] = uvs[20] = uvs[28] = 1 - _uvw * this._rightWidth;\n    uvs[17] = uvs[19] = uvs[21] = uvs[23] = 1 - _uvh * this._bottomHeight;\n    this.getBuffer(\"aUV\").update();\n  }\n};\n/** The default options for the NineSliceGeometry. */\n_NineSliceGeometry.defaultOptions = {\n  /** The width of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane. */\n  width: 100,\n  /** The height of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane. */\n  height: 100,\n  /** The width of the left column. */\n  leftWidth: 10,\n  /** The height of the top row. */\n  topHeight: 10,\n  /** The width of the right column. */\n  rightWidth: 10,\n  /** The height of the bottom row. */\n  bottomHeight: 10,\n  /** The original width of the texture */\n  originalWidth: 100,\n  /** The original height of the texture */\n  originalHeight: 100\n};\nlet NineSliceGeometry = _NineSliceGeometry;\n\nexport { NineSliceGeometry };\n//# sourceMappingURL=NineSliceGeometry.mjs.map\n","import { ExtensionType } from '../../extensions/Extensions.mjs';\nimport { BatchableMesh } from '../mesh/shared/BatchableMesh.mjs';\nimport { NineSliceGeometry } from './NineSliceGeometry.mjs';\n\n\"use strict\";\nclass NineSliceSpriteGpuData extends BatchableMesh {\n  constructor() {\n    super();\n    this.geometry = new NineSliceGeometry();\n  }\n  destroy() {\n    this.geometry.destroy();\n  }\n}\nclass NineSliceSpritePipe {\n  constructor(renderer) {\n    this._renderer = renderer;\n  }\n  addRenderable(sprite, instructionSet) {\n    const gpuSprite = this._getGpuSprite(sprite);\n    if (sprite.didViewUpdate)\n      this._updateBatchableSprite(sprite, gpuSprite);\n    this._renderer.renderPipes.batch.addToBatch(gpuSprite, instructionSet);\n  }\n  updateRenderable(sprite) {\n    const gpuSprite = this._getGpuSprite(sprite);\n    if (sprite.didViewUpdate)\n      this._updateBatchableSprite(sprite, gpuSprite);\n    gpuSprite._batcher.updateElement(gpuSprite);\n  }\n  validateRenderable(sprite) {\n    const gpuSprite = this._getGpuSprite(sprite);\n    return !gpuSprite._batcher.checkAndUpdateTexture(\n      gpuSprite,\n      sprite._texture\n    );\n  }\n  _updateBatchableSprite(sprite, batchableSprite) {\n    batchableSprite.geometry.update(sprite);\n    batchableSprite.setTexture(sprite._texture);\n  }\n  _getGpuSprite(sprite) {\n    return sprite._gpuData[this._renderer.uid] || this._initGPUSprite(sprite);\n  }\n  _initGPUSprite(sprite) {\n    const gpuData = sprite._gpuData[this._renderer.uid] = new NineSliceSpriteGpuData();\n    const batchableMesh = gpuData;\n    batchableMesh.renderable = sprite;\n    batchableMesh.transform = sprite.groupTransform;\n    batchableMesh.texture = sprite._texture;\n    batchableMesh.roundPixels = this._renderer._roundPixels | sprite._roundPixels;\n    if (!sprite.didViewUpdate) {\n      this._updateBatchableSprite(sprite, batchableMesh);\n    }\n    return gpuData;\n  }\n  destroy() {\n    this._renderer = null;\n  }\n}\n/** @ignore */\nNineSliceSpritePipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"nineSliceSprite\"\n};\n\nexport { NineSliceSpriteGpuData, NineSliceSpritePipe };\n//# sourceMappingURL=NineSliceSpritePipe.mjs.map\n","\"use strict\";\nconst tilingBit = {\n  name: \"tiling-bit\",\n  vertex: {\n    header: (\n      /* wgsl */\n      `\n            struct TilingUniforms {\n                uMapCoord:mat3x3<f32>,\n                uClampFrame:vec4<f32>,\n                uClampOffset:vec2<f32>,\n                uTextureTransform:mat3x3<f32>,\n                uSizeAnchor:vec4<f32>\n            };\n\n            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;\n            @group(2) @binding(1) var uTexture: texture_2d<f32>;\n            @group(2) @binding(2) var uSampler: sampler;\n        `\n    ),\n    main: (\n      /* wgsl */\n      `\n            uv = (tilingUniforms.uTextureTransform * vec3(uv, 1.0)).xy;\n\n            position = (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;\n        `\n    )\n  },\n  fragment: {\n    header: (\n      /* wgsl */\n      `\n            struct TilingUniforms {\n                uMapCoord:mat3x3<f32>,\n                uClampFrame:vec4<f32>,\n                uClampOffset:vec2<f32>,\n                uTextureTransform:mat3x3<f32>,\n                uSizeAnchor:vec4<f32>\n            };\n\n            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;\n            @group(2) @binding(1) var uTexture: texture_2d<f32>;\n            @group(2) @binding(2) var uSampler: sampler;\n        `\n    ),\n    main: (\n      /* wgsl */\n      `\n\n            var coord = vUV + ceil(tilingUniforms.uClampOffset - vUV);\n            coord = (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;\n            var unclamped = coord;\n            coord = clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);\n\n            var bias = 0.;\n\n            if(unclamped.x == coord.x && unclamped.y == coord.y)\n            {\n                bias = -32.;\n            }\n\n            outColor = textureSampleBias(uTexture, uSampler, coord, bias);\n        `\n    )\n  }\n};\nconst tilingBitGl = {\n  name: \"tiling-bit\",\n  vertex: {\n    header: (\n      /* glsl */\n      `\n            uniform mat3 uTextureTransform;\n            uniform vec4 uSizeAnchor;\n\n        `\n    ),\n    main: (\n      /* glsl */\n      `\n            uv = (uTextureTransform * vec3(aUV, 1.0)).xy;\n\n            position = (position - uSizeAnchor.zw) * uSizeAnchor.xy;\n        `\n    )\n  },\n  fragment: {\n    header: (\n      /* glsl */\n      `\n            uniform sampler2D uTexture;\n            uniform mat3 uMapCoord;\n            uniform vec4 uClampFrame;\n            uniform vec2 uClampOffset;\n        `\n    ),\n    main: (\n      /* glsl */\n      `\n\n        vec2 coord = vUV + ceil(uClampOffset - vUV);\n        coord = (uMapCoord * vec3(coord, 1.0)).xy;\n        vec2 unclamped = coord;\n        coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);\n\n        outColor = texture(uTexture, coord, unclamped == coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0\n\n        `\n    )\n  }\n};\n\nexport { tilingBit, tilingBitGl };\n//# sourceMappingURL=tilingBit.mjs.map\n","import { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { compileHighShaderGpuProgram, compileHighShaderGlProgram } from '../../../rendering/high-shader/compileHighShaderToProgram.mjs';\nimport { localUniformBit, localUniformBitGl } from '../../../rendering/high-shader/shader-bits/localUniformBit.mjs';\nimport { roundPixelsBit, roundPixelsBitGl } from '../../../rendering/high-shader/shader-bits/roundPixelsBit.mjs';\nimport { Shader } from '../../../rendering/renderers/shared/shader/Shader.mjs';\nimport { UniformGroup } from '../../../rendering/renderers/shared/shader/UniformGroup.mjs';\nimport { Texture } from '../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { tilingBit, tilingBitGl } from './tilingBit.mjs';\n\n\"use strict\";\nlet gpuProgram;\nlet glProgram;\nclass TilingSpriteShader extends Shader {\n  constructor() {\n    gpuProgram ?? (gpuProgram = compileHighShaderGpuProgram({\n      name: \"tiling-sprite-shader\",\n      bits: [\n        localUniformBit,\n        tilingBit,\n        roundPixelsBit\n      ]\n    }));\n    glProgram ?? (glProgram = compileHighShaderGlProgram({\n      name: \"tiling-sprite-shader\",\n      bits: [\n        localUniformBitGl,\n        tilingBitGl,\n        roundPixelsBitGl\n      ]\n    }));\n    const tilingUniforms = new UniformGroup({\n      uMapCoord: { value: new Matrix(), type: \"mat3x3<f32>\" },\n      uClampFrame: { value: new Float32Array([0, 0, 1, 1]), type: \"vec4<f32>\" },\n      uClampOffset: { value: new Float32Array([0, 0]), type: \"vec2<f32>\" },\n      uTextureTransform: { value: new Matrix(), type: \"mat3x3<f32>\" },\n      uSizeAnchor: { value: new Float32Array([100, 100, 0.5, 0.5]), type: \"vec4<f32>\" }\n    });\n    super({\n      glProgram,\n      gpuProgram,\n      resources: {\n        localUniforms: new UniformGroup({\n          uTransformMatrix: { value: new Matrix(), type: \"mat3x3<f32>\" },\n          uColor: { value: new Float32Array([1, 1, 1, 1]), type: \"vec4<f32>\" },\n          uRound: { value: 0, type: \"f32\" }\n        }),\n        tilingUniforms,\n        uTexture: Texture.EMPTY.source,\n        uSampler: Texture.EMPTY.source.style\n      }\n    });\n  }\n  updateUniforms(width, height, matrix, anchorX, anchorY, texture) {\n    const tilingUniforms = this.resources.tilingUniforms;\n    const textureWidth = texture.width;\n    const textureHeight = texture.height;\n    const textureMatrix = texture.textureMatrix;\n    const uTextureTransform = tilingUniforms.uniforms.uTextureTransform;\n    uTextureTransform.set(\n      matrix.a * textureWidth / width,\n      matrix.b * textureWidth / height,\n      matrix.c * textureHeight / width,\n      matrix.d * textureHeight / height,\n      matrix.tx / width,\n      matrix.ty / height\n    );\n    uTextureTransform.invert();\n    tilingUniforms.uniforms.uMapCoord = textureMatrix.mapCoord;\n    tilingUniforms.uniforms.uClampFrame = textureMatrix.uClampFrame;\n    tilingUniforms.uniforms.uClampOffset = textureMatrix.uClampOffset;\n    tilingUniforms.uniforms.uTextureTransform = uTextureTransform;\n    tilingUniforms.uniforms.uSizeAnchor[0] = width;\n    tilingUniforms.uniforms.uSizeAnchor[1] = height;\n    tilingUniforms.uniforms.uSizeAnchor[2] = anchorX;\n    tilingUniforms.uniforms.uSizeAnchor[3] = anchorY;\n    if (texture) {\n      this.resources.uTexture = texture.source;\n      this.resources.uSampler = texture.source.style;\n    }\n  }\n}\n\nexport { TilingSpriteShader };\n//# sourceMappingURL=TilingSpriteShader.mjs.map\n","import { MeshGeometry } from '../../mesh/shared/MeshGeometry.mjs';\n\n\"use strict\";\nclass QuadGeometry extends MeshGeometry {\n  constructor() {\n    super({\n      positions: new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]),\n      uvs: new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]),\n      indices: new Uint32Array([0, 1, 2, 0, 2, 3])\n    });\n  }\n}\n\nexport { QuadGeometry };\n//# sourceMappingURL=QuadGeometry.mjs.map\n","\"use strict\";\nfunction setPositions(tilingSprite, positions) {\n  const anchorX = tilingSprite.anchor.x;\n  const anchorY = tilingSprite.anchor.y;\n  positions[0] = -anchorX * tilingSprite.width;\n  positions[1] = -anchorY * tilingSprite.height;\n  positions[2] = (1 - anchorX) * tilingSprite.width;\n  positions[3] = -anchorY * tilingSprite.height;\n  positions[4] = (1 - anchorX) * tilingSprite.width;\n  positions[5] = (1 - anchorY) * tilingSprite.height;\n  positions[6] = -anchorX * tilingSprite.width;\n  positions[7] = (1 - anchorY) * tilingSprite.height;\n}\n\nexport { setPositions };\n//# sourceMappingURL=setPositions.mjs.map\n","\"use strict\";\nfunction applyMatrix(array, stride, offset, matrix) {\n  let index = 0;\n  const size = array.length / (stride || 2);\n  const a = matrix.a;\n  const b = matrix.b;\n  const c = matrix.c;\n  const d = matrix.d;\n  const tx = matrix.tx;\n  const ty = matrix.ty;\n  offset *= stride;\n  while (index < size) {\n    const x = array[offset];\n    const y = array[offset + 1];\n    array[offset] = a * x + c * y + tx;\n    array[offset + 1] = b * x + d * y + ty;\n    offset += stride;\n    index++;\n  }\n}\n\nexport { applyMatrix };\n//# sourceMappingURL=applyMatrix.mjs.map\n","import { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { applyMatrix } from './applyMatrix.mjs';\n\n\"use strict\";\nfunction setUvs(tilingSprite, uvs) {\n  const texture = tilingSprite.texture;\n  const width = texture.frame.width;\n  const height = texture.frame.height;\n  let anchorX = 0;\n  let anchorY = 0;\n  if (tilingSprite.applyAnchorToTexture) {\n    anchorX = tilingSprite.anchor.x;\n    anchorY = tilingSprite.anchor.y;\n  }\n  uvs[0] = uvs[6] = -anchorX;\n  uvs[2] = uvs[4] = 1 - anchorX;\n  uvs[1] = uvs[3] = -anchorY;\n  uvs[5] = uvs[7] = 1 - anchorY;\n  const textureMatrix = Matrix.shared;\n  textureMatrix.copyFrom(tilingSprite._tileTransform.matrix);\n  textureMatrix.tx /= tilingSprite.width;\n  textureMatrix.ty /= tilingSprite.height;\n  textureMatrix.invert();\n  textureMatrix.scale(tilingSprite.width / width, tilingSprite.height / height);\n  applyMatrix(uvs, 2, 0, textureMatrix);\n}\n\nexport { setUvs };\n//# sourceMappingURL=setUvs.mjs.map\n","import { ExtensionType } from '../../extensions/Extensions.mjs';\nimport { getAdjustedBlendModeBlend } from '../../rendering/renderers/shared/state/getAdjustedBlendModeBlend.mjs';\nimport { State } from '../../rendering/renderers/shared/state/State.mjs';\nimport { RendererType } from '../../rendering/renderers/types.mjs';\nimport { color32BitToUniform } from '../graphics/gpu/colorToUniform.mjs';\nimport { BatchableMesh } from '../mesh/shared/BatchableMesh.mjs';\nimport { MeshGeometry } from '../mesh/shared/MeshGeometry.mjs';\nimport { TilingSpriteShader } from './shader/TilingSpriteShader.mjs';\nimport { QuadGeometry } from './utils/QuadGeometry.mjs';\nimport { setPositions } from './utils/setPositions.mjs';\nimport { setUvs } from './utils/setUvs.mjs';\n\n\"use strict\";\nconst sharedQuad = new QuadGeometry();\nclass TilingSpriteGpuData {\n  constructor() {\n    this.canBatch = true;\n    this.geometry = new MeshGeometry({\n      indices: sharedQuad.indices.slice(),\n      positions: sharedQuad.positions.slice(),\n      uvs: sharedQuad.uvs.slice()\n    });\n  }\n  destroy() {\n    this.geometry.destroy();\n    this.shader?.destroy();\n  }\n}\nclass TilingSpritePipe {\n  constructor(renderer) {\n    this._state = State.default2d;\n    this._renderer = renderer;\n  }\n  validateRenderable(renderable) {\n    const tilingSpriteData = this._getTilingSpriteData(renderable);\n    const couldBatch = tilingSpriteData.canBatch;\n    this._updateCanBatch(renderable);\n    const canBatch = tilingSpriteData.canBatch;\n    if (canBatch && canBatch === couldBatch) {\n      const { batchableMesh } = tilingSpriteData;\n      return !batchableMesh._batcher.checkAndUpdateTexture(\n        batchableMesh,\n        renderable.texture\n      );\n    }\n    return couldBatch !== canBatch;\n  }\n  addRenderable(tilingSprite, instructionSet) {\n    const batcher = this._renderer.renderPipes.batch;\n    this._updateCanBatch(tilingSprite);\n    const tilingSpriteData = this._getTilingSpriteData(tilingSprite);\n    const { geometry, canBatch } = tilingSpriteData;\n    if (canBatch) {\n      tilingSpriteData.batchableMesh || (tilingSpriteData.batchableMesh = new BatchableMesh());\n      const batchableMesh = tilingSpriteData.batchableMesh;\n      if (tilingSprite.didViewUpdate) {\n        this._updateBatchableMesh(tilingSprite);\n        batchableMesh.geometry = geometry;\n        batchableMesh.renderable = tilingSprite;\n        batchableMesh.transform = tilingSprite.groupTransform;\n        batchableMesh.setTexture(tilingSprite._texture);\n      }\n      batchableMesh.roundPixels = this._renderer._roundPixels | tilingSprite._roundPixels;\n      batcher.addToBatch(batchableMesh, instructionSet);\n    } else {\n      batcher.break(instructionSet);\n      tilingSpriteData.shader || (tilingSpriteData.shader = new TilingSpriteShader());\n      this.updateRenderable(tilingSprite);\n      instructionSet.add(tilingSprite);\n    }\n  }\n  execute(tilingSprite) {\n    const { shader } = this._getTilingSpriteData(tilingSprite);\n    shader.groups[0] = this._renderer.globalUniforms.bindGroup;\n    const localUniforms = shader.resources.localUniforms.uniforms;\n    localUniforms.uTransformMatrix = tilingSprite.groupTransform;\n    localUniforms.uRound = this._renderer._roundPixels | tilingSprite._roundPixels;\n    color32BitToUniform(\n      tilingSprite.groupColorAlpha,\n      localUniforms.uColor,\n      0\n    );\n    this._state.blendMode = getAdjustedBlendModeBlend(tilingSprite.groupBlendMode, tilingSprite.texture._source);\n    this._renderer.encoder.draw({\n      geometry: sharedQuad,\n      shader,\n      state: this._state\n    });\n  }\n  updateRenderable(tilingSprite) {\n    const tilingSpriteData = this._getTilingSpriteData(tilingSprite);\n    const { canBatch } = tilingSpriteData;\n    if (canBatch) {\n      const { batchableMesh } = tilingSpriteData;\n      if (tilingSprite.didViewUpdate)\n        this._updateBatchableMesh(tilingSprite);\n      batchableMesh._batcher.updateElement(batchableMesh);\n    } else if (tilingSprite.didViewUpdate) {\n      const { shader } = tilingSpriteData;\n      shader.updateUniforms(\n        tilingSprite.width,\n        tilingSprite.height,\n        tilingSprite._tileTransform.matrix,\n        tilingSprite.anchor.x,\n        tilingSprite.anchor.y,\n        tilingSprite.texture\n      );\n    }\n  }\n  _getTilingSpriteData(renderable) {\n    return renderable._gpuData[this._renderer.uid] || this._initTilingSpriteData(renderable);\n  }\n  _initTilingSpriteData(tilingSprite) {\n    const gpuData = new TilingSpriteGpuData();\n    gpuData.renderable = tilingSprite;\n    tilingSprite._gpuData[this._renderer.uid] = gpuData;\n    return gpuData;\n  }\n  _updateBatchableMesh(tilingSprite) {\n    const renderableData = this._getTilingSpriteData(tilingSprite);\n    const { geometry } = renderableData;\n    const style = tilingSprite.texture.source.style;\n    if (style.addressMode !== \"repeat\") {\n      style.addressMode = \"repeat\";\n      style.update();\n    }\n    setUvs(tilingSprite, geometry.uvs);\n    setPositions(tilingSprite, geometry.positions);\n  }\n  destroy() {\n    this._renderer = null;\n  }\n  _updateCanBatch(tilingSprite) {\n    const renderableData = this._getTilingSpriteData(tilingSprite);\n    const texture = tilingSprite.texture;\n    let _nonPowOf2wrapping = true;\n    if (this._renderer.type === RendererType.WEBGL) {\n      _nonPowOf2wrapping = this._renderer.context.supports.nonPowOf2wrapping;\n    }\n    renderableData.canBatch = texture.textureMatrix.isSimple && (_nonPowOf2wrapping || texture.source.isPowerOfTwo);\n    return renderableData.canBatch;\n  }\n}\n/** @ignore */\nTilingSpritePipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"tilingSprite\"\n};\n\nexport { TilingSpriteGpuData, TilingSpritePipe };\n//# sourceMappingURL=TilingSpritePipe.mjs.map\n","\"use strict\";\nconst localUniformMSDFBit = {\n  name: \"local-uniform-msdf-bit\",\n  vertex: {\n    header: (\n      /* wgsl */\n      `\n            struct LocalUniforms {\n                uColor:vec4<f32>,\n                uTransformMatrix:mat3x3<f32>,\n                uDistance: f32,\n                uRound:f32,\n            }\n\n            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;\n        `\n    ),\n    main: (\n      /* wgsl */\n      `\n            vColor *= localUniforms.uColor;\n            modelMatrix *= localUniforms.uTransformMatrix;\n        `\n    ),\n    end: (\n      /* wgsl */\n      `\n            if(localUniforms.uRound == 1)\n            {\n                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);\n            }\n        `\n    )\n  },\n  fragment: {\n    header: (\n      /* wgsl */\n      `\n            struct LocalUniforms {\n                uColor:vec4<f32>,\n                uTransformMatrix:mat3x3<f32>,\n                uDistance: f32\n            }\n\n            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;\n         `\n    ),\n    main: (\n      /* wgsl */\n      `\n            outColor = vec4<f32>(calculateMSDFAlpha(outColor, localUniforms.uColor, localUniforms.uDistance));\n        `\n    )\n  }\n};\nconst localUniformMSDFBitGl = {\n  name: \"local-uniform-msdf-bit\",\n  vertex: {\n    header: (\n      /* glsl */\n      `\n            uniform mat3 uTransformMatrix;\n            uniform vec4 uColor;\n            uniform float uRound;\n        `\n    ),\n    main: (\n      /* glsl */\n      `\n            vColor *= uColor;\n            modelMatrix *= uTransformMatrix;\n        `\n    ),\n    end: (\n      /* glsl */\n      `\n            if(uRound == 1.)\n            {\n                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n            }\n        `\n    )\n  },\n  fragment: {\n    header: (\n      /* glsl */\n      `\n            uniform float uDistance;\n         `\n    ),\n    main: (\n      /* glsl */\n      `\n            outColor = vec4(calculateMSDFAlpha(outColor, vColor, uDistance));\n        `\n    )\n  }\n};\n\nexport { localUniformMSDFBit, localUniformMSDFBitGl };\n//# sourceMappingURL=localUniformMSDFBit.mjs.map\n","\"use strict\";\nconst mSDFBit = {\n  name: \"msdf-bit\",\n  fragment: {\n    header: (\n      /* wgsl */\n      `\n            fn calculateMSDFAlpha(msdfColor:vec4<f32>, shapeColor:vec4<f32>, distance:f32) -> f32 {\n\n                // MSDF\n                var median = msdfColor.r + msdfColor.g + msdfColor.b -\n                    min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -\n                    max(msdfColor.r, max(msdfColor.g, msdfColor.b));\n\n                // SDF\n                median = min(median, msdfColor.a);\n\n                var screenPxDistance = distance * (median - 0.5);\n                var alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n                if (median < 0.01) {\n                    alpha = 0.0;\n                } else if (median > 0.99) {\n                    alpha = 1.0;\n                }\n\n                // Gamma correction for coverage-like alpha\n                var luma: f32 = dot(shapeColor.rgb, vec3<f32>(0.299, 0.587, 0.114));\n                var gamma: f32 = mix(1.0, 1.0 / 2.2, luma);\n                var coverage: f32 = pow(shapeColor.a * alpha, gamma);\n\n                return coverage;\n\n            }\n        `\n    )\n  }\n};\nconst mSDFBitGl = {\n  name: \"msdf-bit\",\n  fragment: {\n    header: (\n      /* glsl */\n      `\n            float calculateMSDFAlpha(vec4 msdfColor, vec4 shapeColor, float distance) {\n\n                // MSDF\n                float median = msdfColor.r + msdfColor.g + msdfColor.b -\n                                min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -\n                                max(msdfColor.r, max(msdfColor.g, msdfColor.b));\n\n                // SDF\n                median = min(median, msdfColor.a);\n\n                float screenPxDistance = distance * (median - 0.5);\n                float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n\n                if (median < 0.01) {\n                    alpha = 0.0;\n                } else if (median > 0.99) {\n                    alpha = 1.0;\n                }\n\n                // Gamma correction for coverage-like alpha\n                float luma = dot(shapeColor.rgb, vec3(0.299, 0.587, 0.114));\n                float gamma = mix(1.0, 1.0 / 2.2, luma);\n                float coverage = pow(shapeColor.a * alpha, gamma);\n\n                return coverage;\n            }\n        `\n    )\n  }\n};\n\nexport { mSDFBit, mSDFBitGl };\n//# sourceMappingURL=mSDFBit.mjs.map\n","import { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { compileHighShaderGpuProgram, compileHighShaderGlProgram } from '../../../rendering/high-shader/compileHighShaderToProgram.mjs';\nimport { colorBit, colorBitGl } from '../../../rendering/high-shader/shader-bits/colorBit.mjs';\nimport { generateTextureBatchBit, generateTextureBatchBitGl } from '../../../rendering/high-shader/shader-bits/generateTextureBatchBit.mjs';\nimport { roundPixelsBit, roundPixelsBitGl } from '../../../rendering/high-shader/shader-bits/roundPixelsBit.mjs';\nimport { getBatchSamplersUniformGroup } from '../../../rendering/renderers/gl/shader/getBatchSamplersUniformGroup.mjs';\nimport { Shader } from '../../../rendering/renderers/shared/shader/Shader.mjs';\nimport { UniformGroup } from '../../../rendering/renderers/shared/shader/UniformGroup.mjs';\nimport { localUniformMSDFBit, localUniformMSDFBitGl } from './shader-bits/localUniformMSDFBit.mjs';\nimport { mSDFBit, mSDFBitGl } from './shader-bits/mSDFBit.mjs';\n\n\"use strict\";\nlet gpuProgram;\nlet glProgram;\nclass SdfShader extends Shader {\n  constructor(maxTextures) {\n    const uniforms = new UniformGroup({\n      uColor: { value: new Float32Array([1, 1, 1, 1]), type: \"vec4<f32>\" },\n      uTransformMatrix: { value: new Matrix(), type: \"mat3x3<f32>\" },\n      uDistance: { value: 4, type: \"f32\" },\n      uRound: { value: 0, type: \"f32\" }\n    });\n    gpuProgram ?? (gpuProgram = compileHighShaderGpuProgram({\n      name: \"sdf-shader\",\n      bits: [\n        colorBit,\n        generateTextureBatchBit(maxTextures),\n        localUniformMSDFBit,\n        mSDFBit,\n        roundPixelsBit\n      ]\n    }));\n    glProgram ?? (glProgram = compileHighShaderGlProgram({\n      name: \"sdf-shader\",\n      bits: [\n        colorBitGl,\n        generateTextureBatchBitGl(maxTextures),\n        localUniformMSDFBitGl,\n        mSDFBitGl,\n        roundPixelsBitGl\n      ]\n    }));\n    super({\n      glProgram,\n      gpuProgram,\n      resources: {\n        localUniforms: uniforms,\n        batchSamplers: getBatchSamplersUniformGroup(maxTextures)\n      }\n    });\n  }\n}\n\nexport { SdfShader };\n//# sourceMappingURL=SdfShader.mjs.map\n","import { Cache } from '../../assets/cache/Cache.mjs';\nimport { ExtensionType } from '../../extensions/Extensions.mjs';\nimport { Graphics } from '../graphics/shared/Graphics.mjs';\nimport { CanvasTextMetrics } from '../text/canvas/CanvasTextMetrics.mjs';\nimport { SdfShader } from '../text/sdfShader/SdfShader.mjs';\nimport { BitmapFontManager } from './BitmapFontManager.mjs';\nimport { getBitmapTextLayout } from './utils/getBitmapTextLayout.mjs';\n\n\"use strict\";\nclass BitmapTextGraphics extends Graphics {\n  destroy() {\n    if (this.context.customShader) {\n      this.context.customShader.destroy();\n    }\n    super.destroy();\n  }\n}\nclass BitmapTextPipe {\n  constructor(renderer) {\n    this._renderer = renderer;\n  }\n  validateRenderable(bitmapText) {\n    const graphicsRenderable = this._getGpuBitmapText(bitmapText);\n    return this._renderer.renderPipes.graphics.validateRenderable(graphicsRenderable);\n  }\n  addRenderable(bitmapText, instructionSet) {\n    const graphicsRenderable = this._getGpuBitmapText(bitmapText);\n    syncWithProxy(bitmapText, graphicsRenderable);\n    if (bitmapText._didTextUpdate) {\n      bitmapText._didTextUpdate = false;\n      this._updateContext(bitmapText, graphicsRenderable);\n    }\n    this._renderer.renderPipes.graphics.addRenderable(graphicsRenderable, instructionSet);\n    if (graphicsRenderable.context.customShader) {\n      this._updateDistanceField(bitmapText);\n    }\n  }\n  updateRenderable(bitmapText) {\n    const graphicsRenderable = this._getGpuBitmapText(bitmapText);\n    syncWithProxy(bitmapText, graphicsRenderable);\n    this._renderer.renderPipes.graphics.updateRenderable(graphicsRenderable);\n    if (graphicsRenderable.context.customShader) {\n      this._updateDistanceField(bitmapText);\n    }\n  }\n  _updateContext(bitmapText, proxyGraphics) {\n    const { context } = proxyGraphics;\n    const bitmapFont = BitmapFontManager.getFont(bitmapText.text, bitmapText._style);\n    context.clear();\n    if (bitmapFont.distanceField.type !== \"none\") {\n      if (!context.customShader) {\n        context.customShader = new SdfShader(this._renderer.limits.maxBatchableTextures);\n      }\n    }\n    const chars = CanvasTextMetrics.graphemeSegmenter(bitmapText.text);\n    const style = bitmapText._style;\n    let currentY = bitmapFont.baseLineOffset;\n    const bitmapTextLayout = getBitmapTextLayout(chars, style, bitmapFont, true);\n    const padding = style.padding;\n    const scale = bitmapTextLayout.scale;\n    let tx = bitmapTextLayout.width;\n    let ty = bitmapTextLayout.height + bitmapTextLayout.offsetY;\n    if (style._stroke) {\n      tx += style._stroke.width / scale;\n      ty += style._stroke.width / scale;\n    }\n    context.translate(-bitmapText._anchor._x * tx - padding, -bitmapText._anchor._y * ty - padding).scale(scale, scale);\n    const tint = bitmapFont.applyFillAsTint ? style._fill.color : 16777215;\n    let fontSize = bitmapFont.fontMetrics.fontSize;\n    let lineHeight = bitmapFont.lineHeight;\n    if (style.lineHeight) {\n      fontSize = style.fontSize / scale;\n      lineHeight = style.lineHeight / scale;\n    }\n    let linePositionYShift = (lineHeight - fontSize) / 2;\n    if (linePositionYShift - bitmapFont.baseLineOffset < 0) {\n      linePositionYShift = 0;\n    }\n    for (let i = 0; i < bitmapTextLayout.lines.length; i++) {\n      const line = bitmapTextLayout.lines[i];\n      for (let j = 0; j < line.charPositions.length; j++) {\n        const char = line.chars[j];\n        const charData = bitmapFont.chars[char];\n        if (charData?.texture) {\n          const texture = charData.texture;\n          context.texture(\n            texture,\n            tint ? tint : \"black\",\n            Math.round(line.charPositions[j] + charData.xOffset),\n            Math.round(currentY + charData.yOffset + linePositionYShift),\n            texture.orig.width,\n            texture.orig.height\n          );\n        }\n      }\n      currentY += lineHeight;\n    }\n  }\n  _getGpuBitmapText(bitmapText) {\n    return bitmapText._gpuData[this._renderer.uid] || this.initGpuText(bitmapText);\n  }\n  initGpuText(bitmapText) {\n    const proxyRenderable = new BitmapTextGraphics();\n    bitmapText._gpuData[this._renderer.uid] = proxyRenderable;\n    this._updateContext(bitmapText, proxyRenderable);\n    return proxyRenderable;\n  }\n  _updateDistanceField(bitmapText) {\n    const context = this._getGpuBitmapText(bitmapText).context;\n    const fontFamily = bitmapText._style.fontFamily;\n    const dynamicFont = Cache.get(`${fontFamily}-bitmap`);\n    const { a, b, c, d } = bitmapText.groupTransform;\n    const dx = Math.sqrt(a * a + b * b);\n    const dy = Math.sqrt(c * c + d * d);\n    const worldScale = (Math.abs(dx) + Math.abs(dy)) / 2;\n    const fontScale = dynamicFont.baseRenderedFontSize / bitmapText._style.fontSize;\n    const distance = worldScale * dynamicFont.distanceField.range * (1 / fontScale);\n    context.customShader.resources.localUniforms.uniforms.uDistance = distance;\n  }\n  destroy() {\n    this._renderer = null;\n  }\n}\n/** @ignore */\nBitmapTextPipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"bitmapText\"\n};\nfunction syncWithProxy(container, proxy) {\n  proxy.groupTransform = container.groupTransform;\n  proxy.groupColorAlpha = container.groupColorAlpha;\n  proxy.groupColor = container.groupColor;\n  proxy.groupBlendMode = container.groupBlendMode;\n  proxy.globalDisplayStatus = container.globalDisplayStatus;\n  proxy.groupTransform = container.groupTransform;\n  proxy.localDisplayStatus = container.localDisplayStatus;\n  proxy.groupAlpha = container.groupAlpha;\n  proxy._roundPixels = container._roundPixels;\n}\n\nexport { BitmapTextGraphics, BitmapTextPipe };\n//# sourceMappingURL=BitmapTextPipe.mjs.map\n","import { BatchableSprite } from '../sprite/BatchableSprite.mjs';\n\n\"use strict\";\nclass BatchableHTMLText extends BatchableSprite {\n  /**\n   * Creates an instance of BatchableHTMLText.\n   * @param renderer - The renderer instance to be used.\n   */\n  constructor(renderer) {\n    super();\n    this.generatingTexture = false;\n    this.currentKey = \"--\";\n    this._renderer = renderer;\n    renderer.runners.resolutionChange.add(this);\n  }\n  /** Handles resolution changes for the HTML text. If the text has auto resolution enabled, it triggers a view update. */\n  resolutionChange() {\n    const text = this.renderable;\n    if (text._autoResolution) {\n      text.onViewUpdate();\n    }\n  }\n  /** Destroys the BatchableHTMLText instance. Returns the texture promise to the renderer and cleans up references. */\n  destroy() {\n    const { htmlText } = this._renderer;\n    htmlText.getReferenceCount(this.currentKey) === null ? htmlText.returnTexturePromise(this.texturePromise) : htmlText.decreaseReferenceCount(this.currentKey);\n    this._renderer.runners.resolutionChange.remove(this);\n    this.texturePromise = null;\n    this._renderer = null;\n  }\n}\n\nexport { BatchableHTMLText };\n//# sourceMappingURL=BatchableHTMLText.mjs.map\n","import { updateQuadBounds } from '../../../utils/data/updateQuadBounds.mjs';\n\n\"use strict\";\nfunction updateTextBounds(batchableSprite, text) {\n  const { texture, bounds } = batchableSprite;\n  const padding = text._style._getFinalPadding();\n  updateQuadBounds(bounds, text._anchor, texture);\n  const paddingOffset = text._anchor._x * padding * 2;\n  const paddingOffsetY = text._anchor._y * padding * 2;\n  bounds.minX -= padding - paddingOffset;\n  bounds.minY -= padding - paddingOffsetY;\n  bounds.maxX -= padding - paddingOffset;\n  bounds.maxY -= padding - paddingOffsetY;\n}\n\nexport { updateTextBounds };\n//# sourceMappingURL=updateTextBounds.mjs.map\n","import { ExtensionType } from '../../extensions/Extensions.mjs';\nimport { Texture } from '../../rendering/renderers/shared/texture/Texture.mjs';\nimport { updateTextBounds } from '../text/utils/updateTextBounds.mjs';\nimport { BatchableHTMLText } from './BatchableHTMLText.mjs';\n\n\"use strict\";\nclass HTMLTextPipe {\n  constructor(renderer) {\n    this._renderer = renderer;\n  }\n  validateRenderable(htmlText) {\n    const gpuText = this._getGpuText(htmlText);\n    const newKey = htmlText.styleKey;\n    if (gpuText.currentKey !== newKey) {\n      return true;\n    }\n    return false;\n  }\n  addRenderable(htmlText, instructionSet) {\n    const batchableHTMLText = this._getGpuText(htmlText);\n    if (htmlText._didTextUpdate) {\n      const resolution = htmlText._autoResolution ? this._renderer.resolution : htmlText.resolution;\n      if (batchableHTMLText.currentKey !== htmlText.styleKey || htmlText.resolution !== resolution) {\n        this._updateGpuText(htmlText).catch((e) => {\n          console.error(e);\n        });\n      }\n      htmlText._didTextUpdate = false;\n      updateTextBounds(batchableHTMLText, htmlText);\n    }\n    this._renderer.renderPipes.batch.addToBatch(batchableHTMLText, instructionSet);\n  }\n  updateRenderable(htmlText) {\n    const batchableHTMLText = this._getGpuText(htmlText);\n    batchableHTMLText._batcher.updateElement(batchableHTMLText);\n  }\n  async _updateGpuText(htmlText) {\n    htmlText._didTextUpdate = false;\n    const batchableHTMLText = this._getGpuText(htmlText);\n    if (batchableHTMLText.generatingTexture)\n      return;\n    const oldTexturePromise = batchableHTMLText.texturePromise;\n    batchableHTMLText.texturePromise = null;\n    batchableHTMLText.generatingTexture = true;\n    htmlText._resolution = htmlText._autoResolution ? this._renderer.resolution : htmlText.resolution;\n    let texturePromise = this._renderer.htmlText.getTexturePromise(htmlText);\n    if (oldTexturePromise) {\n      texturePromise = texturePromise.finally(() => {\n        this._renderer.htmlText.decreaseReferenceCount(batchableHTMLText.currentKey);\n        this._renderer.htmlText.returnTexturePromise(oldTexturePromise);\n      });\n    }\n    batchableHTMLText.texturePromise = texturePromise;\n    batchableHTMLText.currentKey = htmlText.styleKey;\n    batchableHTMLText.texture = await texturePromise;\n    const renderGroup = htmlText.renderGroup || htmlText.parentRenderGroup;\n    if (renderGroup) {\n      renderGroup.structureDidChange = true;\n    }\n    batchableHTMLText.generatingTexture = false;\n    updateTextBounds(batchableHTMLText, htmlText);\n  }\n  _getGpuText(htmlText) {\n    return htmlText._gpuData[this._renderer.uid] || this.initGpuText(htmlText);\n  }\n  initGpuText(htmlText) {\n    const batchableHTMLText = new BatchableHTMLText(this._renderer);\n    batchableHTMLText.renderable = htmlText;\n    batchableHTMLText.transform = htmlText.groupTransform;\n    batchableHTMLText.texture = Texture.EMPTY;\n    batchableHTMLText.bounds = { minX: 0, maxX: 1, minY: 0, maxY: 0 };\n    batchableHTMLText.roundPixels = this._renderer._roundPixels | htmlText._roundPixels;\n    htmlText._resolution = htmlText._autoResolution ? this._renderer.resolution : htmlText.resolution;\n    htmlText._gpuData[this._renderer.uid] = batchableHTMLText;\n    return batchableHTMLText;\n  }\n  destroy() {\n    this._renderer = null;\n  }\n}\n/** @ignore */\nHTMLTextPipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"htmlText\"\n};\n\nexport { HTMLTextPipe };\n//# sourceMappingURL=HTMLTextPipe.mjs.map\n","import { DOMAdapter } from '../../environment/adapter.mjs';\n\n\"use strict\";\nfunction isSafari() {\n  const { userAgent } = DOMAdapter.get().getNavigator();\n  return /^((?!chrome|android).)*safari/i.test(userAgent);\n}\n\nexport { isSafari };\n//# sourceMappingURL=isSafari.mjs.map\n","import { TexturePool } from '../../../rendering/renderers/shared/texture/TexturePool.mjs';\nimport { Bounds } from '../../container/bounds/Bounds.mjs';\n\n\"use strict\";\nconst tempBounds = new Bounds();\nfunction getPo2TextureFromSource(image, width, height, resolution) {\n  const bounds = tempBounds;\n  bounds.minX = 0;\n  bounds.minY = 0;\n  bounds.maxX = image.width / resolution | 0;\n  bounds.maxY = image.height / resolution | 0;\n  const texture = TexturePool.getOptimalTexture(\n    bounds.width,\n    bounds.height,\n    resolution,\n    false\n  );\n  texture.source.uploadMethodId = \"image\";\n  texture.source.resource = image;\n  texture.source.alphaMode = \"premultiply-alpha-on-upload\";\n  texture.frame.width = width / resolution;\n  texture.frame.height = height / resolution;\n  texture.source.emit(\"update\", texture.source);\n  texture.updateUvs();\n  return texture;\n}\n\nexport { getPo2TextureFromSource };\n//# sourceMappingURL=getPo2TextureFromSource.mjs.map\n","\"use strict\";\nfunction extractFontFamilies(text, style) {\n  const fontFamily = style.fontFamily;\n  const fontFamilies = [];\n  const dedupe = {};\n  const regex = /font-family:([^;\"\\s]+)/g;\n  const matches = text.match(regex);\n  function addFontFamily(fontFamily2) {\n    if (!dedupe[fontFamily2]) {\n      fontFamilies.push(fontFamily2);\n      dedupe[fontFamily2] = true;\n    }\n  }\n  if (Array.isArray(fontFamily)) {\n    for (let i = 0; i < fontFamily.length; i++) {\n      addFontFamily(fontFamily[i]);\n    }\n  } else {\n    addFontFamily(fontFamily);\n  }\n  if (matches) {\n    matches.forEach((match) => {\n      const fontFamily2 = match.split(\":\")[1].trim();\n      addFontFamily(fontFamily2);\n    });\n  }\n  for (const i in style.tagStyles) {\n    const fontFamily2 = style.tagStyles[i].fontFamily;\n    addFontFamily(fontFamily2);\n  }\n  return fontFamilies;\n}\n\nexport { extractFontFamilies };\n//# sourceMappingURL=extractFontFamilies.mjs.map\n","import { DOMAdapter } from '../../../environment/adapter.mjs';\n\n\"use strict\";\nasync function loadFontAsBase64(url) {\n  const response = await DOMAdapter.get().fetch(url);\n  const blob = await response.blob();\n  const reader = new FileReader();\n  const dataSrc = await new Promise((resolve, reject) => {\n    reader.onloadend = () => resolve(reader.result);\n    reader.onerror = reject;\n    reader.readAsDataURL(blob);\n  });\n  return dataSrc;\n}\n\nexport { loadFontAsBase64 };\n//# sourceMappingURL=loadFontAsBase64.mjs.map\n","import { loadFontAsBase64 } from './loadFontAsBase64.mjs';\n\n\"use strict\";\nasync function loadFontCSS(style, url) {\n  const dataSrc = await loadFontAsBase64(url);\n  return `@font-face {\n        font-family: \"${style.fontFamily}\";\n        font-weight: ${style.fontWeight};\n        font-style: ${style.fontStyle};\n        src: url('${dataSrc}');\n    }`;\n}\n\nexport { loadFontCSS };\n//# sourceMappingURL=loadFontCSS.mjs.map\n","import { Cache } from '../../../assets/cache/Cache.mjs';\nimport { loadFontCSS } from './loadFontCSS.mjs';\n\n\"use strict\";\nconst FontStylePromiseCache = /* @__PURE__ */ new Map();\nasync function getFontCss(fontFamilies) {\n  const fontPromises = fontFamilies.filter((fontFamily) => Cache.has(`${fontFamily}-and-url`)).map((fontFamily) => {\n    if (!FontStylePromiseCache.has(fontFamily)) {\n      const { entries } = Cache.get(`${fontFamily}-and-url`);\n      const promises = [];\n      entries.forEach((entry) => {\n        const url = entry.url;\n        const faces = entry.faces;\n        const out = faces.map((face) => ({ weight: face.weight, style: face.style }));\n        promises.push(\n          ...out.map(\n            (style) => loadFontCSS(\n              {\n                fontWeight: style.weight,\n                fontStyle: style.style,\n                fontFamily\n              },\n              url\n            )\n          )\n        );\n      });\n      FontStylePromiseCache.set(\n        fontFamily,\n        Promise.all(promises).then((css) => css.join(\"\\n\"))\n      );\n    }\n    return FontStylePromiseCache.get(fontFamily);\n  });\n  return (await Promise.all(fontPromises)).join(\"\\n\");\n}\n\nexport { FontStylePromiseCache, getFontCss };\n//# sourceMappingURL=getFontCss.mjs.map\n","\"use strict\";\nfunction getSVGUrl(text, style, resolution, fontCSS, htmlTextData) {\n  const { domElement, styleElement, svgRoot } = htmlTextData;\n  domElement.innerHTML = `<style>${style.cssStyle}</style><div style='padding:0;'>${text}</div>`;\n  domElement.setAttribute(\"style\", `transform: scale(${resolution});transform-origin: top left; display: inline-block`);\n  styleElement.textContent = fontCSS;\n  const { width, height } = htmlTextData.image;\n  svgRoot.setAttribute(\"width\", width.toString());\n  svgRoot.setAttribute(\"height\", height.toString());\n  return new XMLSerializer().serializeToString(svgRoot);\n}\n\nexport { getSVGUrl };\n//# sourceMappingURL=getSVGUrl.mjs.map\n","import { CanvasPool } from '../../../rendering/renderers/shared/texture/CanvasPool.mjs';\n\n\"use strict\";\nfunction getTemporaryCanvasFromImage(image, resolution) {\n  const canvasAndContext = CanvasPool.getOptimalCanvasAndContext(\n    image.width,\n    image.height,\n    resolution\n  );\n  const { context } = canvasAndContext;\n  context.clearRect(0, 0, image.width, image.height);\n  context.drawImage(image, 0, 0);\n  return canvasAndContext;\n}\n\nexport { getTemporaryCanvasFromImage };\n//# sourceMappingURL=getTemporaryCanvasFromImage.mjs.map\n","\"use strict\";\nfunction loadSVGImage(image, url, delay) {\n  return new Promise(async (resolve) => {\n    if (delay) {\n      await new Promise((resolve2) => setTimeout(resolve2, 100));\n    }\n    image.onload = () => {\n      resolve();\n    };\n    image.src = `data:image/svg+xml;charset=utf8,${encodeURIComponent(url)}`;\n    image.crossOrigin = \"anonymous\";\n  });\n}\n\nexport { loadSVGImage };\n//# sourceMappingURL=loadSVGImage.mjs.map\n","import { ExtensionType } from '../../extensions/Extensions.mjs';\nimport { CanvasPool } from '../../rendering/renderers/shared/texture/CanvasPool.mjs';\nimport { TexturePool } from '../../rendering/renderers/shared/texture/TexturePool.mjs';\nimport { RendererType } from '../../rendering/renderers/types.mjs';\nimport { isSafari } from '../../utils/browser/isSafari.mjs';\nimport { warn } from '../../utils/logging/warn.mjs';\nimport { BigPool } from '../../utils/pool/PoolGroup.mjs';\nimport { getPo2TextureFromSource } from '../text/utils/getPo2TextureFromSource.mjs';\nimport { HTMLTextRenderData } from './HTMLTextRenderData.mjs';\nimport { extractFontFamilies } from './utils/extractFontFamilies.mjs';\nimport { getFontCss } from './utils/getFontCss.mjs';\nimport { getSVGUrl } from './utils/getSVGUrl.mjs';\nimport { getTemporaryCanvasFromImage } from './utils/getTemporaryCanvasFromImage.mjs';\nimport { loadSVGImage } from './utils/loadSVGImage.mjs';\nimport { measureHtmlText } from './utils/measureHtmlText.mjs';\n\n\"use strict\";\nclass HTMLTextSystem {\n  constructor(renderer) {\n    this._activeTextures = {};\n    this._renderer = renderer;\n    this._createCanvas = renderer.type === RendererType.WEBGPU;\n  }\n  /**\n   * @param options\n   * @deprecated Use getTexturePromise instead\n   */\n  getTexture(options) {\n    return this.getTexturePromise(options);\n  }\n  /**\n   * Increases the reference count for a texture.\n   * @param text - The HTMLText instance associated with the texture.\n   */\n  getManagedTexture(text) {\n    const textKey = text.styleKey;\n    if (this._activeTextures[textKey]) {\n      this._increaseReferenceCount(textKey);\n      return this._activeTextures[textKey].promise;\n    }\n    const promise = this._buildTexturePromise(text).then((texture) => {\n      this._activeTextures[textKey].texture = texture;\n      return texture;\n    });\n    this._activeTextures[textKey] = {\n      texture: null,\n      promise,\n      usageCount: 1\n    };\n    return promise;\n  }\n  /**\n   * Gets the current reference count for a texture associated with a text key.\n   * @param textKey - The unique key identifying the text style configuration\n   * @returns The number of Text instances currently using this texture\n   */\n  getReferenceCount(textKey) {\n    return this._activeTextures[textKey]?.usageCount ?? null;\n  }\n  _increaseReferenceCount(textKey) {\n    this._activeTextures[textKey].usageCount++;\n  }\n  /**\n   * Decreases the reference count for a texture.\n   * If the count reaches zero, the texture is cleaned up.\n   * @param textKey - The key associated with the HTMLText instance.\n   */\n  decreaseReferenceCount(textKey) {\n    const activeTexture = this._activeTextures[textKey];\n    if (!activeTexture)\n      return;\n    activeTexture.usageCount--;\n    if (activeTexture.usageCount === 0) {\n      if (activeTexture.texture) {\n        this._cleanUp(activeTexture.texture);\n      } else {\n        activeTexture.promise.then((texture) => {\n          activeTexture.texture = texture;\n          this._cleanUp(activeTexture.texture);\n        }).catch(() => {\n          warn(\"HTMLTextSystem: Failed to clean texture\");\n        });\n      }\n      this._activeTextures[textKey] = null;\n    }\n  }\n  /**\n   * Returns a promise that resolves to a texture for the given HTMLText options.\n   * @param options - The options for the HTMLText.\n   * @returns A promise that resolves to a Texture.\n   */\n  getTexturePromise(options) {\n    return this._buildTexturePromise(options);\n  }\n  async _buildTexturePromise(options) {\n    const { text, style, resolution, textureStyle } = options;\n    const htmlTextData = BigPool.get(HTMLTextRenderData);\n    const fontFamilies = extractFontFamilies(text, style);\n    const fontCSS = await getFontCss(fontFamilies);\n    const measured = measureHtmlText(text, style, fontCSS, htmlTextData);\n    const width = Math.ceil(Math.ceil(Math.max(1, measured.width) + style.padding * 2) * resolution);\n    const height = Math.ceil(Math.ceil(Math.max(1, measured.height) + style.padding * 2) * resolution);\n    const image = htmlTextData.image;\n    const uvSafeOffset = 2;\n    image.width = (width | 0) + uvSafeOffset;\n    image.height = (height | 0) + uvSafeOffset;\n    const svgURL = getSVGUrl(text, style, resolution, fontCSS, htmlTextData);\n    await loadSVGImage(image, svgURL, isSafari() && fontFamilies.length > 0);\n    const resource = image;\n    let canvasAndContext;\n    if (this._createCanvas) {\n      canvasAndContext = getTemporaryCanvasFromImage(image, resolution);\n    }\n    const texture = getPo2TextureFromSource(\n      canvasAndContext ? canvasAndContext.canvas : resource,\n      image.width - uvSafeOffset,\n      image.height - uvSafeOffset,\n      resolution\n    );\n    if (textureStyle)\n      texture.source.style = textureStyle;\n    if (this._createCanvas) {\n      this._renderer.texture.initSource(texture.source);\n      CanvasPool.returnCanvasAndContext(canvasAndContext);\n    }\n    BigPool.return(htmlTextData);\n    return texture;\n  }\n  returnTexturePromise(texturePromise) {\n    texturePromise.then((texture) => {\n      this._cleanUp(texture);\n    }).catch(() => {\n      warn(\"HTMLTextSystem: Failed to clean texture\");\n    });\n  }\n  _cleanUp(texture) {\n    TexturePool.returnTexture(texture, true);\n    texture.source.resource = null;\n    texture.source.uploadMethodId = \"unknown\";\n  }\n  destroy() {\n    this._renderer = null;\n    for (const key in this._activeTextures) {\n      if (this._activeTextures[key])\n        this.returnTexturePromise(this._activeTextures[key].promise);\n    }\n    this._activeTextures = null;\n  }\n}\n/** @ignore */\nHTMLTextSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.WebGPUSystem,\n    ExtensionType.CanvasSystem\n  ],\n  name: \"htmlText\"\n};\n\nexport { HTMLTextSystem };\n//# sourceMappingURL=HTMLTextSystem.mjs.map\n","import { BatchableSprite } from '../../sprite/BatchableSprite.mjs';\n\n\"use strict\";\nclass BatchableText extends BatchableSprite {\n  constructor(renderer) {\n    super();\n    this._renderer = renderer;\n    renderer.runners.resolutionChange.add(this);\n  }\n  resolutionChange() {\n    const text = this.renderable;\n    if (text._autoResolution) {\n      text.onViewUpdate();\n    }\n  }\n  destroy() {\n    const { canvasText } = this._renderer;\n    const refCount = canvasText.getReferenceCount(this.currentKey);\n    if (refCount > 0) {\n      canvasText.decreaseReferenceCount(this.currentKey);\n    } else if (this.texture) {\n      canvasText.returnTexture(this.texture);\n    }\n    this._renderer.runners.resolutionChange.remove(this);\n    this._renderer = null;\n  }\n}\n\nexport { BatchableText };\n//# sourceMappingURL=BatchableText.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { updateTextBounds } from '../utils/updateTextBounds.mjs';\nimport { BatchableText } from './BatchableText.mjs';\n\n\"use strict\";\nclass CanvasTextPipe {\n  constructor(renderer) {\n    this._renderer = renderer;\n  }\n  validateRenderable(text) {\n    const gpuText = this._getGpuText(text);\n    const newKey = text.styleKey;\n    if (gpuText.currentKey !== newKey)\n      return true;\n    return text._didTextUpdate;\n  }\n  addRenderable(text, instructionSet) {\n    const batchableText = this._getGpuText(text);\n    if (text._didTextUpdate) {\n      const resolution = text._autoResolution ? this._renderer.resolution : text.resolution;\n      if (batchableText.currentKey !== text.styleKey || text.resolution !== resolution) {\n        this._updateGpuText(text);\n      }\n      text._didTextUpdate = false;\n      updateTextBounds(batchableText, text);\n    }\n    this._renderer.renderPipes.batch.addToBatch(batchableText, instructionSet);\n  }\n  updateRenderable(text) {\n    const batchableText = this._getGpuText(text);\n    batchableText._batcher.updateElement(batchableText);\n  }\n  _updateGpuText(text) {\n    const batchableText = this._getGpuText(text);\n    if (batchableText.texture) {\n      this._renderer.canvasText.decreaseReferenceCount(batchableText.currentKey);\n    }\n    text._resolution = text._autoResolution ? this._renderer.resolution : text.resolution;\n    batchableText.texture = this._renderer.canvasText.getManagedTexture(text);\n    batchableText.currentKey = text.styleKey;\n  }\n  _getGpuText(text) {\n    return text._gpuData[this._renderer.uid] || this.initGpuText(text);\n  }\n  initGpuText(text) {\n    const batchableText = new BatchableText(this._renderer);\n    batchableText.currentKey = \"--\";\n    batchableText.renderable = text;\n    batchableText.transform = text.groupTransform;\n    batchableText.bounds = { minX: 0, maxX: 1, minY: 0, maxY: 0 };\n    batchableText.roundPixels = this._renderer._roundPixels | text._roundPixels;\n    text._gpuData[this._renderer.uid] = batchableText;\n    return batchableText;\n  }\n  destroy() {\n    this._renderer = null;\n  }\n}\n/** @ignore */\nCanvasTextPipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"text\"\n};\n\nexport { CanvasTextPipe };\n//# sourceMappingURL=CanvasTextPipe.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { TexturePool } from '../../../rendering/renderers/shared/texture/TexturePool.mjs';\nimport { TextureStyle } from '../../../rendering/renderers/shared/texture/TextureStyle.mjs';\nimport { deprecation } from '../../../utils/logging/deprecation.mjs';\nimport { TextStyle } from '../TextStyle.mjs';\nimport { getPo2TextureFromSource } from '../utils/getPo2TextureFromSource.mjs';\nimport { CanvasTextGenerator } from './CanvasTextGenerator.mjs';\n\n\"use strict\";\nclass CanvasTextSystem {\n  constructor(_renderer) {\n    this._activeTextures = {};\n    this._renderer = _renderer;\n  }\n  getTexture(options, _resolution, _style, _textKey) {\n    if (typeof options === \"string\") {\n      deprecation(\"8.0.0\", \"CanvasTextSystem.getTexture: Use object TextOptions instead of separate arguments\");\n      options = {\n        text: options,\n        style: _style,\n        resolution: _resolution\n      };\n    }\n    if (!(options.style instanceof TextStyle)) {\n      options.style = new TextStyle(options.style);\n    }\n    if (!(options.textureStyle instanceof TextureStyle)) {\n      options.textureStyle = new TextureStyle(options.textureStyle);\n    }\n    if (typeof options.text !== \"string\") {\n      options.text = options.text.toString();\n    }\n    const { text, style, textureStyle } = options;\n    const resolution = options.resolution ?? this._renderer.resolution;\n    const { frame, canvasAndContext } = CanvasTextGenerator.getCanvasAndContext({\n      text,\n      style,\n      resolution\n    });\n    const texture = getPo2TextureFromSource(canvasAndContext.canvas, frame.width, frame.height, resolution);\n    if (textureStyle)\n      texture.source.style = textureStyle;\n    if (style.trim) {\n      frame.pad(style.padding);\n      texture.frame.copyFrom(frame);\n      texture.frame.scale(1 / resolution);\n      texture.updateUvs();\n    }\n    if (style.filters) {\n      const filteredTexture = this._applyFilters(texture, style.filters);\n      this.returnTexture(texture);\n      CanvasTextGenerator.returnCanvasAndContext(canvasAndContext);\n      return filteredTexture;\n    }\n    this._renderer.texture.initSource(texture._source);\n    CanvasTextGenerator.returnCanvasAndContext(canvasAndContext);\n    return texture;\n  }\n  /**\n   * Returns a texture that was created wit the above `getTexture` function.\n   * Handy if you are done with a texture and want to return it to the pool.\n   * @param texture - The texture to be returned.\n   */\n  returnTexture(texture) {\n    const source = texture.source;\n    source.resource = null;\n    source.uploadMethodId = \"unknown\";\n    source.alphaMode = \"no-premultiply-alpha\";\n    TexturePool.returnTexture(texture, true);\n  }\n  /**\n   * Renders text to its canvas, and updates its texture.\n   * @deprecated since 8.10.0\n   */\n  renderTextToCanvas() {\n    deprecation(\n      \"8.10.0\",\n      \"CanvasTextSystem.renderTextToCanvas: no longer supported, use CanvasTextSystem.getTexture instead\"\n    );\n  }\n  /**\n   * Gets or creates a managed texture for a Text object. This method handles texture reuse and reference counting.\n   * @param text - The Text object that needs a texture\n   * @returns A Texture instance that represents the rendered text\n   * @remarks\n   * This method performs the following:\n   * 1. Sets the appropriate resolution based on auto-resolution settings\n   * 2. Checks if a texture already exists for the text's style\n   * 3. Creates a new texture if needed or returns an existing one\n   * 4. Manages reference counting for texture reuse\n   */\n  getManagedTexture(text) {\n    text._resolution = text._autoResolution ? this._renderer.resolution : text.resolution;\n    const textKey = text.styleKey;\n    if (this._activeTextures[textKey]) {\n      this._increaseReferenceCount(textKey);\n      return this._activeTextures[textKey].texture;\n    }\n    const texture = this.getTexture({\n      text: text.text,\n      style: text.style,\n      resolution: text._resolution,\n      textureStyle: text.textureStyle\n    });\n    this._activeTextures[textKey] = {\n      texture,\n      usageCount: 1\n    };\n    return texture;\n  }\n  /**\n   * Decreases the reference count for a texture associated with a text key.\n   * When the reference count reaches zero, the texture is returned to the pool.\n   * @param textKey - The unique key identifying the text style configuration\n   * @remarks\n   * This method is crucial for memory management, ensuring textures are properly\n   * cleaned up when they are no longer needed by any Text instances.\n   */\n  decreaseReferenceCount(textKey) {\n    const activeTexture = this._activeTextures[textKey];\n    activeTexture.usageCount--;\n    if (activeTexture.usageCount === 0) {\n      this.returnTexture(activeTexture.texture);\n      this._activeTextures[textKey] = null;\n    }\n  }\n  /**\n   * Gets the current reference count for a texture associated with a text key.\n   * @param textKey - The unique key identifying the text style configuration\n   * @returns The number of Text instances currently using this texture\n   */\n  getReferenceCount(textKey) {\n    return this._activeTextures[textKey]?.usageCount ?? 0;\n  }\n  _increaseReferenceCount(textKey) {\n    this._activeTextures[textKey].usageCount++;\n  }\n  /**\n   * Applies the specified filters to the given texture.\n   *\n   * This method takes a texture and a list of filters, applies the filters to the texture,\n   * and returns the resulting texture. It also ensures that the alpha mode of the resulting\n   * texture is set to 'premultiplied-alpha'.\n   * @param {Texture} texture - The texture to which the filters will be applied.\n   * @param {Filter[]} filters - The filters to apply to the texture.\n   * @returns {Texture} The resulting texture after all filters have been applied.\n   */\n  _applyFilters(texture, filters) {\n    const currentRenderTarget = this._renderer.renderTarget.renderTarget;\n    const resultTexture = this._renderer.filter.generateFilteredTexture({\n      texture,\n      filters\n    });\n    this._renderer.renderTarget.bind(currentRenderTarget, false);\n    return resultTexture;\n  }\n  destroy() {\n    this._renderer = null;\n    for (const key in this._activeTextures) {\n      if (this._activeTextures[key])\n        this.returnTexture(this._activeTextures[key].texture);\n    }\n    this._activeTextures = null;\n  }\n}\n/** @ignore */\nCanvasTextSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.WebGPUSystem,\n    ExtensionType.CanvasSystem\n  ],\n  name: \"canvasText\"\n};\n\nexport { CanvasTextSystem };\n//# sourceMappingURL=CanvasTextSystem.mjs.map\n","import { extensions } from '../extensions/Extensions.mjs';\nimport { ResizePlugin } from './ResizePlugin.mjs';\nimport { TickerPlugin } from './TickerPlugin.mjs';\n\n\"use strict\";\nextensions.add(ResizePlugin);\nextensions.add(TickerPlugin);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../../extensions/Extensions.mjs';\nimport { GraphicsContextSystem } from './shared/GraphicsContextSystem.mjs';\nimport { GraphicsPipe } from './shared/GraphicsPipe.mjs';\n\n\"use strict\";\nextensions.add(GraphicsPipe);\nextensions.add(GraphicsContextSystem);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../../extensions/Extensions.mjs';\nimport { MeshPipe } from './shared/MeshPipe.mjs';\n\n\"use strict\";\nextensions.add(MeshPipe);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../../extensions/Extensions.mjs';\nimport { GlParticleContainerPipe } from './shared/GlParticleContainerPipe.mjs';\nimport { GpuParticleContainerPipe } from './shared/GpuParticleContainerPipe.mjs';\n\n\"use strict\";\nextensions.add(GlParticleContainerPipe);\nextensions.add(GpuParticleContainerPipe);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../../extensions/Extensions.mjs';\nimport { CanvasTextPipe } from './canvas/CanvasTextPipe.mjs';\nimport { CanvasTextSystem } from './canvas/CanvasTextSystem.mjs';\n\n\"use strict\";\nextensions.add(CanvasTextSystem);\nextensions.add(CanvasTextPipe);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../../extensions/Extensions.mjs';\nimport { BitmapTextPipe } from './BitmapTextPipe.mjs';\n\n\"use strict\";\nextensions.add(BitmapTextPipe);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../../extensions/Extensions.mjs';\nimport { HTMLTextPipe } from './HTMLTextPipe.mjs';\nimport { HTMLTextSystem } from './HTMLTextSystem.mjs';\n\n\"use strict\";\nextensions.add(HTMLTextSystem);\nextensions.add(HTMLTextPipe);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../../extensions/Extensions.mjs';\nimport { TilingSpritePipe } from './TilingSpritePipe.mjs';\n\n\"use strict\";\nextensions.add(TilingSpritePipe);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../../extensions/Extensions.mjs';\nimport { NineSliceSpritePipe } from './NineSliceSpritePipe.mjs';\n\n\"use strict\";\nextensions.add(NineSliceSpritePipe);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../extensions/Extensions.mjs';\nimport { FilterPipe } from './FilterPipe.mjs';\nimport { FilterSystem } from './FilterSystem.mjs';\n\n\"use strict\";\nextensions.add(FilterSystem);\nextensions.add(FilterPipe);\n//# sourceMappingURL=init.mjs.map\n"],"names":["programCache","earcut","earcutModule","tempRect","tempTextureMatrix","RECURSION_LIMIT","FLT_EPSILON","PATH_DISTANCE_EPSILON","begin","recursive","vertex","fragment","gpuProgram","glProgram"],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,SAAS,GAAG;AAClB,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS;AAClC,EAAE;AACF,EAAE,IAAI,SAAS,CAAC,KAAK,EAAE;AACvB,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,KAAK;AACnC,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,WAAW,GAAG;AACpB,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW;AACpC,EAAE;AACF,EAAE,IAAI,WAAW,CAAC,KAAK,EAAE;AACzB,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,KAAK;AACrC,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,KAAK,CAAC,IAAI,GAAG,KAAK,EAAE;AACtB,IAAI,IAAI,IAAI,EAAE;AACd,MAAM,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;AAChD,IAAI;AACJ,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI;AAC7B,IAAI,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC7C,IAAI,OAAO,KAAK;AAChB,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,SAAS,CAAC,KAAK,EAAE,KAAK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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181]}